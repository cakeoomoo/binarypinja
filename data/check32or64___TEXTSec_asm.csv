
0,infileELF/test_int,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4006a0","mov rcx, 0x400630","mov rdi, 0x400596",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","sub rsp, 0xc0","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0xb0]","mov esi, 0x400700","mov edx, 0x14","mov rdi, rax","mov rcx, rdx","rep movsq qword ptr [rdi], qword ptr [rsi]","mov dword ptr [rbp - 0xb4], 0",jmp 0x4005fd,"mov eax, dword ptr [rbp - 0xb4]",cdqe ,"mov eax, dword ptr [rbp + rax*4 - 0xb0]","mov esi, eax","mov edi, 0x4006e0","mov eax, 0",call 0x400470,"add dword ptr [rbp - 0xb4], 1","cmp dword ptr [rbp - 0xb4], 0x27",jle 0x4005d6,"mov eax, 0","mov rdx, qword ptr [rbp - 8]","xor rdx, qword ptr fs:[0x28]",je 0x40061f,call 0x400460,leave ,ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax + rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2007ce]",push rbp,"lea rbp, [rip + 0x2007ce]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x400686,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400670,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret
1,infileELF/test_double,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4006a0","mov rcx, 0x400630","mov rdi, 0x400596",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","sub rsp, 0x170","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0x150]","mov esi, 0x400700","mov edx, 0x28","mov rdi, rax","mov rcx, rdx","rep movsq qword ptr [rdi], qword ptr [rsi]","mov dword ptr [rbp - 0x154], 0",jmp 0x40060b,"mov eax, dword ptr [rbp - 0x154]",cdqe ,"mov rax, qword ptr [rbp + rax*8 - 0x150]","mov qword ptr [rbp - 0x168], rax","movsd xmm0, qword ptr [rbp - 0x168]","mov edi, 0x4006e0","mov eax, 1",call 0x400470,"add dword ptr [rbp - 0x154], 1","cmp dword ptr [rbp - 0x154], 0x27",jle 0x4005d6,"mov eax, 0","mov rdx, qword ptr [rbp - 8]","xor rdx, qword ptr fs:[0x28]",je 0x40062d,call 0x400460,leave ,ret ,nop ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2007ce]",push rbp,"lea rbp, [rip + 0x2007ce]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x400686,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400670,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret
2,infileELF/touch,"mov eax, edi","mov ecx, 0x64",push rbx,cdq ,"mov rbx, rsi",idiv ecx,"xor ecx, ecx","lea r8d, [rax + 0x13]","mov esi, edx","sar esi, 0x1f","mov eax, r8d","xor edx, esi","sar eax, 0x1f","xor r8d, eax","cmp edi, 0xfffff894","lea rdi, [rip + 0xd71c]",setge cl,"sub edx, esi","sub r8d, eax","add rcx, rdi","mov r9d, edx","mov rdi, rbx","or rdx, 0xffffffffffffffff","mov esi, 1","xor eax, eax",call 0x2e80,"mov rax, rbx",pop rbx,ret ,nop word ptr [rax + rax],push r15,push r14,"xor r15d, r15d",push r13,push r12,"mov r12d, edi",push rbp,push rbx,"mov rbp, rsi","lea r13, [rip + 0x2111e6]","xor r14d, r14d","sub rsp, 0xf8","mov rdi, qword ptr [rsi]","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0xe8], rax","xor eax, eax",call 0x8e60,"lea rsi, [rip + 0xd960]","mov edi, 6",call 0x2d70,"lea rsi, [rip + 0xcdb2]","lea rdi, [rip + 0xcd9d]",call 0x2ae0,"lea rdi, [rip + 0xcd91]",call 0x2ac0,"lea rdi, [rip + 0x120a]",call 0xfc10,"mov dword ptr [rip + 0x2121bf], 0","mov byte ptr [rip + 0x2121b6], 0","mov byte ptr [rip + 0x2121b0], 0",nop dword ptr [rax + rax],"lea rdx, [rip + 0xcdc5]","xor r8d, r8d","mov rcx, r13","mov rsi, rbp","mov edi, r12d",call 0x2b40,"cmp eax, -1","mov ebx, eax",je 0x3172,"cmp ebx, 0x66",je 0x2f98,jle 0x2ff0,"cmp ebx, 0x72",je 0x30f0,jg 0x3020,"cmp ebx, 0x68",je 0x30e0,"cmp ebx, 0x6d",jne 0x371e,"or dword ptr [rip + 0x21215e], 2",jmp 0x2f98,nop dword ptr [rax + rax],"cmp ebx, 0x61",je 0x3120,jle 0x3078,"cmp ebx, 0x63",je 0x3110,"cmp ebx, 0x64",jne 0x371e,"mov r15, qword ptr [rip + 0x2120ac]",jmp 0x2f98,nop word ptr cs:[rax + rax],"cmp ebx, 0x74",je 0x3130,"add ebx, -0x80",jne 0x371e,"mov r9, qword ptr [rip + 0x211fdf]","mov rsi, qword ptr [rip + 0x212080]","lea rdx, [rip + 0x211079]","lea rcx, [rip + 0xd512]","lea rdi, [rip + 0xccc6]","mov r8d, 4",call 0x40a0,"lea rdx, [rip + 0xd4f9]","mov eax, dword ptr [rdx + rax*4]","or dword ptr [rip + 0x2120d4], eax",jmp 0x2f98,nop dword ptr [rax],"cmp ebx, 0xffffff7d",jne 0x36ee,"lea rax, [rip + 0xccb1]",push 0,"mov rdi, qword ptr [rip + 0x212014]","mov rcx, qword ptr [rip + 0x211f75]","lea r9, [rip + 0xcc80]","lea r8, [rip + 0xcc88]",push rax,"lea rax, [rip + 0xcc97]","lea rdx, [rip + 0xcc3f]","lea rsi, [rip + 0xcbbc]",push rax,"lea rax, [rip + 0xcc91]",push rax,"xor eax, eax",call 0xb040,"add rsp, 0x20","xor edi, edi",call 0x2e10,nop word ptr [rax + rax],"mov byte ptr [rip + 0x21205a], 1",jmp 0x2f98,nop dword ptr [rax],"mov rax, qword ptr [rip + 0x211fc9]","mov byte ptr [rip + 0x212044], 1","mov qword ptr [rip + 0x211ffb], rax",jmp 0x2f98,nop word ptr [rax + rax],"mov byte ptr [rip + 0x21202c], 1",jmp 0x2f98,nop dword ptr [rax],"or dword ptr [rip + 0x21201d], 1",jmp 0x2f98,nop dword ptr [rax],"mov rsi, qword ptr [rip + 0x211f89]","lea rdi, [rip + 0x211fe2]","mov edx, 0xd",call 0x8ad0,"test al, al","mov r14d, eax",je 0x374c,"mov qword ptr [rip + 0x211fca], 0","movdqa xmm0, xmmword ptr [rip + 0x211fba]","movaps xmmword ptr [rip + 0x211fc3], xmm0",jmp 0x2f98,"cmp dword ptr [rip + 0x211fcb], 0",jne 0x3185,"mov dword ptr [rip + 0x211fbf], 3","test r14b, r14b","movzx eax, byte ptr [rip + 0x211fb3]",je 0x33b8,"test r15, r15",jne 0x385e,"test al, al",jne 0x385e,"mov eax, dword ptr [rip + 0x211f04]","cmp eax, r12d",je 0x36fd,"mov byte ptr [rsp + 0xc], 1",jl 0x3290,jmp 0x34c3,"xor r8d, r8d","mov rdx, r13","mov esi, 0xffffff9c","mov edi, r15d","mov byte ptr [rsp + 0x10], r10b",call 0x4290,"test r15d, r15d","mov edx, eax","movzx r10d, byte ptr [rsp + 0x10]",jne 0x320c,"xor edi, edi","mov byte ptr [rsp + 0x18], r10b","mov dword ptr [rsp + 0x10], edx",call 0x2c20,"test eax, eax","mov edx, dword ptr [rsp + 0x10]","movzx r10d, byte ptr [rsp + 0x18]",jne 0x3517,"test edx, edx",je 0x34a8,"test r14d, r14d",jne 0x337b,call 0x2a50,"cmp byte ptr [rip + 0x211f1a], 0",je 0x3234,"cmp dword ptr [rax], 2",je 0x34a8,"mov rsi, r13","mov edi, 4",call 0xa8a0,"lea rsi, [rip + 0xcb95]","mov edx, 5","xor edi, edi","mov r14, rax",call 0x2af0,"mov r13, rax",call 0x2a50,"mov esi, dword ptr [rax]","mov rcx, r14","mov rdx, r13","xor edi, edi","xor eax, eax",call 0x2db0,"xor r10d, r10d","mov eax, dword ptr [rip + 0x211e37]","and byte ptr [rsp + 0xc], r10b","add eax, 1","cmp eax, r12d","mov dword ptr [rip + 0x211e26], eax",jge 0x34c3,cdqe ,"lea rdi, [rip + 0xd4d9]","mov ecx, 2","mov r13, qword ptr [rbp + rax*8]","mov r15d, 1","mov rsi, r13","repe cmpsb byte ptr [rsi], byte ptr [rdi]",seta r9b,setb al,"sub r9d, eax","movsx r14d, r9b","test r14d, r14d",je 0x32dd,"cmp byte ptr [rip + 0x211e7b], 0",jne 0x32d7,"cmp byte ptr [rip + 0x211e70], 0",je 0x361c,"mov r15d, ebx","xor r14d, r14d","mov eax, dword ptr [rip + 0x211e61]","cmp eax, 3",je 0x3305,"cmp eax, 2",je 0x34b3,"sub eax, 1",jne 0x372d,"mov qword ptr [rip + 0x211e33], 0x3ffffffe","cmp byte ptr [rip + 0x211e34], 0","lea rax, [rip + 0x211e0d]","mov ecx, 0","cmove rcx, rax","cmp r15d, -1",sete r10b,"and r10b, byte ptr [rip + 0x211e16]",jne 0x34fa,"cmp r15d, 1",jne 0x31c5,"xor r8d, r8d","xor edx, edx","mov esi, 0xffffff9c","mov edi, 1",call 0x4290,"test eax, eax",je 0x34a8,call 0x2a50,"cmp dword ptr [rax], 9",jne 0x3214,"cmp byte ptr [rip + 0x211dd7], 0",jne 0x34a8,"test r14d, r14d",je 0x3234,"mov rsi, r13","mov edi, 4",call 0xa8a0,"lea rsi, [rip + 0xca3e]","mov r13, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rcx, r13","mov rdx, rax","mov esi, r14d","xor edi, edi","xor eax, eax",call 0x2db0,"xor r10d, r10d",jmp 0x3273,"test al, al",jne 0x3563,"test r15, r15",je 0x3468,"lea r13, [rsp + 0x20]","mov rdi, r13",call 0x4320,"lea rdi, [rip + 0x211d43]","mov rdx, r13","mov rsi, r15",call 0x3980,"cmp dword ptr [rip + 0x211d55], 3","movdqa xmm0, xmmword ptr [rip + 0x211d29]","movaps xmmword ptr [rip + 0x211d32], xmm0",jne 0x31a6,"mov rax, qword ptr [rip + 0x211d15]","cmp rax, qword ptr [rsp + 0x20]",jne 0x31a6,"mov rdx, qword ptr [rip + 0x211d0b]","cmp rdx, qword ptr [rsp + 0x28]",jne 0x31a6,"mov qword ptr [rsp + 0x38], rdx","lea rdi, [rsp + 0x40]","lea rdx, [rsp + 0x30]","xor rax, 1","mov rsi, r15","mov qword ptr [rsp + 0x30], rax",call 0x3980,"mov rax, qword ptr [rsp + 0x30]","cmp qword ptr [rsp + 0x40], rax",jne 0x31a6,"mov rax, qword ptr [rsp + 0x38]","cmp qword ptr [rsp + 0x48], rax",jne 0x31a6,"mov eax, r12d","sub eax, dword ptr [rip + 0x211c3f]","sub eax, 1",jg 0x367e,"cmp dword ptr [rip + 0x211cc3], 3",je 0x3672,"mov qword ptr [rip + 0x211c96], 0x3fffffff","mov qword ptr [rip + 0x211c9b], 0x3fffffff",jmp 0x31a6,nop word ptr [rax + rax],"mov r10d, 1",jmp 0x3273,"mov qword ptr [rip + 0x211c6a], 0x3ffffffe",jmp 0x3305,"movzx r14d, byte ptr [rsp + 0xc]","xor r14d, 1","mov rdx, qword ptr [rsp + 0xe8]","xor rdx, qword ptr fs:[0x28]","movzx eax, r14b",jne 0x3728,"add rsp, 0xf8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,"mov rdx, r13","mov r8d, 0x100","mov esi, 0xffffff9c","mov edi, r15d",call 0x4290,"mov edx, eax",jmp 0x320c,"mov rsi, r13","mov edi, 4","mov byte ptr [rsp + 0x10], r10b",call 0xa8a0,"lea rsi, [rip + 0xc88a]","mov edx, 5","xor edi, edi","mov r14, rax",call 0x2af0,"mov r13, rax",call 0x2a50,"mov esi, dword ptr [rax]","mov rcx, r14","mov rdx, r13","xor edi, edi","xor eax, eax",call 0x2db0,"movzx r10d, byte ptr [rsp + 0x10]",jmp 0x3273,"cmp byte ptr [rip + 0x211bd7], 0","mov r13, qword ptr [rip + 0x211b8f]","lea rdx, [rsp + 0x50]","mov edi, 1","mov rsi, r13",je 0x3663,call 0x2b20,"test eax, eax",setne al,"test al, al",jne 0x381f,"mov rax, qword ptr [rsp + 0x98]","test r15, r15","mov qword ptr [rip + 0x211b78], rax","mov rax, qword ptr [rsp + 0xa0]","mov qword ptr [rip + 0x211b71], rax","mov rax, qword ptr [rsp + 0xa8]","mov qword ptr [rip + 0x211b6a], rax","mov rax, qword ptr [rsp + 0xb0]","mov qword ptr [rip + 0x211b63], rax",je 0x31a6,"mov eax, dword ptr [rip + 0x211b63]","test al, 1",je 0x35fd,"lea rdx, [rip + 0x211b34]","mov rsi, r15","mov rdi, rdx",call 0x3980,"mov eax, dword ptr [rip + 0x211b47]","test al, 2",je 0x31a6,"lea rdx, [rip + 0x211b24]","mov rsi, r15","mov rdi, rdx",call 0x3980,jmp 0x31a6,"xor edi, edi","mov ecx, 0x1b6","mov edx, 0x941","mov rsi, r13","xor r14d, r14d",call 0x4230,"cmp eax, -1","mov r15d, eax",jne 0x32dd,call 0x2a50,"mov r14d, dword ptr [rax]","lea eax, [r14 - 0x15]","cmp eax, 1",jbe 0x32d7,"cmp r14d, 1",jne 0x32dd,jmp 0x32d7,call 0x2ce0,"test eax, eax",setne al,jmp 0x358e,"mov byte ptr [rip + 0x211ac7], 1",jmp 0x31a6,call 0x8dd0,"cmp eax, 0x30daf",jg 0x347a,"movsxd rax, dword ptr [rip + 0x211a1b]","lea rdi, [rip + 0x211a84]","mov edx, 0x12","mov rsi, qword ptr [rbp + rax*8]",call 0x8ad0,"test al, al",je 0x347a,"mov qword ptr [rip + 0x211a6a], 0","lea rdi, [rip + 0xc6ab]","movdqa xmm0, xmmword ptr [rip + 0x211a53]","movaps xmmword ptr [rip + 0x211a5c], xmm0",call 0x29f0,"test rax, rax",je 0x3782,"add dword ptr [rip + 0x2119c7], 1",jmp 0x31a6,"cmp ebx, 0xffffff7e",jne 0x371e,"xor edi, edi",call 0x39d0,"lea rsi, [rip + 0xc67c]","mov edx, 5","xor edi, edi",call 0x2af0,"xor esi, esi","mov rdx, rax","xor edi, edi","xor eax, eax",call 0x2db0,"mov edi, 1",call 0x39d0,call 0x2b30,"lea rcx, [rip + 0xce1c]","lea rsi, [rip + 0xc65a]","lea rdi, [rip + 0xc65f]","mov edx, 0x99",call 0x2be0,"mov rdi, qword ptr [rip + 0x21196d]",call 0xab70,"lea rsi, [rip + 0xc505]","mov rbx, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rcx, rbx","mov rdx, rax","xor esi, esi","mov edi, 1","xor eax, eax",call 0x2db0,"lea rdi, [rip + 0x211997]",call 0x2a30,"test rax, rax",je 0x36e2,"mov r10d, dword ptr [rax]","mov r9d, dword ptr [rax + 4]","lea rsi, [rip + 0xcd5b]","mov r15d, dword ptr [rax + 8]","mov r14d, dword ptr [rax + 0xc]","xor edi, edi","mov edx, dword ptr [rax + 0x10]","movsxd r13, dword ptr [rax + 0x14]","movsxd rax, dword ptr [rip + 0x2118f3]","mov dword ptr [rsp + 0x1c], r10d","mov dword ptr [rsp + 0x18], r9d","add edx, 1","mov dword ptr [rsp + 0xc], edx","mov edx, 5","add r13, 0x76c","mov rcx, qword ptr [rbp + rax*8]","mov qword ptr [rsp + 0x10], rcx",call 0x2af0,"mov r10d, dword ptr [rsp + 0x1c]","mov rdx, rax","mov r8, r13","xor esi, esi","xor edi, edi","xor eax, eax",push r10,"mov r9d, dword ptr [rsp + 0x20]",push r9,push r15,push r14,"mov r9d, dword ptr [rsp + 0x2c]","mov rcx, qword ptr [rsp + 0x30]",call 0x2db0,"add rsp, 0x20",jmp 0x36e2,"mov rsi, r13","mov edi, 4",call 0xa8a0,"lea rsi, [rip + 0xccad]","mov edx, 5","xor edi, edi","mov rbp, rax",call 0x2af0,"mov rbx, rax",call 0x2a50,"mov esi, dword ptr [rax]","mov rcx, rbp","mov rdx, rbx","mov edi, 1","xor eax, eax",call 0x2db0,"mov edx, 5","lea rsi, [rip + 0xcc46]",jmp 0x3709,nop ,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"lea r8, [rip + 0xc37a]","lea rcx, [rip + 0xc303]","lea rdi, [rip - 0x994]",call qword ptr [rip + 0x21172e],hlt ,nop dword ptr [rax + rax],"lea rdi, [rip + 0x2117f9]",push rbp,"lea rax, [rip + 0x2117f1]","cmp rax, rdi","mov rbp, rsp",je 0x38d0,"mov rax, qword ptr [rip + 0x211702]","test rax, rax",je 0x38d0,pop rbp,jmp rax,nop word ptr cs:[rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"lea rdi, [rip + 0x2117b9]","lea rsi, [rip + 0x2117b2]",push rbp,"sub rsi, rdi","mov rbp, rsp","sar rsi, 3","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x3920,"mov rax, qword ptr [rip + 0x2116c9]","test rax, rax",je 0x3920,pop rbp,jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"cmp byte ptr [rip + 0x2117b1], 0",jne 0x3968,"cmp qword ptr [rip + 0x21169f], 0",push rbp,"mov rbp, rsp",je 0x3953,"mov rdi, qword ptr [rip + 0x2116ba]",call 0x2e90,call 0x38a0,"mov byte ptr [rip + 0x211789], 1",pop rbp,ret ,nop dword ptr [rax],ret ,nop word ptr [rax + rax],push rbp,"mov rbp, rsp",pop rbp,jmp 0x38e0,nop word ptr [rax + rax],push rbx,"mov rbx, rsi",call 0x89a0,"test al, al",je 0x398f,pop rbx,ret ,"mov rdi, rbx",call 0xab70,"lea rsi, [rip + 0xc2c6]","mov rbx, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rcx, rbx","mov rdx, rax","xor esi, esi","mov edi, 1","xor eax, eax",call 0x2db0,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],push r12,push rbp,"mov edx, 5",push rbx,"mov ebp, edi","add rsp, -0x80","mov rbx, qword ptr [rip + 0x211772]","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x78], rax","xor eax, eax","test edi, edi",je 0x3a28,"lea rsi, [rip + 0xc43f]","xor edi, edi",call 0x2af0,"mov rdi, qword ptr [rip + 0x2116d1]","mov rdx, rax","mov rcx, rbx","mov esi, 1","xor eax, eax",call 0x2e30,"mov edi, ebp",call 0x2e10,"lea rsi, [rip + 0xc439]","xor edi, edi",call 0x2af0,"mov rdx, rbx","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"mov rbx, qword ptr [rip + 0x211659]","lea rsi, [rip + 0xc432]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x211634]","lea rsi, [rip + 0xc535]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x21160f]","lea rsi, [rip + 0xc560]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x2115ea]","lea rsi, [rip + 0xc613]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x2115c5]","lea rsi, [rip + 0xc6f6]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x2115a0]","lea rsi, [rip + 0xc829]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x21157b]","lea rsi, [rip + 0xc834]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax",call 0x2c50,"mov rbx, qword ptr [rip + 0x211556]","lea rsi, [rip + 0xc847]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax","lea rbx, [rip + 0xc109]",call 0x2c50,"lea rax, [rip + 0xc103]","lea rcx, [rip + 0xc13d]","lea rdx, [rip + 0xc14a]","mov qword ptr [rsp + 0x60], 0","mov qword ptr [rsp + 0x68], 0","mov qword ptr [rsp], rax","lea rax, [rip + 0xc0da]","mov qword ptr [rsp + 0x30], rcx","lea rcx, [rip + 0xc117]","mov qword ptr [rsp + 0x50], rdx","mov qword ptr [rsp + 8], rax","lea rax, [rip + 0xc135]","mov qword ptr [rsp + 0x40], rcx","mov qword ptr [rsp + 0x10], rax","lea rax, [rip + 0xc0bc]","mov qword ptr [rsp + 0x18], rax","lea rax, [rip + 0xc0c6]","mov qword ptr [rsp + 0x20], rax","lea rax, [rip + 0xc0c4]","mov qword ptr [rsp + 0x28], rax","mov qword ptr [rsp + 0x38], rax","mov qword ptr [rsp + 0x48], rax","mov qword ptr [rsp + 0x58], rax","mov rax, rsp",nop word ptr cs:[rax + rax],"add rax, 0x10","mov rdi, qword ptr [rax]","test rdi, rdi",je 0x3c28,"mov ecx, 6","mov rsi, rbx","repe cmpsb byte ptr [rsi], byte ptr [rdi]",jne 0x3c10,"mov r12, qword ptr [rax + 8]","xor edi, edi","mov edx, 5","lea rsi, [rip + 0xc0a6]","test r12, r12",je 0x3d04,call 0x2af0,"lea rcx, [rip + 0xc799]","lea rdx, [rip + 0xc0a1]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"xor esi, esi","mov edi, 5",call 0x2d70,"test rax, rax",je 0x3c92,"lea rsi, [rip + 0xc088]","mov edx, 3","mov rdi, rax",call 0x2a60,"test eax, eax",jne 0x3d99,"lea rsi, [rip + 0xc7bf]","xor edi, edi","mov edx, 5",call 0x2af0,"lea rcx, [rip + 0xbfcf]","lea rdx, [rip + 0xc735]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"cmp r12, rbx","lea rcx, [rip + 0xbfd1]","lea rbx, [rip + 0xcbd3]","cmove rbx, rcx","lea rsi, [rip + 0xc79a]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rcx, rbx","mov rsi, rax","mov rdx, r12","mov edi, 1","xor eax, eax",call 0x2d80,jmp 0x3a21,call 0x2af0,"lea rcx, [rip + 0xc6d8]","lea rdx, [rip + 0xbfe0]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"xor esi, esi","mov edi, 5",call 0x2d70,"test rax, rax",je 0x3d4f,"lea rsi, [rip + 0xbfc7]","mov edx, 3","mov rdi, rax",call 0x2a60,"test eax, eax",jne 0x3d92,"lea rsi, [rip + 0xc702]","mov edx, 5","xor edi, edi","lea r12, [rip + 0xbf17]","lea rbx, [rip + 0xbf32]",call 0x2af0,"lea rcx, [rip + 0xbf04]","lea rdx, [rip + 0xc66a]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,jmp 0x3cd7,"lea r12, [rip + 0xbee2]","lea rsi, [rip + 0xc670]","xor edi, edi","mov edx, 5",call 0x2af0,"lea rdx, [rip + 0xbec8]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,jmp 0x3c92,nop word ptr [rax + rax],"mov edi, 1",jmp 0x39d0,nop word ptr [rax + rax],push r15,push r14,"mov r15, rsi",push r13,push r12,"mov r13, rcx",push rbp,push rbx,"mov rbp, rdx","sub rsp, 0x28","mov qword ptr [rsp + 8], rdi","mov qword ptr [rsp + 0x18], rdx",call 0x2b10,"mov r14, qword ptr [r15]","mov qword ptr [rsp], -1","test r14, r14",je 0x3ecd,"mov r12, rax","mov byte ptr [rsp + 0x17], 0","xor ebx, ebx",jmp 0x3e77,nop word ptr cs:[rax + rax],"mov rax, qword ptr [rsp + 0x18]","test rax, rax",je 0x3ee0,"mov rdi, qword ptr [rsp]","mov rdx, r13","mov rsi, rbp","imul rdi, r13","add rdi, rax",call 0x2c40,"test eax, eax","movzx eax, byte ptr [rsp + 0x17]","mov ecx, 1","cmovne eax, ecx","mov byte ptr [rsp + 0x17], al","add rbx, 1","add rbp, r13","mov r14, qword ptr [r15 + rbx*8]","test r14, r14",je 0x3eb8,"mov rsi, qword ptr [rsp + 8]","mov rdx, r12","mov rdi, r14",call 0x2a60,"test eax, eax",jne 0x3e67,"mov rdi, r14",call 0x2b10,"cmp rax, r12",je 0x3ef0,"cmp qword ptr [rsp], -1",jne 0x3e30,"mov qword ptr [rsp], rbx","add rbx, 1","add rbp, r13","mov r14, qword ptr [r15 + rbx*8]","test r14, r14",jne 0x3e77,nop dword ptr [rax + rax],"cmp byte ptr [rsp + 0x17], 0","mov rax, -2","cmove rax, qword ptr [rsp]","mov qword ptr [rsp], rax","mov rax, qword ptr [rsp]","add rsp, 0x28",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,"mov byte ptr [rsp + 0x17], 1",jmp 0x3e67,nop word ptr [rax + rax],"mov qword ptr [rsp], rbx",jmp 0x3ecd,nop word ptr cs:[rax + rax],"cmp rdx, -1",push r12,"mov edx, 5",push rbp,"mov r12, rsi",push rbx,"mov rbp, rdi",je 0x3f60,"lea rsi, [rip + 0xc678]","xor edi, edi",call 0x2af0,"mov rbx, rax","mov rsi, rbp","mov edi, 1",call 0xab50,"mov rdx, r12","mov rbp, rax","mov esi, 8","xor edi, edi",call 0xa780,"mov r8, rbp","mov rdx, rbx","mov rcx, rax",pop rbx,pop rbp,pop r12,"xor esi, esi","xor edi, edi","xor eax, eax",jmp 0x2db0,nop dword ptr [rax],"lea rsi, [rip + 0xc612]","xor edi, edi",call 0x2af0,"mov rbx, rax",jmp 0x3f26,nop dword ptr [rax],nop word ptr cs:[rax + rax],push r15,push r14,"mov r14, rdi",push r13,push r12,"xor edi, edi",push rbp,push rbx,"mov rbp, rsi","lea rsi, [rip + 0xc618]","mov r12, rdx","mov edx, 5","sub rsp, 8","mov rbx, qword ptr [rip + 0x211134]",call 0x2af0,"mov rdi, rax","mov rsi, rbx",call 0x2c50,"mov r15, qword ptr [r14]","test r15, r15",je 0x4058,"xor r13d, r13d","xor ebx, ebx",jmp 0x4008,nop ,"mov rdi, r15","add rbx, 1","mov r13, rbp",call 0xab70,"mov rdi, qword ptr [rip + 0x2110fa]","lea rdx, [rip + 0xc5d9]","mov rcx, rax","mov esi, 1","xor eax, eax","add rbp, r12",call 0x2e30,"mov r15, qword ptr [r14 + rbx*8]","test r15, r15",je 0x4058,"test rbx, rbx",je 0x3fd0,"mov rdx, r12","mov rsi, rbp","mov rdi, r13",call 0x2c40,"test eax, eax",jne 0x3fd0,"mov rdi, r15","add rbx, 1","add rbp, r12",call 0xab70,"mov rdi, qword ptr [rip + 0x2110ab]","lea rdx, [rip + 0xc592]","mov rcx, rax","mov esi, 1","xor eax, eax",call 0x2e30,"mov r15, qword ptr [r14 + rbx*8]","test r15, r15",jne 0x4008,nop dword ptr [rax],"mov rdi, qword ptr [rip + 0x211081]","mov rax, qword ptr [rdi + 0x28]","cmp rax, qword ptr [rdi + 0x30]",jae 0x4088,"lea rdx, [rax + 1]","mov qword ptr [rdi + 0x28], rdx","mov byte ptr [rax], 0xa","add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax + rax],"add rsp, 8","mov esi, 0xa",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,jmp 0x2b90,push r15,push r14,"mov r14, rdi",push r13,push r12,"mov r12, rsi",push rbp,push rbx,"mov rbp, rcx","mov rbx, rdx","mov rcx, r8","mov rdx, rbp","sub rsp, 8","mov rsi, rbx","mov rdi, r12","mov r15, r8","mov r13, r9",call 0x3de0,"test rax, rax",js 0x40e5,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,"mov rdx, rax","mov rsi, r12","mov rdi, r14",call 0x3f00,"mov rdx, r15","mov rsi, rbp","mov rdi, rbx",call 0x3f80,call r13,"mov rax, -1",jmp 0x40d6,nop dword ptr [rax],push r14,push r13,push r12,push rbp,push rbx,"mov r14, qword ptr [rsi]","test r14, r14",je 0x4151,"mov r12, rcx","mov r13, rdi","mov rbp, rdx","lea rbx, [rsi + 8]",jmp 0x413f,nop ,"mov r14, qword ptr [rbx]","add rbp, r12","add rbx, 8","test r14, r14",je 0x4151,"mov rdx, r12","mov rsi, rbp","mov rdi, r13",call 0x2c40,"test eax, eax",jne 0x4130,pop rbx,"mov rax, r14",pop rbp,pop r12,pop r13,pop r14,ret ,nop dword ptr [rax],"mov qword ptr [rip + 0x210fe9], rdi",ret ,nop dword ptr [rax + rax],"mov byte ptr [rip + 0x210fd1], dil",ret ,nop dword ptr [rax + rax],push rbp,push rbx,"sub rsp, 8","mov rdi, qword ptr [rip + 0x210f1b]",call 0xbb40,"test eax, eax",je 0x41ac,call 0x2a50,"cmp byte ptr [rip + 0x210fa6], 0","mov rbx, rax",je 0x41c3,"cmp dword ptr [rax], 0x20",jne 0x41c3,"mov rdi, qword ptr [rip + 0x210f2d]",call 0xbb40,"test eax, eax",jne 0x4202,"add rsp, 8",pop rbx,pop rbp,ret ,"lea rsi, [rip + 0xc409]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, qword ptr [rip + 0x210f73]","mov rbp, rax","test rdi, rdi",je 0x420d,call 0xa970,"mov esi, dword ptr [rbx]","lea rdx, [rip + 0xc3ec]","mov rcx, rax","mov r8, rbp","xor edi, edi","xor eax, eax",call 0x2db0,"mov edi, dword ptr [rip + 0x210e18]",call 0x2a80,"mov esi, dword ptr [rbx]","lea rdx, [rip + 0xc3ba]","mov rcx, rax","xor edi, edi","xor eax, eax",call 0x2db0,jmp 0x4202,nop word ptr cs:[rax + rax],nop ,push r13,push r12,"xor eax, eax",push rbp,push rbx,"mov ebp, edi","mov rdi, rsi","mov esi, edx","mov edx, ecx","sub rsp, 8",call 0x2dc0,"cmp ebp, eax","mov ebx, eax",je 0x4279,"test eax, eax",js 0x4279,"mov esi, ebp","mov edi, eax",call 0x2b60,"mov r12d, eax",call 0x2a50,"mov r13d, dword ptr [rax]","mov rbp, rax","mov edi, ebx",call 0x2c20,"mov ebx, r12d","mov dword ptr [rbp], r13d","add rsp, 8","mov eax, ebx",pop rbx,pop rbp,pop r12,pop r13,ret ,nop word ptr cs:[rax + rax],push r13,push r12,"mov r13d, r8d",push rbp,push rbx,"mov r12d, esi","mov rbx, rdx","mov rbp, rcx","sub rsp, 8","test edi, edi",jns 0x42d0,"test rdx, rdx",je 0x4300,"mov ecx, r13d","mov rdx, rbp","mov rsi, rbx","mov edi, r12d",call 0x2a20,"cmp eax, 1",je 0x4300,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,ret ,"mov rsi, rcx",call 0x2df0,"test rbx, rbx",je 0x42c0,"cmp eax, -1",jne 0x42c0,call 0x2a50,"cmp dword ptr [rax], 0x26",je 0x42af,"add rsp, 8","mov eax, 0xffffffff",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax],call 0x2a50,"mov dword ptr [rax], 9","add rsp, 8","mov eax, 0xffffffff",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax + rax],push rbx,"mov rsi, rdi","mov rbx, rdi","xor edi, edi","sub rsp, 0x20","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x18], rax","xor eax, eax",call 0x2aa0,"test eax, eax",je 0x4364,"mov rdi, rsp","xor esi, esi",call 0x2bd0,"mov rax, qword ptr [rsp]","mov qword ptr [rbx], rax","imul rax, qword ptr [rsp + 8], 0x3e8","mov qword ptr [rbx + 8], rax","mov rax, qword ptr [rsp + 0x18]","xor rax, qword ptr fs:[0x28]",jne 0x437a,"add rsp, 0x20",pop rbx,ret ,call 0x2b30,nop ,"mov rax, qword ptr [rdi + 0xa8]","mov r8, qword ptr [rsp + 0x10]","mov r9, qword ptr [rsp + 0x18]","test rax, rax",je 0x43d8,"cmp qword ptr [rdi + 0x30], 0",jne 0x43d8,"cmp byte ptr [rdi + 0xa1], 0",jne 0x43d8,"cmp qword ptr [rdi + 0xc8], 0",jne 0x43ba,"cmp r9, 2",jle 0x44d8,"mov rax, qword ptr [rsp + 0x18]","mov byte ptr [rdi + 0xd8], 1","movdqu xmm0, xmmword ptr [rsp + 8]","mov qword ptr [rdi + 0x30], rax","movups xmmword ptr [rdi + 0x20], xmm0",ret ,nop dword ptr [rax],"cmp r9, 4",jg 0x4440,"add qword ptr [rdi + 0xc8], 1","cmp r9, 2",jle 0x44e8,"mov rax, r8","movabs rdx, 0xa3d70a3d70a3d70b",imul rdx,"mov rax, r8","sar rax, 0x3f","add rdx, r8","sar rdx, 6","sub rdx, rax","lea rax, [rdx + rdx*4]","mov qword ptr [rdi + 0x48], rdx","lea rax, [rax + rax*4]","shl rax, 2","sub r8, rax","mov qword ptr [rdi + 0x50], r8","mov qword ptr [rdi + 0x58], 0","mov qword ptr [rdi + 0x60], 0","mov dword ptr [rdi + 0x1c], 2",ret ,"add rax, 1","movabs rsi, 0xa3d70a3d70a3d70b","mov r10, r8","mov qword ptr [rdi + 0xa8], rax","mov rax, r8","sar r10, 0x3f",imul rsi,"sub r9, 4","mov qword ptr [rdi + 0x30], r9","lea rcx, [rdx + r8]","mov rdx, r8","sar rcx, 6","sub rcx, r10","lea rax, [rcx + rcx*4]","lea rax, [rax + rax*4]","shl rax, 2","sub rdx, rax","mov rax, rcx","mov qword ptr [rdi + 0x40], rdx",imul rsi,"mov rax, rcx","sar rax, 0x3f","lea rsi, [rdx + rcx]","movabs rdx, 0x346dc5d63886594b","sar rsi, 6","sub rsi, rax","lea rax, [rsi + rsi*4]","lea rax, [rax + rax*4]","shl rax, 2","sub rcx, rax","mov rax, r8",imul rdx,"mov qword ptr [rdi + 0x38], rcx","sar rdx, 0xb","sub rdx, r10","mov qword ptr [rdi + 0x28], rdx",ret ,nop word ptr [rax + rax],"mov qword ptr [rdi + 0xc8], 1",nop dword ptr [rax + rax],"mov qword ptr [rdi + 0x48], r8","mov qword ptr [rdi + 0x50], 0",jmp 0x4428,nop dword ptr [rax],"mov eax, edi","mov edx, 0x91a2b3c5",push r12,imul edx,push rbp,push rbx,"mov eax, edi","mov ecx, edi","mov r12, rsi","sar eax, 0x1f","sar ecx, 0x1f","mov ebp, edi","lea ebx, [rdx + rdi]","and ecx, 2","mov rdx, -1","lea r8d, [rcx + 0x2b]","lea rcx, [rip + 0xc0b2]","mov esi, 1","sar ebx, 0xb","mov rdi, r12","sub ebx, eax","mov eax, ebx","sar eax, 0x1f","mov r9d, eax","xor r9d, ebx","imul ebx, ebx, 0xe10","sub r9d, eax","xor eax, eax",call 0x2e80,"sub ebp, ebx",je 0x45c2,cdqe ,"mov ecx, 0x88888889","mov r8d, 0xcccccccd","lea rsi, [r12 + rax]","mov eax, ebp","sar eax, 0x1f","xor ebp, eax","mov byte ptr [rsi], 0x3a","sub ebp, eax","mov eax, ebp",mul ecx,"mov eax, ebp","mov ecx, edx","mov edi, edx","mov edx, 0x1b4e81b5",mul edx,"shr ecx, 5","shr edi, 5","mov eax, ecx","shr edx, 6","add edx, 0x30","mov byte ptr [rsi + 1], dl",mul r8d,"imul edi, edi, 0x3c","shr edx, 3","lea eax, [rdx + rdx*4]","add eax, eax","sub ecx, eax","lea rax, [rsi + 3]","add ecx, 0x30","sub ebp, edi","mov byte ptr [rsi + 2], cl","mov edi, ebp",jne 0x45d0,"mov byte ptr [rax], 0","mov rax, r12",pop rbx,pop rbp,pop r12,ret ,nop word ptr [rax + rax],"mov eax, ebp","mov byte ptr [rsi + 3], 0x3a",mul r8d,"shr edx, 3","lea eax, [rdx + 0x30]","lea edx, [rdx + rdx*4]","add edx, edx","mov byte ptr [rsi + 4], al","lea rax, [rsi + 6]","sub edi, edx","add edi, 0x30","mov byte ptr [rsi + 5], dil",jmp 0x45bf,nop word ptr cs:[rax + rax],push rbx,"mov rbx, rdi","sub rsp, 0xd0","test al, al","mov qword ptr [rsp + 0x28], rsi","mov qword ptr [rsp + 0x30], rdx","mov qword ptr [rsp + 0x38], rcx","mov qword ptr [rsp + 0x40], r8","mov qword ptr [rsp + 0x48], r9",je 0x465f,"movaps xmmword ptr [rsp + 0x50], xmm0","movaps xmmword ptr [rsp + 0x60], xmm1","movaps xmmword ptr [rsp + 0x70], xmm2","movaps xmmword ptr [rsp + 0x80], xmm3","movaps xmmword ptr [rsp + 0x90], xmm4","movaps xmmword ptr [rsp + 0xa0], xmm5","movaps xmmword ptr [rsp + 0xb0], xmm6","movaps xmmword ptr [rsp + 0xc0], xmm7","lea rdi, [rip + 0xbf91]","mov edx, 6","mov esi, 1","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x18], rax","xor eax, eax","mov rcx, qword ptr [rip + 0x210a59]",call 0x2e20,"lea rax, [rsp + 0xe0]","mov rdi, qword ptr [rip + 0x210a45]","mov rdx, rsp","mov rsi, rbx","mov dword ptr [rsp], 8","mov dword ptr [rsp + 4], 0x30","mov qword ptr [rsp + 8], rax","lea rax, [rsp + 0x20]","mov qword ptr [rsp + 0x10], rax",call 0xba40,"mov rax, qword ptr [rsp + 0x18]","xor rax, qword ptr fs:[0x28]",jne 0x46dd,"add rsp, 0xd0",pop rbx,ret ,call 0x2b30,nop dword ptr [rax],nop word ptr cs:[rax + rax],push rbx,"mov rbx, rsi","sub rsp, 0x50","mov rsi, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x48], rsi","xor esi, esi","cmp rcx, -1","mov qword ptr [rsp + 8], rcx",je 0x4760,"mov ecx, dword ptr [rbx]","mov eax, dword ptr [rbx + 4]","xor ecx, dword ptr [rdx]","xor eax, dword ptr [rdx + 4]","or ecx, eax","mov eax, dword ptr [rbx + 8]","xor eax, dword ptr [rdx + 8]","or ecx, eax","mov eax, dword ptr [rbx + 0xc]","xor eax, dword ptr [rdx + 0xc]","or ecx, eax","mov eax, dword ptr [rbx + 0x10]","xor eax, dword ptr [rdx + 0x10]","or ecx, eax","mov eax, dword ptr [rbx + 0x14]","xor eax, dword ptr [rdx + 0x14]","or ecx, eax",sete al,"mov rdi, qword ptr [rsp + 0x48]","xor rdi, qword ptr fs:[0x28]",jne 0x477b,"add rsp, 0x50",pop rbx,ret ,nop dword ptr [rax + rax],"lea rdx, [rsp + 0x10]","lea rsi, [rsp + 8]",call 0xb840,"mov rdx, rax","xor eax, eax","test rdx, rdx",jne 0x4713,jmp 0x4742,call 0x2b30,"mov r8, rdx","xor edi, 1","lea rdx, [rip + 0xbe71]","movzx edi, dil","sub rsp, 8","mov rcx, rsi","add rdx, rdi","mov rdi, qword ptr [rip + 0x21093e]","mov esi, 1","xor eax, eax",call 0x2e30,"mov eax, 1","add rsp, 8",ret ,nop dword ptr [rax + rax],"cmp rcx, 2","mov r9, rdx",jg 0x4810,"test r8, r8",js 0x4860,"xor ecx, ecx","imul r9, r9, 0x3c",seto cl,"test sil, sil",jne 0x4850,"xor edx, edx","add r9, r8",seto dl,"xor eax, eax","or ecx, edx",jne 0x480c,"lea rdx, [r9 + 0x5a0]","xor eax, eax","cmp rdx, 0xb40",ja 0x480c,"imul r9d, r9d, 0x3c","mov eax, 1","mov dword ptr [rdi], r9d",ret ,nop ,"test r8, r8",jns 0x47d2,"mov rax, r9","movabs rdx, 0xa3d70a3d70a3d70b",imul rdx,"mov rax, r9","sar rax, 0x3f","lea rcx, [rdx + r9]","sar rcx, 6","sub rcx, rax","lea rax, [rcx + rcx*4]","mov rcx, r9","lea rax, [rax + rax*4]","shl rax, 2","sub rcx, rax",jmp 0x486e,nop dword ptr [rax + rax],"xor edx, edx","sub r9, r8",seto dl,jmp 0x47e8,nop word ptr [rax + rax],"lea rax, [rdx + rdx*4]","xor ecx, ecx","lea r9, [rax + rax*4]","shl r9, 2","mov rax, r9","movabs rdx, 0xa3d70a3d70a3d70b",imul rdx,"add rdx, r9","sar r9, 0x3f","sar rdx, 6","sub rdx, r9","mov rax, rdx","shl rax, 4","sub rax, rdx","lea r9, [rcx + rax*4]",jmp 0x47ee,nop ,push r12,"mov r12, rdi",push rbp,"mov rbp, rsi",push rbx,"lea rsi, [rip + 0xbd56]","lea rbx, [rip + 0x20fde8]",jmp 0x48cc,nop word ptr [rax + rax],"add rbx, 0x10","mov rsi, qword ptr [rbx]","test rsi, rsi",je 0x48e0,"mov rdi, rbp",call 0x2c70,"test eax, eax",jne 0x48c0,"mov rax, rbx",pop rbx,pop rbp,pop r12,ret ,"mov rsi, qword ptr [r12 + 0xe8]","lea rbx, [r12 + 0xe8]","test rsi, rsi",jne 0x493c,nop dword ptr [rax],"lea rbx, [rip + 0x20faa1]","lea rsi, [rip + 0xbd05]",jmp 0x491c,nop dword ptr [rax + rax],"add rbx, 0x10","mov rsi, qword ptr [rbx]","test rsi, rsi",je 0x4950,"mov rdi, rbp",call 0x2c70,"test eax, eax",jne 0x4910,jmp 0x48d8,nop word ptr [rax + rax],"add rbx, 0x10","mov rsi, qword ptr [rbx]","test rsi, rsi",je 0x48f8,"mov rdi, rbp",call 0x2c70,"test eax, eax",jne 0x4930,"mov rax, rbx",pop rbx,pop rbp,pop r12,ret ,"xor ebx, ebx","mov rax, rbx",pop rbx,pop rbp,pop r12,ret ,nop word ptr [rax + rax],push rbp,push rbx,"mov rbx, rsi","lea rsi, [rip + 0xbca3]","mov rbp, rdi","mov edx, 5","sub rsp, 8","xor edi, edi",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,"mov rsi, qword ptr [rbx + 0x68]","test rsi, rsi",jne 0x4b20,"mov rsi, qword ptr [rbx + 0x70]","test rsi, rsi",je 0x4a20,"xor edi, edi","lea rdx, [rip + 0xbc8d]",call 0x4780,"mov rsi, qword ptr [rbx + 0x78]","movzx edi, al","test rsi, rsi",jne 0x4a90,"mov rsi, qword ptr [rbx + 0x80]","test rsi, rsi",jne 0x4aaf,"mov rsi, qword ptr [rbx + 0x88]","test rsi, rsi",jne 0x4ace,"mov rsi, qword ptr [rbx + 0x90]","test rsi, rsi",jne 0x4aed,"movsxd rsi, dword ptr [rbx + 0x98]","test rsi, rsi",jne 0x4b0c,"mov rsi, qword ptr [rip + 0x2106d9]","add rsp, 8","mov edi, 0xa",pop rbx,pop rbp,jmp 0x2c30,nop word ptr [rax + rax],"mov rsi, qword ptr [rbx + 0x78]","xor edi, edi","test rsi, rsi",jne 0x4a90,"cmp qword ptr [rbx + 0x80], 0",jne 0x49c0,"cmp qword ptr [rbx + 0x88], 0",jne 0x49c0,"cmp qword ptr [rbx + 0x90], 0",jne 0x49c0,"mov eax, dword ptr [rbx + 0x98]","test eax, eax",jne 0x49c0,"mov rbx, qword ptr [rip + 0x21067e]","lea rsi, [rip + 0xbbb7]","xor edi, edi","mov edx, 5",call 0x2af0,"add rsp, 8","mov rsi, rbx","mov rdi, rax",pop rbx,pop rbp,jmp 0x2bf0,nop word ptr cs:[rax + rax],"lea rdx, [rip + 0xbbaa]",call 0x4780,"mov rsi, qword ptr [rbx + 0x80]","movzx edi, al","test rsi, rsi",je 0x49d0,"lea rdx, [rip + 0xbb92]",call 0x4780,"mov rsi, qword ptr [rbx + 0x88]","movzx edi, al","test rsi, rsi",je 0x49e0,"lea rdx, [rip + 0xbb7b]",call 0x4780,"mov rsi, qword ptr [rbx + 0x90]","movzx edi, al","test rsi, rsi",je 0x49f0,"lea rdx, [rip + 0xbc41]",call 0x4780,"movsxd rsi, dword ptr [rbx + 0x98]","movzx edi, al","test rsi, rsi",je 0x4a00,"lea rdx, [rip + 0xbb45]",call 0x4780,jmp 0x4a00,nop dword ptr [rax],"lea rdx, [rip + 0xbb09]","xor edi, edi",call 0x4780,"mov rsi, qword ptr [rbx + 0x70]","movzx edi, al","test rsi, rsi",jne 0x49a4,"mov rsi, qword ptr [rbx + 0x78]",jmp 0x49b7,nop word ptr [rax + rax],push r12,push rbp,"mov rcx, rdi",push rbx,"mov rbx, rdx","lea rdx, [rip + 0xbb03]","mov r12, rsi","xor r9d, r9d","xor r8d, r8d","sub rsp, 0x30","mov esi, 0x64","mov rdi, rbx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x28], rax","xor eax, eax",call 0xda00,"test r12, r12",je 0x4ba3,"cmp eax, 0x63","mov rbp, rax",jg 0x4ba3,"cmp qword ptr [r12 + 0xd0], 0",jne 0x4bc0,"mov rdx, qword ptr [rsp + 0x28]","xor rdx, qword ptr fs:[0x28]","mov rax, rbx",jne 0x4bfc,"add rsp, 0x30",pop rbx,pop rbp,pop r12,ret ,nop ,"mov edi, dword ptr [r12 + 0x18]","mov rsi, rsp",call 0x4500,"mov esi, 0x64","movsxd rdi, ebp","lea r8, [rip + 0xbaa2]","sub esi, ebp","mov r9, rax","add rdi, rbx","movsxd rsi, esi","mov rcx, -1","mov edx, 1","xor eax, eax",call 0x2a00,jmp 0x4ba3,call 0x2b30,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],push rbp,push rbx,"mov rbp, rsi","mov rbx, rdi","sub rsp, 8","cmp byte ptr [rdi + 0xe0], 0",je 0x4c78,"mov r9, qword ptr [rdi + 8]","lea rax, [r9 + 1]","cmp rax, 0xd",jbe 0x4cc8,"lea r8, [rip + 0xbab4]","mov rcx, -1","mov edx, 1","mov esi, 0x64","mov rdi, rbp","xor eax, eax",call 0x2a00,"movsxd rdx, dword ptr [rbx + 0x10]","cmp edx, 6",ja 0x4c6b,"cmp eax, 0x63",jbe 0x4cf5,"add rsp, 8","mov rax, rbp",pop rbx,pop rbp,ret ,nop dword ptr [rax],"mov byte ptr [rsi], 0","movsxd rdx, dword ptr [rdi + 0x10]","cmp edx, 6",ja 0x4c6b,"mov rdi, rsi","mov ecx, 1","mov esi, 0x64","lea rax, [rip + 0xc8c8]","lea r9, [rax + rdx*4]","lea rax, [rip + 0xb92c]","mov edx, 1","lea r8, [rax + rcx]","mov rcx, -1","xor eax, eax",call 0x2a00,"add rsp, 8","mov rax, rbp",pop rbx,pop rbp,ret ,nop dword ptr [rax],"lea rdx, [rax + rax*4]","mov esi, 0x64","mov rdi, rbp","lea rcx, [rax + rdx*2]","lea rax, [rip + 0xc8a1]","lea rdx, [rip + 0xb8ea]","add rcx, rax","xor eax, eax",call 0x2b80,jmp 0x4c59,"xor ecx, ecx","mov esi, 0x64","test eax, eax",sete cl,"sub esi, eax",cdqe ,"movsxd rsi, esi","lea rdi, [rbp + rax]",jmp 0x4c91,nop ,push r13,push r12,"mov edx, 5",push rbp,push rbx,"mov rbx, rsi","lea rsi, [rip + 0xb8ea]","mov rbp, rdi","xor edi, edi","sub rsp, 0x78","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x68], rax","xor eax, eax",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,"cmp qword ptr [rbx + 0xa8], 0",je 0x4d67,"cmp byte ptr [rbx + 0xda], 0",je 0x4f60,"movzx eax, byte ptr [rbx + 0xdf]","cmp byte ptr [rbx + 0xd8], al",je 0x4f54,"lea rsi, [rip + 0xb92a]","mov rbp, qword ptr [rbx + 0x28]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdi, qword ptr [rip + 0x210348]","mov rdx, rax","mov rcx, rbp","mov esi, 1","xor eax, eax",call 0x2e30,"movzx eax, byte ptr [rbx + 0xd8]","mov edx, 1","mov byte ptr [rbx + 0xdf], al","cmp qword ptr [rbx + 0xc8], 0",je 0x4dd3,"cmp byte ptr [rbx + 0xdd], 0",je 0x4fc0,"cmp qword ptr [rbx + 0xb0], 0",je 0x4e42,"cmp byte ptr [rbx + 0xdb], 0",jne 0x4e42,"test dl, dl",jne 0x502f,"mov rsi, rsp","mov rdi, rbx","mov r13d, dword ptr [rbx + 0x10]","mov r12, qword ptr [rbx + 8]",call 0x4c10,"lea rsi, [rip + 0xbe20]","mov edx, 5","xor edi, edi","mov rbp, rax",call 0x2af0,"mov rdi, qword ptr [rip + 0x2102c2]","mov rdx, rax","mov r9d, r13d","mov r8, r12","mov rcx, rbp","mov esi, 1","xor eax, eax",call 0x2e30,"mov byte ptr [rbx + 0xdb], 1","mov edx, 1","cmp qword ptr [rbx + 0xb8], 0",je 0x4ed0,"cmp byte ptr [rbx + 0xdc], 0",jne 0x4ed0,"cmp qword ptr [rbx + 0xc0], 0","lea rax, [rip + 0xb81d]","lea r8, [rip + 0xba37]","mov ecx, dword ptr [rbx + 0x14]","mov rdi, qword ptr [rip + 0x210267]","mov esi, 1","cmovne r8, rax","xor edx, 1","lea rax, [rip + 0xb847]","movzx edx, dl","add rdx, rax","xor eax, eax",call 0x2e30,"cmp qword ptr [rbx + 0xd0], 0","mov byte ptr [rbx + 0xdc], 1",jne 0x5048,"cmp byte ptr [rbx + 0xa0], 0",je 0x4f24,"mov rbx, qword ptr [rbx + 0x58]","mov rsi, qword ptr [rip + 0x21021e]","mov edi, 0x20",call 0x2c30,jmp 0x4ef8,nop ,"cmp qword ptr [rbx + 0xd0], 0",je 0x4ee7,"cmp byte ptr [rbx + 0xde], 0",je 0x5060,"cmp byte ptr [rbx + 0xa0], 0",je 0x4f24,"test dl, dl","mov rbx, qword ptr [rbx + 0x58]",jne 0x4ebb,"lea rsi, [rip + 0xb7e0]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdi, qword ptr [rip + 0x2101ce]","mov rdx, rax","mov rcx, rbx","mov esi, 1","xor eax, eax",call 0x2e30,"mov rsi, qword ptr [rip + 0x2101b5]","mov edi, 0xa",call 0x2c30,"mov rax, qword ptr [rsp + 0x68]","xor rax, qword ptr fs:[0x28]",jne 0x50e2,"add rsp, 0x78",pop rbx,pop rbp,pop r12,pop r13,ret ,"xor edx, edx",jmp 0x4dbc,nop dword ptr [rax + rax],"mov rcx, qword ptr [rbx + 0x28]","mov r9, qword ptr [rbx + 0x40]","lea rdx, [rip + 0xb722]","mov r8, qword ptr [rbx + 0x38]","mov rdi, qword ptr [rip + 0x210166]","xor eax, eax","mov esi, 1",call 0x2e30,"movzx eax, byte ptr [rbx + 0xdf]","mov byte ptr [rbx + 0xda], 1","mov edx, 1","cmp byte ptr [rbx + 0xd8], al",je 0x4dbc,"mov rsi, qword ptr [rip + 0x210134]","mov edi, 0x20",call 0x2c30,jmp 0x4d7a,nop dword ptr [rax + rax],"mov rcx, qword ptr [rbx + 0x48]","xor edx, 1","lea rax, [rip + 0xb6e9]","mov r9, qword ptr [rbx + 0x58]","mov r8, qword ptr [rbx + 0x50]","movzx edx, dl","mov rdi, qword ptr [rip + 0x210100]","add rdx, rax","mov esi, 1","xor eax, eax",call 0x2e30,"mov rcx, qword ptr [rbx + 0x60]","test rcx, rcx",jne 0x50a0,"cmp dword ptr [rbx + 0x1c], 1",je 0x50c0,"cmp qword ptr [rbx + 0xb0], 0","mov byte ptr [rbx + 0xdd], 1","mov edx, 1",je 0x4e42,"movzx edx, byte ptr [rbx + 0xdb]","test dl, dl",jne 0x4e42,"mov rsi, qword ptr [rip + 0x2100aa]","mov edi, 0x20",call 0x2c30,jmp 0x4dee,nop dword ptr [rax],"cmp byte ptr [rbx + 0xde], 0",jne 0x4eae,"lea rbp, [rip + 0xb62e]",jmp 0x5070,nop ,"xor edx, 1","movzx ebp, dl","lea rdx, [rip + 0xb61d]","add rbp, rdx","mov edi, dword ptr [rbx + 0x18]","mov rsi, rsp",call 0x4500,"mov rdi, qword ptr [rip + 0x21005e]","mov rcx, rax","mov rdx, rbp","mov esi, 1","xor eax, eax",call 0x2e30,"mov byte ptr [rbx + 0xde], 1",jmp 0x4eae,"mov rdi, qword ptr [rip + 0x210039]","lea rdx, [rip + 0xb61c]","mov esi, 1","xor eax, eax",call 0x2e30,jmp 0x4ffc,nop ,"mov rcx, qword ptr [rip + 0x210019]","lea rdi, [rip + 0xb602]","mov edx, 2","mov esi, 1",call 0x2e20,jmp 0x5006,call 0x2b30,nop word ptr [rax + rax],push r15,push r14,"xor edx, edx",push r13,push r12,"mov r11, rdi",push rbp,push rbx,"mov r14d, 0x26","xor ebx, ebx","mov r9d, 0xfffffffe","sub rsp, 0x5c8","lea r15, [rsp + 0x110]","lea r13, [rsp + 0x140]","mov word ptr [rsp + 0x110], dx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x5b8], rax","xor eax, eax","mov r12, r15","mov dword ptr [rsp + 0x34], 0","movsx r8d, r14b","cmp r8d, -0x5d",je 0x5190,"cmp r9d, -2",je 0x57e0,"test r9d, r9d",jle 0x5710,"cmp r9d, 0x115",jle 0x57c0,"add r8d, 2","mov eax, 2","cmp r8d, 0x70",jbe 0x571f,nop word ptr [rax + rax],"lea rax, [rip + 0xc689]","movzx ebp, byte ptr [rax + rbx]","test ebp, ebp",je 0x54b8,"lea rdx, [rip + 0xc476]","movsxd rax, ebp","movzx eax, byte ptr [rdx + rax]","mov edx, 1","sub edx, eax","mov rbx, rax","movsxd rdx, edx","lea rax, [rdx*8]","sub rax, rdx","shl rax, 3","add rax, r13","mov rdi, qword ptr [rax + 0x10]","mov rdx, qword ptr [rax + 0x30]","movdqu xmm0, xmmword ptr [rax]","mov r14, qword ptr [rax]","mov r10, qword ptr [rax + 8]","mov qword ptr [rsp + 0x10], rdi","mov rdi, qword ptr [rax + 0x18]","movaps xmmword ptr [rsp + 0xd0], xmm0","mov qword ptr [rsp + 0x100], rdx","mov qword ptr [rsp + 8], rdi","mov rdi, qword ptr [rax + 0x20]","movdqu xmm0, xmmword ptr [rax + 0x10]","mov qword ptr [rsp + 0x28], rdi","mov rdi, qword ptr [rax + 0x28]","movaps xmmword ptr [rsp + 0xe0], xmm0","movdqu xmm0, xmmword ptr [rax + 0x20]","mov eax, dword ptr [rax + 0x30]","mov qword ptr [rsp + 0x20], rdi","movaps xmmword ptr [rsp + 0xf0], xmm0","mov dword ptr [rsp + 0x18], eax","lea eax, [rbp - 4]","cmp eax, 0x57",ja 0x5390,"lea rdx, [rip + 0xc1b9]","movsxd rax, dword ptr [rdx + rax*4]","add rax, rdx",jmp rax,"mov dword ptr [r11 + 0x18], 0x6270","mov rax, qword ptr [r13]","xor r8d, r8d","mov rdx, qword ptr [r13 + 0x10]","mov rcx, qword ptr [r13 + 0x18]","mov rsi, qword ptr [r13 + 0x20]","mov rdi, qword ptr [r13 + 0x28]","mov qword ptr [rsp + 0x48], rax","mov rax, qword ptr [r13 + 8]","mov qword ptr [rsp + 0x50], rax","mov eax, dword ptr [r13 + 0x30]","add eax, dword ptr [r11 + 0x98]",jo 0x6bc5,"mov dword ptr [r11 + 0x98], eax","xor eax, eax","add rdi, qword ptr [r11 + 0x90]","mov qword ptr [rsp + 0x58], r10","mov dword ptr [rsp + 0x60], r9d",seto al,"mov qword ptr [r11 + 0x90], rdi","xor edi, edi","add rsi, qword ptr [r11 + 0x88]",seto dil,"mov qword ptr [r11 + 0x88], rsi","xor esi, esi","add rcx, qword ptr [r11 + 0x80]",seto sil,"xor r10d, r10d","add rdx, qword ptr [r11 + 0x78]","mov qword ptr [r11 + 0x80], rcx",seto r10b,"mov qword ptr [r11 + 0x78], rdx","xor r9d, r9d","mov rdx, qword ptr [rsp + 0x50]","add rdx, qword ptr [r11 + 0x70]",seto r9b,"mov qword ptr [r11 + 0x70], rdx","xor ecx, ecx","mov rdx, qword ptr [rsp + 0x48]","add rdx, qword ptr [r11 + 0x68]",seto cl,"or eax, r8d","mov qword ptr [r11 + 0x68], rdx","or eax, edi","mov edi, r9d","or eax, esi","or eax, r10d","or dil, al",jne 0x56c8,"test rcx, rcx",jne 0x56c8,"lea rsi, [rip + 0xb420]","mov byte ptr [r11 + 0xa1], 1","xor edi, edi","mov edx, 5","mov qword ptr [rsp + 0x48], r11",call 0x2af0,"mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x58]","mov r9d, dword ptr [rsp + 0x60]","cmp byte ptr [r11 + 0xd9], 0",je 0x5390,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov rsi, r11","mov rdi, rax",call 0x4960,"mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]",nop dword ptr [rax + rax],"mov rdi, qword ptr [rsp + 0x10]","lea rax, [rbx*8]","mov qword ptr [rsp + 0xd0], r14","mov qword ptr [rsp + 0xd8], r10","mov rcx, r12","sub rax, rbx","movdqa xmm0, xmmword ptr [rsp + 0xd0]","mov qword ptr [rsp + 0xe0], rdi","mov rdi, qword ptr [rsp + 8]","shl rax, 3","sub r13, rax","add rbx, rbx","mov rax, r13","sub rcx, rbx","lea r13, [r13 + 0x38]","mov qword ptr [rsp + 0xe8], rdi","mov rdi, qword ptr [rsp + 0x28]","movups xmmword ptr [rax + 0x38], xmm0","mov qword ptr [rsp + 0xf0], rdi","mov rdi, qword ptr [rsp + 0x20]","movdqa xmm0, xmmword ptr [rsp + 0xe0]","mov qword ptr [rsp + 0xf8], rdi","mov edi, dword ptr [rsp + 0x18]","movups xmmword ptr [rax + 0x48], xmm0","mov dword ptr [rsp + 0x100], edi","mov rdx, qword ptr [rsp + 0x100]","movdqa xmm0, xmmword ptr [rsp + 0xf0]","movsx edi, word ptr [rcx]","mov qword ptr [rax + 0x68], rdx","lea rdx, [rip + 0xc3c6]","movups xmmword ptr [rax + 0x58], xmm0","lea rax, [rip + 0xc23b]","mov esi, edi","movzx eax, byte ptr [rax + rbp]","sub eax, 0x1c",cdqe ,"movsx edx, byte ptr [rdx + rax]","add edx, edi","cmp edx, 0x70",ja 0x5473,"lea rdi, [rip + 0xc27e]","movsxd rdx, edx","movsx di, byte ptr [rdi + rdx]","cmp si, di",je 0x5920,"lea rdx, [rip + 0xc366]","movsx rbx, byte ptr [rdx + rax]","lea r12, [rcx + 2]","lea rax, [r15 + 0x26]","mov word ptr [rcx + 2], bx","cmp r12, rax",jae 0x6859,"cmp ebx, 0xc",je 0x6863,"lea rdx, [rip + 0xc3fc]","movsxd rax, ebx","movzx r14d, byte ptr [rdx + rax]",jmp 0x514a,nop dword ptr [rax],"cmp dword ptr [rsp + 0x34], 3",jne 0x54cf,"cmp r9d, 0",jle 0x5930,"mov r9d, 0xfffffffe","lea rdx, [rip + 0xc3ca]","lea rcx, [rip + 0xc203]","lea rsi, [rip + 0xc27c]",jmp 0x5506,nop word ptr cs:[rax + rax],"cmp r12, r15",je 0x56c8,"sub r12, 2","movsx rbx, word ptr [r12]","sub r13, 0x38","movsx eax, byte ptr [rdx + rbx]","cmp eax, -0x5d",je 0x54f0,"add eax, 1","cmp eax, 0x70",ja 0x54f0,cdqe ,"cmp byte ptr [rcx + rax], 1",jne 0x54f0,"movzx ebx, byte ptr [rsi + rax]","test ebx, ebx",je 0x54f0,"mov rax, qword ptr [rsp + 0x38]","add r13, 0x38","mov rcx, r12","mov dword ptr [rsp + 0x34], 3","mov qword ptr [rsp + 0x98], rax","mov rax, qword ptr [rsp + 0x40]","movdqa xmm0, xmmword ptr [rsp + 0x90]","mov qword ptr [rsp + 0xa0], rax","mov rax, qword ptr [rsp + 0xc0]","movups xmmword ptr [r13], xmm0","movdqa xmm0, xmmword ptr [rsp + 0xa0]","mov qword ptr [r13 + 0x30], rax","movups xmmword ptr [r13 + 0x10], xmm0","movdqa xmm0, xmmword ptr [rsp + 0xb0]","movups xmmword ptr [r13 + 0x20], xmm0",jmp 0x547f,"mov rax, qword ptr [r13 - 0x38]","mov rsi, qword ptr [r13 - 0x18]","mov rdi, qword ptr [r13 - 0x10]","mov r8d, dword ptr [r13 - 8]","mov ecx, dword ptr [r11 + 0x98]","mov rdx, qword ptr [r11 + 0x90]","mov qword ptr [rsp + 0x48], rax","mov rax, qword ptr [r13 - 0x30]","mov qword ptr [rsp + 0x50], rax","mov rax, qword ptr [r13 - 0x28]","mov qword ptr [rsp + 0x58], rax","mov rax, qword ptr [r13 - 0x20]","mov qword ptr [rsp + 0x60], rax","mov rax, qword ptr [r11 + 0x88]","mov qword ptr [rsp + 0x70], rax","mov rax, qword ptr [r11 + 0x80]","mov qword ptr [rsp + 0x80], rax","mov rax, qword ptr [r11 + 0x78]","mov qword ptr [rsp + 0x88], rax","mov rax, qword ptr [r11 + 0x70]","mov qword ptr [rsp + 0x68], rax","mov rax, qword ptr [r11 + 0x68]","mov qword ptr [rsp + 0x78], rax","mov eax, dword ptr [r13]","test eax, eax",js 0x6902,"mov rax, qword ptr [rsp + 0x70]","add ecx, r8d",seto r8b,"mov dword ptr [r11 + 0x98], ecx","xor ecx, ecx","add rdx, rdi","movzx r8d, r8b",seto cl,"xor edi, edi","add rax, rsi",seto dil,"mov qword ptr [r11 + 0x88], rax","xor esi, esi","mov rax, qword ptr [rsp + 0x80]","add rax, qword ptr [rsp + 0x60]","mov qword ptr [rsp + 0x70], rdi","mov qword ptr [r11 + 0x90], rdx",seto sil,"mov qword ptr [r11 + 0x80], rax","xor edi, edi","mov rax, qword ptr [rsp + 0x88]","add rax, qword ptr [rsp + 0x58]",seto dil,"mov qword ptr [r11 + 0x78], rax","xor edx, edx","mov rax, qword ptr [rsp + 0x68]","add rax, qword ptr [rsp + 0x50]",seto dl,"mov qword ptr [r11 + 0x70], rax","mov rax, qword ptr [rsp + 0x78]","add rax, qword ptr [rsp + 0x48]","mov qword ptr [rsp + 0x50], rdx","mov qword ptr [r11 + 0x68], rax","mov eax, ecx",seto dl,"or eax, r8d","or al, byte ptr [rsp + 0x70]","movzx edx, dl","or eax, esi","or eax, edi","or al, byte ptr [rsp + 0x50]","or eax, edx","test al, al",je 0x5bee,nop dword ptr [rax],"mov eax, 1","mov rdi, qword ptr [rsp + 0x5b8]","xor rdi, qword ptr fs:[0x28]",jne 0x6bd0,"add rsp, 0x5c8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,"lea rax, [rdi + 1]","mov qword ptr [r11], rax","movzx r9d, byte ptr [rdi]","test r9d, r9d",jg 0x57c0,nop word ptr [rax + rax],"xor eax, eax","xor r9d, r9d","cmp r8d, 0x70",ja 0x5190,"lea rdx, [rip + 0xbfba]","movsxd r8, r8d","movsx edx, byte ptr [rdx + r8]","cmp edx, eax",jne 0x5190,"lea rax, [rip + 0xc023]","movzx ebp, byte ptr [rax + r8]","test ebp, ebp",je 0x5a30,"mov eax, dword ptr [rsp + 0x34]","mov rcx, r12","movsxd rbx, ebp","mov r9d, 0xfffffffe","cmp eax, 1","adc eax, -1","add r13, 0x38","mov dword ptr [rsp + 0x34], eax","mov rax, qword ptr [rsp + 0x38]","mov qword ptr [rsp + 0x98], rax","mov rax, qword ptr [rsp + 0x40]","movdqa xmm0, xmmword ptr [rsp + 0x90]","mov qword ptr [rsp + 0xa0], rax","mov rax, qword ptr [rsp + 0xc0]","movups xmmword ptr [r13], xmm0","movdqa xmm0, xmmword ptr [rsp + 0xa0]","mov qword ptr [r13 + 0x30], rax","movups xmmword ptr [r13 + 0x10], xmm0","movdqa xmm0, xmmword ptr [rsp + 0xb0]","movups xmmword ptr [r13 + 0x20], xmm0",jmp 0x547f,nop dword ptr [rax],"lea rdx, [rip + 0xc159]","movsxd rax, r9d","movzx eax, byte ptr [rdx + rax]","add r8d, eax",jmp 0x5715,nop word ptr cs:[rax + rax],"mov rdi, qword ptr [r11]","mov edx, 1","movabs r10, 0x3ffffff03ffffff","movzx ecx, byte ptr [rdi]","cmp cl, 0x20","mov esi, ecx","movzx r9d, cl",ja 0x584f,"mov rax, rdx","shl rax, cl","movabs rcx, 0x100003e00","test rax, rcx",je 0x58ba,"lea rax, [rdi + 1]",jmp 0x5839,nop ,"mov rsi, rdx","movabs r14, 0x100003e00","add rax, 1","shl rsi, cl","test rsi, r14",je 0x58b8,"mov qword ptr [r11], rax","movzx r9d, byte ptr [rax]","mov rdi, rax","cmp r9b, 0x20","mov ecx, r9d","mov esi, r9d",jbe 0x5820,"lea eax, [rsi - 0x2b]","sub ecx, 0x30","and eax, 0xfffffffd","cmp cl, 9",ja 0x58c0,"cmp sil, 0x2d",sete cl,"test al, al",jne 0x686a,"cmp cl, 1","mov rax, qword ptr [r11]","sbb r9d, r9d","and r9d, 2","sub r9d, 1","add rax, 1","mov qword ptr [r11], rax","movzx ecx, byte ptr [rax]","mov rdi, rax","cmp cl, 0x20","mov esi, ecx",ja 0x66cc,"mov rsi, rdx","movabs r14, 0x100003e00","add rax, 1","shl rsi, cl","test rsi, r14",je 0x57f5,jmp 0x5881,nop dword ptr [rax],"mov esi, ecx","lea eax, [rsi - 0x2b]","and eax, 0xfffffffd","test al, al",je 0x5a3c,"lea ecx, [r9 - 0x41]","cmp ecx, 0x39",jbe 0x5940,"cmp sil, 0x28",jne 0x56f6,"mov rsi, qword ptr [r11]","xor ecx, ecx",jmp 0x58ff,nop word ptr [rax + rax],"cmp al, 0x29",sete al,"movzx eax, al","sub rcx, rax","test rcx, rcx",je 0x5a48,"mov rsi, rdi","lea rdi, [rsi + 1]","mov qword ptr [r11], rdi","movzx eax, byte ptr [rdi - 1]","test al, al",je 0x5710,"cmp al, 0x28",jne 0x58e8,"add rcx, 1",jmp 0x58f3,nop dword ptr [rax],"lea rax, [rip + 0xbe39]","movzx ebx, byte ptr [rax + rdx]",jmp 0x547f,jne 0x54cf,jmp 0x56c8,nop dword ptr [rax + rax],"mov rax, rdx","shl rax, cl","test rax, r10",je 0x58d1,"mov rax, qword ptr [r11]","lea r14, [rsp + 0x5a0]","mov r10d, 1","movabs r9, 0x3ffffff03ffffff","mov rdx, r14","lea rdi, [r14 + 0x13]","add rax, 1",jmp 0x5977,"add rax, 1","cmp rdx, rdi",jae 0x5983,"mov byte ptr [rdx], sil","add rdx, 1","mov qword ptr [r11], rax","movzx ecx, byte ptr [rax]","mov esi, ecx","sub ecx, 0x41","cmp ecx, 0x39",ja 0x599e,"mov rbp, r10","shl rbp, cl","test rbp, r9",jne 0x5973,"cmp sil, 0x2e",je 0x5973,"mov byte ptr [rdx], 0","movzx eax, byte ptr [rsp + 0x5a0]","test al, al",je 0x59d2,"mov rdx, r14","movzx ecx, al","sub eax, 0x61","lea esi, [rcx - 0x20]","cmp al, 0x1a","cmovb ecx, esi","add rdx, 1","mov byte ptr [rdx - 1], cl","movzx eax, byte ptr [rdx]","test al, al",jne 0x59b6,"lea rcx, [rip + 0x20f0c7]","lea rsi, [rip + 0xad16]","mov rbp, rcx",jmp 0x59f6,"add rbp, 0x10","mov rsi, qword ptr [rbp]","test rsi, rsi",je 0x6995,"mov rdi, r14","mov qword ptr [rsp + 0x10], r11","mov dword ptr [rsp + 8], r8d",call 0x2c70,"test eax, eax","mov r8d, dword ptr [rsp + 8]","mov r11, qword ptr [rsp + 0x10]",jne 0x59e5,"mov rcx, rbp","movsxd rax, dword ptr [rcx + 0xc]","mov r9d, dword ptr [rcx + 8]","mov qword ptr [rsp + 0x90], rax",jmp 0x515e,nop ,"mov eax, 0x38","xor ebx, ebx",jmp 0x51cd,"cmp sil, 0x2d",sete cl,jmp 0x586c,"movzx ecx, byte ptr [rsi + 1]",jmp 0x57f5,"mov r10, qword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], 0","xor r14d, r14d","mov qword ptr [rsp + 0x28], 0","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x104], 0","mov qword ptr [rsp + 0x28], rax","mov dword ptr [rsp + 0x18], 0","xor r10d, r10d","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 8], 0","xor r14d, r14d","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov r14, qword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], 0","xor r10d, r10d","mov qword ptr [rsp + 0x28], 0","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov rax, qword ptr [r13]","xor r8d, r8d","mov rdx, qword ptr [r13 + 0x10]","mov rcx, qword ptr [r13 + 0x18]","mov rsi, qword ptr [r13 + 0x20]","mov rdi, qword ptr [r13 + 0x28]","mov qword ptr [rsp + 0x48], rax","mov rax, qword ptr [r13 + 8]","mov qword ptr [rsp + 0x50], rax","mov eax, dword ptr [r13 + 0x30]","add eax, dword ptr [r11 + 0x98]",jo 0x6084,"mov dword ptr [r11 + 0x98], eax","xor eax, eax","add rdi, qword ptr [r11 + 0x90]",seto al,"mov qword ptr [r11 + 0x90], rdi","xor edi, edi","add rsi, qword ptr [r11 + 0x88]",seto dil,"mov qword ptr [r11 + 0x88], rsi","xor esi, esi","add rcx, qword ptr [r11 + 0x80]",seto sil,"mov qword ptr [r11 + 0x80], rcx","xor ecx, ecx","add rdx, qword ptr [r11 + 0x78]",seto cl,"mov qword ptr [r11 + 0x78], rdx","mov rdx, qword ptr [rsp + 0x50]","mov qword ptr [rsp + 0x58], rcx","xor ecx, ecx","add rdx, qword ptr [r11 + 0x70]",seto cl,"mov qword ptr [r11 + 0x70], rdx","mov rdx, qword ptr [rsp + 0x48]","mov qword ptr [rsp + 0x50], rcx","xor ecx, ecx","add rdx, qword ptr [r11 + 0x68]",seto cl,"or eax, r8d","mov qword ptr [r11 + 0x68], rdx","or eax, edi","movzx edi, byte ptr [rsp + 0x50]","or eax, esi","or al, byte ptr [rsp + 0x58]","or dil, al",jne 0x56c8,"test rcx, rcx",jne 0x56c8,"mov byte ptr [r11 + 0xa1], 1",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x104], 0","mov qword ptr [rsp + 8], rax","mov dword ptr [rsp + 0x18], 0","xor r10d, r10d","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 0x28], 0","xor r14d, r14d","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov rax, qword ptr [r13 - 0x38]","mov dword ptr [rsp + 0x104], 0","mov qword ptr [rsp + 0x20], rax","mov eax, dword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x18], eax","mov qword ptr [rsp + 0x28], 0","mov qword ptr [rsp + 8], 0","xor r10d, r10d","mov qword ptr [rsp + 0x10], 0","xor r14d, r14d",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov dword ptr [rsp + 0x104], 0","mov qword ptr [rsp + 0x20], rax","mov dword ptr [rsp + 0x18], 0",jmp 0x5c59,"mov r14, qword ptr [r13 + 8]","xor r10d, r10d",jmp 0x5390,"xor edx, edx","mov rax, qword ptr [r13 - 0x30]","mov qword ptr [rsp + 0x100], 0","imul rax, qword ptr [r13]","pxor xmm0, xmm0","movaps xmmword ptr [rsp + 0xd0], xmm0","movaps xmmword ptr [rsp + 0xe0], xmm0","movaps xmmword ptr [rsp + 0xf0], xmm0",jo 0x5fec,"test rdx, rdx","mov qword ptr [rsp + 0x10], rax",jne 0x56c8,"mov dword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], 0","xor r10d, r10d","mov qword ptr [rsp + 0x28], 0","mov qword ptr [rsp + 8], 0","xor r14d, r14d",jmp 0x5390,"mov rax, qword ptr [r13]","mov dword ptr [rsp + 0x104], 0","mov qword ptr [rsp + 0x10], rax",jmp 0x5cf0,"mov rcx, qword ptr [r13 - 0xd0]","movzx eax, byte ptr [r11 + 0xd9]","cmp rcx, 3",jle 0x68a8,"test al, al",je 0x5daa,"mov rax, qword ptr [r13 - 0xd8]","lea rsi, [rip + 0xaee9]","mov edx, 5","xor edi, edi","mov qword ptr [rsp + 0x68], r11","mov dword ptr [rsp + 0x60], r9d","mov qword ptr [rsp + 0x58], r10","mov qword ptr [rsp + 0x50], rcx","mov qword ptr [rsp + 0x48], rax",call 0x2af0,"mov rcx, qword ptr [rsp + 0x50]","mov rsi, qword ptr [rsp + 0x48]","mov rdi, rax","xor eax, eax","mov rdx, rcx",call 0x4600,"mov r11, qword ptr [rsp + 0x68]","mov r9d, dword ptr [rsp + 0x60]","mov r10, qword ptr [rsp + 0x58]","movdqu xmm0, xmmword ptr [r13 - 0xe0]","mov rax, qword ptr [r13 - 0xd0]","movups xmmword ptr [r11 + 0x20], xmm0","mov qword ptr [r11 + 0x30], rax","mov rax, qword ptr [r13 - 0x68]","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 + 8]","mov qword ptr [r11 + 0x40], rax",jmp 0x5390,"mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], 1",jmp 0x5c59,"mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","xor r10d, r10d","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 0x28], 0","xor r14d, r14d","mov qword ptr [rsp + 8], 1","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"movdqu xmm0, xmmword ptr [r13]","lea rsi, [rip + 0xa8e3]","mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","movups xmmword ptr [r11 + 0x58], xmm0","mov byte ptr [r11 + 0xa0], 1","mov qword ptr [rsp + 0x48], r11","xor edi, edi",call 0x2af0,"mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]","cmp byte ptr [r11 + 0xd9], 0","mov rsi, r11",je 0x5390,"mov rdi, rax",call 0x4d10,"mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]",jmp 0x5390,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xc8], 1","mov qword ptr [rsp + 0x48], r11","lea rsi, [rip + 0x9e4e]",jmp 0x5e69,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xc8], 1","add qword ptr [r11 + 0xa8], 1","lea rsi, [rip + 0xa846]","mov qword ptr [rsp + 0x48], r11",jmp 0x5e69,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","sub rsp, 8",push qword ptr [r13 + 0x10],push qword ptr [r13 + 8],"mov rdi, r11",push qword ptr [r13],"mov qword ptr [rsp + 0x68], r11",call 0x4380,"add rsp, 0x20","mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]",jmp 0x5390,"mov r14, qword ptr [r13 + 8]",jmp 0x5390,"mov dword ptr [rsp + 0x104], 0","mov rax, qword ptr [r13 - 0x38]",jmp 0x5c8e,"mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","xor r10d, r10d","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 0x28], 1","xor r14d, r14d","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov dword ptr [rsp + 0x104], 0","mov rax, qword ptr [r13 - 0x38]",jmp 0x5aa3,"xor edx, edx","mov rax, qword ptr [r13 - 0x38]","mov qword ptr [rsp + 0x100], 0","imul rax, qword ptr [r13]","pxor xmm0, xmm0","movaps xmmword ptr [rsp + 0xd0], xmm0","movaps xmmword ptr [rsp + 0xe0], xmm0","movaps xmmword ptr [rsp + 0xf0], xmm0",jno 0x5ce2,"mov edx, 1",jmp 0x5ce2,nop word ptr cs:[rax + rax],"mov dword ptr [rsp + 0x104], 0","mov rax, qword ptr [r13 - 0x38]",jmp 0x5c0a,"mov dword ptr [rsp + 0x68], r9d","mov qword ptr [rsp + 0x60], r10","sub rsp, 8",push qword ptr [r13 - 0x28],push qword ptr [r13 - 0x30],"mov rdi, r11",push qword ptr [r13 - 0x38],"mov qword ptr [rsp + 0x78], r11",call 0x4380,"mov rax, qword ptr [r13]","xor r8d, r8d","mov rdx, qword ptr [r13 + 0x10]","mov rcx, qword ptr [r13 + 0x18]","mov rsi, qword ptr [r13 + 0x20]","mov rdi, qword ptr [r13 + 0x28]","mov qword ptr [rsp + 0x68], rax","mov rax, qword ptr [r13 + 8]","mov qword ptr [rsp + 0x70], rax","add rsp, 0x20","mov r11, qword ptr [rsp + 0x58]","mov eax, dword ptr [r13 + 0x30]","mov r10, qword ptr [rsp + 0x60]","mov r9d, dword ptr [rsp + 0x68]","add eax, dword ptr [r11 + 0x98]",jno 0x5b4f,"mov r8d, 1",jmp 0x5b4f,nop ,"mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","mov r10d, 1","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 0x28], 0","xor r14d, r14d","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov r14, -1",jmp 0x5390,"mov dword ptr [rsp + 0x104], 0","mov r10, qword ptr [r13 - 0x38]",jmp 0x5a60,"mov dword ptr [rsp + 0x104], 0","mov dword ptr [rsp + 0x18], 0","xor r10d, r10d","mov qword ptr [rsp + 0x20], 0","mov qword ptr [rsp + 0x28], 0","mov r14d, 1","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], 0",jmp 0x5390,"mov rax, qword ptr [r13 - 0x60]","movabs rdx, 0x8000000000000000","movdqu xmm0, xmmword ptr [r13 - 0x70]","mov qword ptr [r11 + 0x30], rax","mov rax, qword ptr [r13 - 0x30]","movups xmmword ptr [r11 + 0x20], xmm0","mov rcx, rax",neg rcx,"cmp rax, rdx","mov qword ptr [r11 + 0x38], rcx",je 0x56c8,"mov rax, qword ptr [r13 + 8]","mov rcx, rax",neg rcx,"cmp rax, rdx","mov qword ptr [r11 + 0x40], rcx",jne 0x5390,jmp 0x56c8,nop word ptr [rax + rax],"mov rax, qword ptr [r13 - 0x30]","mov qword ptr [r11 + 0x40], rax","mov rax, qword ptr [r13]","mov qword ptr [r11 + 0x38], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0xa8]","movdqu xmm0, xmmword ptr [r13]","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 - 0x68]","movups xmmword ptr [r11 + 0x20], xmm0","mov qword ptr [r11 + 0x40], rax","mov rax, qword ptr [r13 + 0x10]","mov qword ptr [r11 + 0x30], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x68]","movdqu xmm0, xmmword ptr [r13]","mov qword ptr [r11 + 0x40], rax","mov rax, qword ptr [r13 - 0x38]","movups xmmword ptr [r11 + 0x20], xmm0","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 + 0x10]","mov qword ptr [r11 + 0x30], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x38]","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 + 8]","mov qword ptr [r11 + 0x40], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x70]","movabs rdx, 0x8000000000000000","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 - 0x30]","mov rcx, rax",neg rcx,"cmp rax, rdx","mov qword ptr [r11 + 0x40], rcx",je 0x56c8,"mov rax, qword ptr [r13 + 8]","mov rcx, rax",neg rcx,"cmp rax, rdx","mov qword ptr [r11 + 0x28], rcx",jne 0x61c3,jmp 0x56c8,nop word ptr [rax + rax],"mov rax, qword ptr [r13 - 0x68]","mov qword ptr [r11 + 0x40], rax","mov rax, qword ptr [r13 - 0x38]","mov qword ptr [r11 + 0x38], rax","mov rax, qword ptr [r13 + 8]","mov rdx, rax",neg rdx,"mov qword ptr [r11 + 0x28], rdx","movabs rdx, 0x8000000000000000","cmp rax, rdx",jne 0x61c3,jmp 0x56c8,nop ,"mov dword ptr [rsp + 0x104], 0","mov r14, qword ptr [r13 - 0x38]",jmp 0x5ae5,"mov rax, qword ptr [r13 - 0x30]","mov byte ptr [r11 + 0xe0], 1","mov qword ptr [r11 + 8], rax","mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x10], eax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x38]","mov byte ptr [r11 + 0xe0], 1","mov qword ptr [r11 + 8], rax","mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x10], eax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x38]","mov qword ptr [r11 + 8], 0","mov dword ptr [r11 + 0x10], eax",jmp 0x5390,"mov rax, qword ptr [r13]","mov qword ptr [r11 + 8], 0","mov dword ptr [r11 + 0x10], eax",jmp 0x5390,"mov eax, dword ptr [r13 - 0x38]","add eax, 0xe10","mov dword ptr [r11 + 0x18], eax",jmp 0x5390,"mov eax, dword ptr [r13]","add eax, 0xe10","mov dword ptr [r11 + 0x18], eax",jmp 0x5390,"movzx esi, byte ptr [r13 - 0x38]","mov rcx, qword ptr [r13 - 0x28]","lea rdi, [r11 + 0x18]","mov rdx, qword ptr [r13 - 0x30]","mov r8, qword ptr [r13]","mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov qword ptr [rsp + 0x48], r11",call 0x47c0,"test al, al",je 0x56c8,"mov r11, qword ptr [rsp + 0x48]","xor edx, edx","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]","movsxd rax, dword ptr [r11 + 0x18]","add rax, qword ptr [r13 - 0x70]","movsxd rcx, eax",seto dl,"mov dword ptr [r11 + 0x18], eax","cmp rax, rcx","mov ecx, 1","cmovne edx, ecx","test edx, edx",je 0x5390,jmp 0x56c8,nop dword ptr [rax + rax],"mov rax, qword ptr [r13 - 0x38]","mov dword ptr [r11 + 0x18], eax",jmp 0x5258,"mov dword ptr [r11 + 0x18], 0x6270",jmp 0x5390,"mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x18], eax",jmp 0x5390,"mov dword ptr [r11 + 0x14], 1","add qword ptr [r11 + 0xc0], 1",jmp 0x5390,"mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x14], eax",jmp 0x5390,"add qword ptr [r11 + 0xd0], 1","movzx esi, byte ptr [r13 - 0x38]","lea rdi, [r11 + 0x18]","mov rcx, qword ptr [r13 - 0x28]","mov rdx, qword ptr [r13 - 0x30]","mov r8, qword ptr [r13]","mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov qword ptr [rsp + 0x48], r11",call 0x47c0,"test al, al","mov r11, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x58]",jne 0x5390,jmp 0x56c8,nop word ptr cs:[rax + rax],"mov rax, qword ptr [r13 - 0x38]","mov rdx, qword ptr [r13 - 0xa0]","mov rcx, qword ptr [r13 - 0x110]","mov dword ptr [r11 + 0x1c], 2","mov qword ptr [r11 + 0x58], rax","movsxd rax, dword ptr [r13 - 0x30]","mov qword ptr [r11 + 0x48], rcx","mov qword ptr [r11 + 0x50], rdx","mov qword ptr [r11 + 0x60], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov rdx, qword ptr [r13 - 0xa0]","mov qword ptr [r11 + 0x58], 0","mov qword ptr [r11 + 0x60], 0","mov dword ptr [r11 + 0x1c], 2","mov qword ptr [r11 + 0x48], rdx","mov qword ptr [r11 + 0x50], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov qword ptr [r11 + 0x50], 0","mov qword ptr [r11 + 0x58], 0","mov qword ptr [r11 + 0x60], 0","mov dword ptr [r11 + 0x1c], 2","mov qword ptr [r11 + 0x48], rax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x38]","mov rdx, qword ptr [r13 - 0xa0]","mov rcx, qword ptr [r13 - 0x110]","mov qword ptr [r11 + 0x58], rax","movsxd rax, dword ptr [r13 - 0x30]","mov qword ptr [r11 + 0x48], rcx","mov qword ptr [r11 + 0x50], rdx","mov qword ptr [r11 + 0x60], rax","mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x1c], eax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov rdx, qword ptr [r13 - 0xa0]","mov qword ptr [r11 + 0x58], 0","mov qword ptr [r11 + 0x60], 0","mov qword ptr [r11 + 0x50], rax","mov rax, qword ptr [r13]","mov qword ptr [r11 + 0x48], rdx","mov dword ptr [r11 + 0x1c], eax",jmp 0x5390,"mov rax, qword ptr [r13 - 0x30]","mov qword ptr [r11 + 0x50], 0","mov qword ptr [r11 + 0x58], 0","mov qword ptr [r11 + 0x60], 0","mov qword ptr [r11 + 0x48], rax","mov rax, qword ptr [r13]","mov dword ptr [r11 + 0x1c], eax",jmp 0x5390,"lea rsi, [rip + 0xa1fe]","mov qword ptr [rsp + 0x58], r11","mov dword ptr [rsp + 0x50], r9d","mov qword ptr [rsp + 0x48], r10","mov edx, 5","xor edi, edi",call 0x2af0,"mov r11, qword ptr [rsp + 0x58]","mov r10, qword ptr [rsp + 0x48]","mov r9d, dword ptr [rsp + 0x50]","cmp byte ptr [r11 + 0xd9], 0",je 0x5390,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov rsi, r11","mov qword ptr [rsp + 0x48], r11",jmp 0x5374,"lea rsi, [rip + 0xa1a1]","xor edi, edi","mov edx, 5","mov qword ptr [rsp + 0x58], r11","mov dword ptr [rsp + 0x50], r9d","mov qword ptr [rsp + 0x48], r10",call 0x2af0,"mov r11, qword ptr [rsp + 0x58]","mov r10, qword ptr [rsp + 0x48]","mov r9d, dword ptr [rsp + 0x50]","cmp byte ptr [r11 + 0xd9], 0",je 0x5390,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov rsi, r11","mov qword ptr [rsp + 0x48], r11",jmp 0x5e90,"mov qword ptr [rsp + 0x58], r11","mov dword ptr [rsp + 0x50], r9d","mov edx, 5","mov qword ptr [rsp + 0x48], r10","lea rsi, [rip + 0xa12e]",jmp 0x657b,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xb0], 1","mov qword ptr [rsp + 0x48], r11","lea rsi, [rip + 0xa102]",jmp 0x5e69,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xa8], 1","mov qword ptr [rsp + 0x48], r11","lea rsi, [rip + 0x97a2]",jmp 0x5e69,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xd0], 1","mov qword ptr [rsp + 0x48], r11","lea rsi, [rip + 0xa0ad]",jmp 0x5e69,"mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10","mov edx, 5","add qword ptr [r11 + 0xb8], 1","mov qword ptr [rsp + 0x48], r11","lea rsi, [rip + 0xa07f]",jmp 0x5e69,"lea eax, [rcx - 0x30]","cmp al, 9",ja 0x57f5,"xor eax, eax","mov rcx, rdi","mov r14d, 0x30","mov r10, rax",jmp 0x6703,nop word ptr [rax + rax],"movzx esi, byte ptr [rcx + 1]","lea rbp, [rcx + 1]","lea edx, [rsi - 0x30]","cmp dl, 9",ja 0x6737,"mov rcx, rbp","imul r10, r10, 0xa",jo 0x6727,"movzx edx, sil","mov esi, r14d","lea eax, [rdx - 0x30]","sub esi, edx","cmp r9d, -1","cmovne esi, eax","movsxd rax, esi","add rax, r10","mov r10, rax",jno 0x66f0,"mov eax, 2","mov r9d, 0x3f",jmp 0x57ce,"and esi, 0xfffffffd","mov r10, rbp","mov rdx, rax","cmp sil, 0x2c",jne 0x6818,"movsx eax, byte ptr [rbp + 1]","lea esi, [rax - 0x30]","cmp sil, 9",ja 0x6818,"lea rdi, [rcx + 3]","movsx ecx, byte ptr [rcx + 3]","sub eax, 0x30","mov r10d, 8","lea eax, [rax + rax*4]","lea esi, [rcx - 0x30]","add eax, eax","cmp sil, 9",ja 0x6785,"lea eax, [rax + rcx - 0x30]","add rdi, 1","movsx ecx, byte ptr [rdi]","sub r10d, 1",jne 0x676c,"cmp r9d, -1",jne 0x679f,jmp 0x6800,nop dword ptr [rax + rax],"add rdi, 1","movzx ecx, byte ptr [rdi]","sub ecx, 0x30","cmp cl, 9",jbe 0x6798,"test r9d, r9d",jns 0x6875,"test eax, eax",je 0x6875,"movabs rcx, 0x8000000000000000","cmp rdx, rcx",je 0x6727,"sub rdx, 1","mov qword ptr [r11], rdi","mov r9d, 0x114","mov qword ptr [rsp + 0x90], rdx","mov edx, 0x3b9aca00","sub edx, eax","movsxd rax, edx","mov qword ptr [rsp + 0x38], rax","mov eax, 0x15",jmp 0x57ce,"add rdi, 1","movzx ecx, byte ptr [rdi]","lea esi, [rcx - 0x30]","cmp sil, 9",ja 0x679f,"cmp cl, 0x30",je 0x67f9,"add eax, 1",jmp 0x679f,nop dword ptr [rax + rax],"mov eax, r9d","mov qword ptr [r11], r10","mov qword ptr [rsp + 0x38], rdx","shr eax, 0x1f","mov byte ptr [rsp + 0x90], al","mov rax, r10","sub rax, rdi","cmp r9d, 1","mov qword ptr [rsp + 0x40], rax","sbb eax, eax",not eax,"add eax, 0x14","cmp r9d, 1","sbb r9d, r9d",not r9d,"add r9d, 0x113",jmp 0x57ce,"mov eax, 2",jmp 0x56cd,"xor eax, eax",jmp 0x56cd,"mov rdi, qword ptr [r11]","xor r9d, r9d",jmp 0x66d7,"cmp r9d, 1",cdqe ,"mov qword ptr [rsp + 0x90], rdx","mov qword ptr [rsp + 0x38], rax","sbb eax, eax","mov qword ptr [r11], rdi",not eax,"add eax, 0x16","cmp r9d, 1","sbb r9d, r9d",not r9d,"add r9d, 0x115",jmp 0x57ce,"mov rdi, qword ptr [r13 - 0xd8]","test al, al","mov qword ptr [rsp + 0x48], rdi",je 0x68f8,"lea rsi, [rip + 0xa3c1]","mov edx, 5","xor edi, edi","mov qword ptr [rsp + 0x60], r11","mov dword ptr [rsp + 0x58], r9d","mov qword ptr [rsp + 0x50], r10",call 0x2af0,"mov rsi, qword ptr [rsp + 0x48]","mov rdi, rax","xor eax, eax",call 0x4600,"mov r11, qword ptr [rsp + 0x60]","mov r9d, dword ptr [rsp + 0x58]","mov r10, qword ptr [rsp + 0x50]","mov rax, qword ptr [rsp + 0x48]",jmp 0x61ac,"mov rax, qword ptr [rsp + 0x70]","sub ecx, r8d",seto r8b,"mov dword ptr [r11 + 0x98], ecx","xor ecx, ecx","sub rdx, rdi","movzx r8d, r8b",seto cl,"xor edi, edi","sub rax, rsi",seto dil,"mov qword ptr [r11 + 0x88], rax","xor esi, esi","mov rax, qword ptr [rsp + 0x80]","sub rax, qword ptr [rsp + 0x60]","mov qword ptr [rsp + 0x70], rdi","mov qword ptr [r11 + 0x90], rdx",seto sil,"mov qword ptr [r11 + 0x80], rax","xor edi, edi","mov rax, qword ptr [rsp + 0x88]","sub rax, qword ptr [rsp + 0x58]",seto dil,"mov qword ptr [r11 + 0x78], rax","xor edx, edx","mov rax, qword ptr [rsp + 0x68]","sub rax, qword ptr [rsp + 0x50]",seto dl,"mov qword ptr [r11 + 0x70], rax","mov rax, qword ptr [rsp + 0x78]","mov qword ptr [rsp + 0x50], rdx","sub rax, qword ptr [rsp + 0x48]",jmp 0x569c,"mov rbp, r14","mov edx, dword ptr [rbp]","add rbp, 4","lea eax, [rdx - 0x1010101]",not edx,"and eax, edx","and eax, 0x80808080",je 0x6998,"mov edx, eax","mov r9d, 1","shr edx, 0x10","test eax, 0x8080","cmove eax, edx","lea rdx, [rbp + 2]","mov edi, eax","cmove rbp, rdx","add dil, al","sbb rbp, 3","sub rbp, r14","cmp rbp, 3",je 0x69ea,"xor r9d, r9d","cmp rbp, 4",je 0x6bb1,"lea rcx, [rip + 0x20df0f]","lea rsi, [rip + 0x9d01]","mov dword ptr [rsp + 8], ebx","mov qword ptr [rsp + 0x20], rbp","mov dword ptr [rsp + 0x10], r8d","mov ebx, r9d","mov rbp, rcx","mov qword ptr [rsp + 0x18], r11","test ebx, ebx",je 0x6b88,"mov edx, 3","mov rdi, r14",call 0x2a60,"test eax, eax",sete al,"test al, al",jne 0x6b9a,"add rbp, 0x10","mov rsi, qword ptr [rbp]","test rsi, rsi",jne 0x6a11,"mov r11, qword ptr [rsp + 0x18]","mov r8d, dword ptr [rsp + 0x10]","mov rsi, r14","movsxd rbx, dword ptr [rsp + 8]","mov byte ptr [rsp + 8], al","mov rbp, qword ptr [rsp + 0x20]","mov rdi, r11","mov dword ptr [rsp + 0x28], r8d","mov qword ptr [rsp + 0x10], r11",call 0x48a0,"test rax, rax","mov rcx, rax","mov r11, qword ptr [rsp + 0x10]","mov r8d, dword ptr [rsp + 0x28]",jne 0x5a19,"lea rsi, [rip + 0x9bfc]","mov rdi, r14","mov qword ptr [rsp + 0x18], r11","mov dword ptr [rsp + 0x10], r8d",call 0x2c70,"test eax, eax","mov r8d, dword ptr [rsp + 0x10]","mov r11, qword ptr [rsp + 0x18]",je 0x6bd5,"lea rcx, [rip + 0x20dd8b]","lea rsi, [rip + 0x9c45]","mov rdi, r14","mov qword ptr [rsp + 0x20], r11","mov qword ptr [rsp + 0x18], rcx","mov dword ptr [rsp + 0x10], r8d",call 0x2c70,"test eax, eax","mov r8d, dword ptr [rsp + 0x10]","mov rcx, qword ptr [rsp + 0x18]","mov r11, qword ptr [rsp + 0x20]",je 0x5a19,"add rcx, 0x10","mov rsi, qword ptr [rcx]","test rsi, rsi",jne 0x6abc,"lea rdx, [r14 + rbp - 1]","cmp byte ptr [rdx], 0x53",je 0x6be1,"lea rcx, [rip + 0x20dbd5]","lea rsi, [rip + 0x9bf4]","mov rdi, r14","mov qword ptr [rsp + 0x20], r11","mov qword ptr [rsp + 0x18], rcx","mov dword ptr [rsp + 0x10], r8d",call 0x2c70,"test eax, eax","mov r8d, dword ptr [rsp + 0x10]","mov rcx, qword ptr [rsp + 0x18]","mov r11, qword ptr [rsp + 0x20]",je 0x5a19,"add rcx, 0x10","mov rsi, qword ptr [rcx]","test rsi, rsi",jne 0x6b12,"sub rbp, 1","movzx edx, byte ptr [rsp + 0x5a0]",je 0x6ccc,"mov rax, r14","mov rdx, r14","movzx ecx, byte ptr [rax]","test cl, cl","mov byte ptr [rdx], cl",je 0x6c48,"cmp byte ptr [rax], 0x2e",je 0x6c3e,"add rdx, 1","add rax, 1",jmp 0x6b64,nop dword ptr [rax],"mov rdi, r14",call 0x2c70,"test eax, eax",sete al,jmp 0x6a2b,"movsxd rbx, dword ptr [rsp + 8]","mov r8d, dword ptr [rsp + 0x10]","mov rcx, rbp","mov r11, qword ptr [rsp + 0x18]",jmp 0x5a19,"xor r9d, r9d","cmp byte ptr [rsp + 0x5a3], 0x2e",sete r9b,jmp 0x69ea,"mov r8d, 1",jmp 0x528e,call 0x2b30,"lea rcx, [rip + 0x20deb4]",jmp 0x5a19,"lea rcx, [rip + 0x20dc58]","lea rsi, [rip + 0x9b12]","mov byte ptr [rdx], 0","mov rdi, r14","mov qword ptr [rsp + 0x28], r11","mov qword ptr [rsp + 0x20], rcx","mov dword ptr [rsp + 0x10], r8d","mov qword ptr [rsp + 0x18], rdx",call 0x2c70,"test eax, eax","mov r8d, dword ptr [rsp + 0x10]","mov rcx, qword ptr [rsp + 0x20]","mov r11, qword ptr [rsp + 0x28]",je 0x5a19,"add rcx, 0x10","mov rsi, qword ptr [rcx]","mov rdx, qword ptr [rsp + 0x18]","test rsi, rsi",jne 0x6bf2,"mov byte ptr [rdx], 0x53",jmp 0x6b04,"mov byte ptr [rsp + 8], 1",jmp 0x6b7e,"cmp byte ptr [rsp + 8], 0",je 0x6c7a,"mov rdi, r11","mov rsi, r14","mov dword ptr [rsp + 0x10], r8d","mov qword ptr [rsp + 8], r11",call 0x48a0,"test rax, rax","mov rcx, rax","mov r11, qword ptr [rsp + 8]","mov r8d, dword ptr [rsp + 0x10]",jne 0x5a19,"cmp byte ptr [r11 + 0xd9], 0",je 0x6727,"lea rsi, [rip + 0x9a82]","mov edx, 5","xor edi, edi","mov qword ptr [rsp + 0x10], r11","mov dword ptr [rsp + 8], r8d",call 0x2af0,"mov rsi, r14","mov rdi, rax","xor eax, eax",call 0x4600,"mov eax, 2","mov r9d, 0x3f","mov r8d, dword ptr [rsp + 8]","mov r11, qword ptr [rsp + 0x10]",jmp 0x57ce,"lea rcx, [rip + 0x20d52d]","lea rax, [rip + 0x9a35]","cmp byte ptr [rax], dl",je 0x5a19,"add rcx, 0x10","mov rax, qword ptr [rcx]","test rax, rax",jne 0x6cda,jmp 0x6b5e,nop dword ptr [rax],nop word ptr cs:[rax + rax],push r15,push r14,"mov r14, rdx",push r13,push r12,push rbp,push rbx,"mov rbp, rsi","sub rsp, 0x458","mov qword ptr [rsp + 0x28], rdi","mov rdi, rsi","mov dword ptr [rsp + 0x20], ecx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x448], rax","xor eax, eax","mov qword ptr [rsp], r8","mov qword ptr [rsp + 0x10], r9",call 0x2b10,"test r14, r14","mov qword ptr [rsp + 0x30], rax",je 0x72f0,"mov rax, qword ptr [r14 + 8]","mov rbx, qword ptr [r14]","mov qword ptr [rsp + 0x18], rax","movzx eax, byte ptr [rbp]","cmp al, 0x20",ja 0x75c0,"movabs rcx, 0x100003e00","mov r13, rbp","mov esi, 1","bt rcx, rax","mov rdx, rcx",jb 0x6d9b,jmp 0x6da9,nop word ptr [rax + rax],"mov rax, rsi","shl rax, cl","test rax, rdx",je 0x6da9,"add r13, 1","movzx ecx, byte ptr [r13]","cmp cl, 0x20",jbe 0x6d90,"lea rdi, [rip + 0x99c4]","mov ecx, 4","mov rsi, r13","repe cmpsb byte ptr [rsi], byte ptr [rdi]",jne 0x6e18,"movzx r12d, byte ptr [r13 + 4]","lea rcx, [r13 + 4]","test r12b, r12b",je 0x6e18,"mov rdx, rcx","mov eax, r12d","mov edi, 1",jmp 0x6dfb,nop word ptr [rax + rax],"cmp al, 0x22",je 0x71b0,"mov rax, rdx","lea rdx, [rax + 1]","movzx eax, byte ptr [rax + 1]","add rdi, 1","test al, al",je 0x6e18,"cmp al, 0x5c",jne 0x6de0,"lea rax, [rdx + 1]","movzx edx, byte ptr [rdx + 1]","cmp dl, 0x5c",je 0x6deb,"cmp dl, 0x22",je 0x6deb,nop dword ptr [rax],"mov r15, qword ptr [rsp]","lea rdx, [rsp + 0xf0]","mov rsi, r14","mov rdi, r15",call 0xb840,"test rax, rax",je 0x71d8,"mov qword ptr [rsp + 8], 0","cmp byte ptr [r13], 0","lea rax, [rip + 0x999f]","mov qword ptr [rsp + 0x1e0], 0","pxor xmm0, xmm0","mov dword ptr [rsp + 0x1cc], 2","mov qword ptr [rsp + 0x248], 0","mov byte ptr [rsp + 0x250], 0","lea r12, [rsp + 0x130]","mov byte ptr [rsp + 0x251], 0","mov qword ptr [rsp + 0x258], 0","mov r14d, 0x76a700","cmove r13, rax","movzx eax, byte ptr [rsp + 0x20]","mov qword ptr [rsp + 0x260], 0","mov qword ptr [rsp + 0x1b0], r13","movsxd r13, dword ptr [rsp + 0x18]","movups xmmword ptr [rsp + 0x218], xmm0","movups xmmword ptr [rsp + 0x228], xmm0","movups xmmword ptr [rsp + 0x238], xmm0","mov byte ptr [rsp + 0x289], al","movsxd rax, dword ptr [rsp + 0x104]","mov qword ptr [rsp + 0x210], r13","and byte ptr [rsp + 0x289], 1","lea r13, [rsp + 0x170]","add rax, 0x76c","mov qword ptr [rsp + 0x1d8], rax","mov eax, dword ptr [rsp + 0x100]","add eax, 1",cdqe ,"mov qword ptr [rsp + 0x1e8], rax","movsxd rax, dword ptr [rsp + 0xfc]","mov qword ptr [rsp + 0x1f0], rax","movsxd rax, dword ptr [rsp + 0xf8]","mov qword ptr [rsp + 0x1f8], rax","movsxd rax, dword ptr [rsp + 0xf4]","mov qword ptr [rsp + 0x200], rax","movsxd rax, dword ptr [rsp + 0xf0]","mov qword ptr [rsp + 0x208], rax","mov eax, dword ptr [rsp + 0x110]","mov dword ptr [rsp + 0x90], eax","mov qword ptr [rsp + 0x278], 0","mov rdx, qword ptr [rsp + 0x120]","mov qword ptr [rsp + 0x268], 0","mov qword ptr [rsp + 0x270], 0","mov qword ptr [rsp + 0x280], 0","mov byte ptr [rsp + 0x288], 0","mov byte ptr [rsp + 0x28a], 0","mov byte ptr [rsp + 0x28b], 0","mov byte ptr [rsp + 0x28d], 0","mov byte ptr [rsp + 0x28c], 0","mov byte ptr [rsp + 0x28e], 0","mov byte ptr [rsp + 0x28f], 0","mov byte ptr [rsp + 0x290], 0","mov qword ptr [rsp + 0x298], rdx","mov dword ptr [rsp + 0x2a0], 0x10d","mov dword ptr [rsp + 0x2a4], eax","mov qword ptr [rsp + 0x2a8], 0","movsxd rax, r14d","add rax, rbx",jo 0x7061,"mov rdx, r13","mov rsi, r12","mov rdi, r15","mov qword ptr [rsp + 0x130], rax",call 0xb840,"test rax, rax",je 0x7051,"mov rax, qword ptr [rsp + 0x1a0]","test rax, rax",je 0x7051,"mov edx, dword ptr [rsp + 0x190]","cmp edx, dword ptr [rsp + 0x2a4]",jne 0x771e,"add r14d, 0x76a700","cmp r14d, 0x1da9c00",jne 0x700d,"mov rdi, qword ptr [rsp + 0x298]","test rdi, rdi",je 0x709b,"mov rsi, qword ptr [rsp + 0x2a8]","test rsi, rsi",je 0x709b,call 0x2c70,"test eax, eax",jne 0x709b,"mov dword ptr [rsp + 0x2a4], 0xffffffff","mov qword ptr [rsp + 0x2a8], 0","lea r13, [rsp + 0x1b0]","mov rdi, r13",call 0x50f0,"test eax, eax",jne 0x7160,"cmp byte ptr [rsp + 0x289], 0",jne 0x7308,"movzx r12d, byte ptr [rsp + 0x250]","test r12b, r12b",jne 0x72d0,"mov rax, qword ptr [rsp + 0x278]","or rax, qword ptr [rsp + 0x258]","or rax, qword ptr [rsp + 0x260]","mov rdx, qword ptr [rsp + 0x280]","or rax, qword ptr [rsp + 0x270]","add rdx, qword ptr [rsp + 0x268]","or rax, rdx","cmp rax, 1",jle 0x7749,"xor r12d, r12d","cmp r15, qword ptr [rsp]",je 0x7121,"mov rdi, r15",call 0xb830,"mov rdi, qword ptr [rsp + 8]",call 0x2a10,"mov rbx, qword ptr [rsp + 0x448]","xor rbx, qword ptr fs:[0x28]","mov eax, r12d",jne 0x8633,"add rsp, 0x458",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop word ptr [rax + rax],"movzx r12d, byte ptr [rsp + 0x289]","test r12b, r12b",je 0x7113,"add rbp, qword ptr [rsp + 0x30]","mov rbx, qword ptr [rsp + 0x1b0]","mov edx, 5","cmp rbx, rbp",jb 0x75a0,"lea rsi, [rip + 0x95e9]","xor edi, edi",call 0x2af0,"mov rdi, rax","mov rsi, rbx","xor eax, eax","xor r12d, r12d",call 0x4600,jmp 0x7113,nop dword ptr [rax],"cmp rdi, 0x64",jle 0x71f0,"mov qword ptr [rsp + 0x38], rcx",call 0x2cf0,"test rax, rax","mov qword ptr [rsp + 0x10], rax","mov qword ptr [rsp + 8], rax","mov rcx, qword ptr [rsp + 0x38]",jne 0x7206,nop dword ptr [rax],"mov qword ptr [rsp + 8], 0","xor r12d, r12d",jmp 0x7121,nop dword ptr [rax],"lea rax, [rsp + 0x370]","mov qword ptr [rsp + 8], 0","mov qword ptr [rsp + 0x10], rax","cmp r12b, 0x22","mov rdx, qword ptr [rsp + 0x10]",je 0x723d,nop dword ptr [rax],"xor eax, eax","cmp r12b, 0x5c",sete al,"add rdx, 1","add rax, rcx","movzx r12d, byte ptr [rax + 1]","movzx ecx, byte ptr [rax]","cmp r12b, 0x22","mov byte ptr [rdx - 1], cl","lea rcx, [rax + 1]",jne 0x7218,"mov rdi, qword ptr [rsp + 0x10]","mov byte ptr [rdx], 0","xor r12d, r12d","mov qword ptr [rsp + 0x38], rcx",call 0xb580,"test rax, rax","mov r15, rax",je 0x7121,"mov rcx, qword ptr [rsp + 0x38]","movzx eax, byte ptr [rcx + 1]","lea r13, [rcx + 1]","cmp al, 0x20",ja 0x72a9,"movabs rcx, 0x100003e00","mov esi, 1","bt rcx, rax","mov rdx, rcx",jb 0x729b,jmp 0x72a9,nop dword ptr [rax],"mov rax, rsi","shl rax, cl","test rax, rdx",je 0x72a9,"add r13, 1","movzx ecx, byte ptr [r13]","cmp cl, 0x20",jbe 0x7290,"lea rdx, [rsp + 0xf0]","mov rsi, r14","mov rdi, r15","xor r12d, r12d",call 0xb840,"test rax, rax",jne 0x6e41,jmp 0x7113,nop dword ptr [rax],"mov rax, qword ptr [rsp + 0x28]","movdqu xmm0, xmmword ptr [rsp + 0x208]","movups xmmword ptr [rax], xmm0",jmp 0x7113,nop word ptr cs:[rax + rax],"lea r14, [rsp + 0x60]","mov rdi, r14",call 0x4320,jmp 0x6d52,nop word ptr [rax + rax],"lea rsi, [rip + 0x9481]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"cmp byte ptr [rsp + 0x250], 0","mov edx, 5","lea rsi, [rip + 0x9468]",jne 0x73a0,"cmp qword ptr [rsp + 0x280], 0","mov edx, 5","lea rsi, [rip + 0x946a]",jne 0x73a0,"mov rbx, qword ptr [rsp + 0x10]","test rbx, rbx",je 0x7394,"cmp qword ptr [rsp], r15",je 0x7806,"lea rsi, [rip + 0x9465]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rcx, rbx","mov rdi, qword ptr [rip + 0x20dd5d]","mov rdx, rax","mov esi, 1","xor eax, eax",call 0x2e30,jmp 0x73bd,"lea rsi, [rip + 0x946d]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdi, qword ptr [rip + 0x20dd32]","mov rdx, rax","mov esi, 1","xor eax, eax",call 0x2e30,"cmp qword ptr [rsp + 0x268], 0","mov rax, qword ptr [rsp + 0x280]",je 0x7410,"test rax, rax",jne 0x76d6,"mov edi, dword ptr [rsp + 0x1c4]","mov rsi, qword ptr [rip + 0x20dcf9]","test edi, edi",jle 0x7420,"lea rdi, [rip + 0x942b]","mov rcx, rsi","mov edx, 5","mov esi, 1",call 0x2e20,"mov rax, qword ptr [rsp + 0x280]",nop dword ptr [rax],"test rax, rax",jne 0x76d6,"mov rsi, qword ptr [rip + 0x20dcc0]","mov edi, 0xa",call 0x2c30,"cmp byte ptr [rsp + 0x250], 0","movzx r12d, byte ptr [rsp + 0x289]",je 0x75c8,"mov rax, qword ptr [rsp + 0x28]","movdqu xmm0, xmmword ptr [rsp + 0x208]","movups xmmword ptr [rax], xmm0","test r12b, r12b",je 0x7713,"mov edx, 5","lea rsi, [rip + 0x9545]","cmp qword ptr [rsp + 0x10], 0",je 0x7672,"mov rsi, qword ptr [rsp + 0x10]","lea rdi, [rip + 0x936a]","mov ecx, 5","mov edx, 5","repe cmpsb byte ptr [rsi], byte ptr [rdi]",je 0x766b,"lea rsi, [rip + 0x9f08]","xor edi, edi",call 0x2af0,"mov rsi, qword ptr [rsp + 0x10]","mov rdi, rax","xor eax, eax",call 0x4600,"mov r14, qword ptr [rsp + 0x28]","lea rsi, [rip + 0x9f0e]","xor edi, edi","mov edx, 5","mov rbx, qword ptr [r14]","mov rbp, qword ptr [r14 + 8]",call 0x2af0,"mov rdi, rax","xor eax, eax","mov rsi, rbx","lea rbx, [rsp + 0x130]","mov edx, ebp",call 0x4600,"mov rsi, rbx","mov rdi, r14",call 0x2bb0,"test rax, rax",je 0x7529,"lea rdx, [rsp + 0x300]","mov rdi, rbx","xor esi, esi",call 0x4b50,"lea rsi, [rip + 0x94d3]","mov rbx, rax","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,"lea rbx, [rsp + 0x170]","mov rsi, qword ptr [rsp + 0x28]","mov rdi, r15","mov rdx, rbx",call 0xb840,"test rax, rax",je 0x7113,"mov edi, dword ptr [rsp + 0x198]","lea rsi, [rsp + 0x2e0]",call 0x4500,"lea rdx, [rsp + 0x300]","xor esi, esi","mov rdi, rbx","mov rbp, rax",call 0x4b50,"lea rsi, [rip + 0x9477]","mov rbx, rax","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdx, rbp","mov rdi, rax","mov rsi, rbx","xor eax, eax",call 0x4600,jmp 0x7113,nop ,"lea rsi, [rip + 0x9721]","xor edi, edi",call 0x2af0,"mov rdi, rax",jmp 0x719a,nop word ptr cs:[rax + rax],"mov r13, rbp",jmp 0x6da9,"mov rsi, qword ptr [rsp + 0x278]","mov rcx, qword ptr [rsp + 0x258]","mov rdx, qword ptr [rsp + 0x280]","add rdx, qword ptr [rsp + 0x268]","mov rax, rsi","or rax, rcx","or rax, qword ptr [rsp + 0x260]","or rax, qword ptr [rsp + 0x270]","or rax, rdx","cmp rax, 1",jle 0x7749,"test r12b, r12b",je 0x7110,"cmp rsi, 1",jg 0x76bb,"cmp rcx, 1",jg 0x76a8,"cmp qword ptr [rsp + 0x260], 1",jg 0x7698,"cmp qword ptr [rsp + 0x270], 1",jg 0x7688,"mov rax, qword ptr [rsp + 0x280]","add rax, qword ptr [rsp + 0x268]","cmp rax, 1",jle 0x7110,"lea rdi, [rip + 0x9761]","xor eax, eax",call 0x4600,jmp 0x7110,"lea rsi, [rip + 0x9354]","xor edi, edi",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x74ae,"lea rdi, [rip + 0x9701]","xor eax, eax",call 0x4600,jmp 0x763e,"lea rdi, [rip + 0x96c9]","xor eax, eax",call 0x4600,jmp 0x7633,"lea rdi, [rip + 0x9691]","xor eax, eax",call 0x4600,jmp 0x7628,"lea rdi, [rip + 0x9656]","xor eax, eax",call 0x4600,"mov rcx, qword ptr [rsp + 0x258]",jmp 0x761e,"mov edi, dword ptr [rsp + 0x1c8]","lea rsi, [rsp + 0x2e0]",call 0x4500,"mov rdi, qword ptr [rip + 0x20d9ef]","lea rdx, [rip + 0x911f]","mov rcx, rax","mov esi, 1","xor eax, eax",call 0x2e30,"mov rsi, qword ptr [rip + 0x20d9d2]",jmp 0x7420,"mov r12d, 1",jmp 0x7113,"mov qword ptr [rsp + 0x2a8], rax","mov dword ptr [rsp + 0x2b0], 0x10d","mov dword ptr [rsp + 0x2b4], edx","mov qword ptr [rsp + 0x2b8], 0",jmp 0x7061,"mov rbp, qword ptr [rsp + 0x1d8]","test rbp, rbp",js 0x7c70,"cmp qword ptr [rsp + 0x1e0], 2",je 0x7ca0,"xor r10d, r10d","cmp rbp, 0x76c","lea rax, [rbp - 0x76c]",jae 0x7c90,"test rax, rax",jns 0x7c83,"movsxd rdx, eax","mov dword ptr [rsp + 0x84], eax","cmp rax, rdx","mov edx, 1","cmovne r10d, edx","mov r14d, r10d","and r14d, 1","test r14b, r14b",je 0x7843,"test r12b, r12b",je 0x77d4,"lea rsi, [rip + 0x9068]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,"movzx eax, byte ptr [rsp + 0x289]","test al, al","mov edx, 5","lea rsi, [rip + 0x962e]",je 0x7110,"xor edi, edi",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x7110,"mov rsi, qword ptr [rsp + 0x10]","lea rdi, [rip + 0x8fd7]","mov ecx, 5","mov edx, 5","repe cmpsb byte ptr [rsi], byte ptr [rdi]","lea rsi, [rip + 0x94cb]",je 0x73a0,"lea rsi, [rip + 0x8fbc]","xor edi, edi",call 0x2af0,"mov rcx, qword ptr [rsp + 0x10]",jmp 0x737c,"mov rax, qword ptr [rsp + 0x1e8]","xor edx, edx","add rax, -1",jo 0x8846,"movsxd rcx, eax","mov dword ptr [rsp + 0x80], eax","cmp rax, rcx","mov ecx, 1","movzx eax, byte ptr [rsp + 0x289]","cmovne edx, ecx","test edx, edx",jne 0x77dc,"mov rdx, qword ptr [rsp + 0x1f0]","movsxd rcx, edx","mov dword ptr [rsp + 0x7c], edx","cmp rdx, rcx",setne bpl,"movzx ebp, bpl",jne 0x77dc,"cmp qword ptr [rsp + 0x278], 0",jne 0x7cc6,"cmp byte ptr [rsp + 0x251], 0",je 0x7f3a,"cmp qword ptr [rsp + 0x258], 0",jne 0x7f3a,"cmp qword ptr [rsp + 0x260], 0",je 0x7cc6,"test al, al","mov qword ptr [rsp + 0x70], 0","mov dword ptr [rsp + 0x78], 0","mov qword ptr [rsp + 0x210], 0",jne 0x7f5f,"mov dword ptr [rsp + 0x90], 0xffffffff","cmp qword ptr [rsp + 0x268], 0",je 0x7920,"mov eax, dword ptr [rsp + 0x1c4]","mov dword ptr [rsp + 0x90], eax","movdqa xmm0, xmmword ptr [rsp + 0x70]","lea r12, [rsp + 0xb0]","mov rdi, r15","mov rax, qword ptr [rsp + 0xa0]","movaps xmmword ptr [rsp + 0xb0], xmm0","movdqa xmm0, xmmword ptr [rsp + 0x80]","mov qword ptr [rsp + 0xe0], rax","lea rax, [rsp + 0x70]","movaps xmmword ptr [rsp + 0xc0], xmm0","mov rbx, rax","mov rsi, rax","mov qword ptr [rsp + 0x18], rax","movdqa xmm0, xmmword ptr [rsp + 0x90]","movaps xmmword ptr [rsp + 0xd0], xmm0",call 0xb8f0,"mov rdx, rbx","mov rcx, rax","mov rsi, r12","mov rdi, r15","mov qword ptr [rsp + 0x20], rax",call 0x46f0,"test al, al",jne 0x7deb,"mov rax, qword ptr [rsp + 0x280]","test rax, rax","mov qword ptr [rsp + 0x40], rax",jne 0x7d56,"mov eax, dword ptr [rsp + 0xc4]","mov r10d, dword ptr [rsp + 0xb0]","mov r9d, dword ptr [rsp + 0x70]","mov ebx, dword ptr [rsp + 0xb8]","mov esi, dword ptr [rsp + 0x78]","mov edi, dword ptr [rsp + 0xbc]","mov edx, dword ptr [rsp + 0x7c]","mov r11d, dword ptr [rsp + 0xc0]","mov dword ptr [rsp + 0x30], eax","mov eax, dword ptr [rsp + 0x84]","cmp r10d, r9d","mov r8d, dword ptr [rsp + 0xb4]","mov ecx, dword ptr [rsp + 0x74]","mov dword ptr [rsp + 0x48], ebx","mov dword ptr [rsp + 0x4c], esi","mov dword ptr [rsp + 0x38], eax","mov dword ptr [rsp + 0x10], edi","mov dword ptr [rsp + 0x20], edx","mov dword ptr [rsp + 0x28], r11d","mov r14d, dword ptr [rsp + 0x80]","movzx eax, byte ptr [rsp + 0x289]",jne 0x84af,"cmp r8d, ecx",jne 0x84af,"cmp edi, edx",jne 0x84af,"cmp ebx, esi",je 0x84af,"cmp r11d, r14d",jne 0x84af,"mov esi, dword ptr [rsp + 0x38]","cmp dword ptr [rsp + 0x30], esi",jne 0x84af,"test al, al",je 0x7110,"lea rsi, [rip + 0x946a]","mov edx, 5","xor edi, edi","lea rbx, [rsp + 0x3e0]",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"mov rdx, rbx","mov rsi, r13","mov rdi, r12",call 0x4b50,"lea rsi, [rip + 0x8de8]","mov rbp, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,"mov rdi, qword ptr [rsp + 0x18]","mov rdx, rbx","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x8dd3]","mov rbp, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,"lea rsi, [rip + 0x8daf]","mov ebp, 1","mov rax, rsi","mov r11d, dword ptr [rsp + 0x4c]","cmp dword ptr [rsp + 0x48], r11d","lea rcx, [rip + 0x8d96]","lea rdx, [rip + 0x8c5a]","mov r11d, dword ptr [rsp + 0x20]","mov r10d, dword ptr [rsp + 0x38]","mov r8, rcx","mov rdi, rcx","lea r9, [rip + 0x8c41]","cmovne r8, rdx","cmp dword ptr [rsp + 0x10], r11d","cmovne rdi, rdx","cmp dword ptr [rsp + 0x28], r14d","cmove rdx, rcx","cmp dword ptr [rsp + 0x30], r10d","cmove r9, rcx","sub rsp, 8","mov ecx, 0x64",push rsi,push rax,"mov esi, 0x64",push r8,"lea r8, [rip + 0x939a]",push rdi,push rdx,"mov rdi, rbx","mov edx, 1","xor eax, eax",call 0x2a00,"add rsp, 0x30","mov eax, 0x34",jmp 0x7b8c,"sub rax, 1","cmp byte ptr [rbx + rax], 0x20",jne 0x7b92,"test eax, eax","mov edx, eax",jne 0x7b82,"movsxd rax, edx","lea rdi, [rip + 0x8d6c]","mov rsi, rbx","mov byte ptr [rsp + rax + 0x3e0], 0","xor eax, eax",call 0x4600,"lea rsi, [rip + 0x8d10]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"test ebp, ebp",je 0x7bec,"lea rsi, [rip + 0x936a]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"mov ebx, dword ptr [rsp + 0x20]","cmp dword ptr [rsp + 0x10], ebx",je 0x7c1a,"cmp dword ptr [rsp + 0x28], r14d",je 0x7c1a,"lea rsi, [rip + 0x9374]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"lea rsi, [rip + 0x937f]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"cmp qword ptr [rsp + 0x40], 0","mov edx, 5",je 0x8985,"lea rsi, [rip + 0x8c8e]","xor edi, edi",call 0x2af0,"lea rdi, [rip + 0x8ca4]","mov rsi, rax","xor eax, eax",call 0x4600,jmp 0x7110,nop dword ptr [rax],"mov rax, -0x76c","xor r10d, r10d","sub rax, rbp",jno 0x7789,"mov r10d, 1",jmp 0x7789,nop ,"test rax, rax",jns 0x7789,jmp 0x7c83,nop dword ptr [rax + rax],"cmp rbp, 0x44","mov ebx, 0x76c","mov eax, 0x7d0","cmovle rbx, rax","add rbx, rbp","test r12b, r12b",jne 0x7ef8,"mov rbp, rbx",jmp 0x7769,"mov r9d, dword ptr [rsp + 0x1cc]","mov rbx, qword ptr [rsp + 0x1f8]","test r9d, r9d",je 0x844b,"cmp r9d, 1",jne 0x7f23,"lea rdx, [rbx - 1]","lea r9d, [rbx + 0xc]","cmp rdx, 0xa",jbe 0x7f30,"cmp rbx, 0xc",jne 0x8850,"mov dword ptr [rsp + 0x78], 0xc","mov r9d, 0xc","mov rdx, qword ptr [rsp + 0x200]","mov rcx, qword ptr [rsp + 0x208]","test al, al","mov dword ptr [rsp + 0x74], edx","mov dword ptr [rsp + 0x70], ecx",jne 0x858a,"mov rax, qword ptr [rsp + 0x258]","or rax, qword ptr [rsp + 0x260]","or rax, qword ptr [rsp + 0x278]",je 0x7907,jmp 0x78fc,"mov edi, dword ptr [rsp + 0x1c8]","lea rsi, [rsp + 0x3e3]","lea rbx, [rsp + 0x3e0]","mov word ptr [rsp + 0x3e0], 0x5858","mov byte ptr [rsp + 0x3e2], 0x58",call 0x4500,"mov rdi, rbx",call 0xb580,"test rax, rax",je 0x8813,"mov rbx, qword ptr [rsp + 0x18]","mov rdi, qword ptr [rsp + 0x18]","mov ecx, 0xe","mov rsi, r12","mov qword ptr [rsp + 0x30], rax","rep movsd dword ptr [rdi], dword ptr [rsi]","mov rsi, rbx","mov rdi, rax",call 0xb8f0,"mov r8, qword ptr [rsp + 0x30]","mov rdx, rbx","mov rcx, rax","mov rsi, r12","mov qword ptr [rsp + 0x20], rax","mov rdi, r8",call 0x46f0,"mov r8, qword ptr [rsp + 0x30]","mov ebx, eax","mov rdi, r8",call 0xb830,"test bl, bl",je 0x79b4,"cmp qword ptr [rsp + 0x260], 0",je 0x7ff8,"cmp qword ptr [rsp + 0x258], 0",jne 0x83ea,"mov rax, qword ptr [rsp + 0x1b8]","test rax, rax",jle 0x7e2a,"xor ebp, ebp","mov ebx, dword ptr [rsp + 0x1c0]","cmp dword ptr [rsp + 0x88], ebx",setne bpl,"sub rax, rbp","imul rcx, rax, 7",jo 0x7e7c,"mov eax, dword ptr [rsp + 0x1c0]","sub eax, dword ptr [rsp + 0x88]","mov esi, 7","add eax, 7",cdq ,idiv esi,"movsxd rax, edx","add rax, rcx",jo 0x7e7c,"movsxd rdx, dword ptr [rsp + 0x7c]","add rax, rdx",seto dl,"movsxd rcx, eax","mov dword ptr [rsp + 0x7c], eax","cmp rax, rcx","movzx edx, dl","mov ecx, 1","cmovne edx, ecx","test edx, edx",je 0x7f72,"cmp byte ptr [rsp + 0x289], 0",je 0x7110,"mov rdi, qword ptr [rsp + 0x18]","lea rdx, [rsp + 0x300]","mov rsi, r13",call 0x4b50,"lea rsi, [rsp + 0x3e0]","mov r14d, dword ptr [rsp + 0x1c0]","mov rbp, qword ptr [rsp + 0x1b8]","mov rdi, r13","mov r12, rax",call 0x4c10,"lea rsi, [rip + 0x90ff]","mov rbx, rax","xor edi, edi","mov edx, 5",call 0x2af0,"mov r8, r12","mov rdi, rax","mov ecx, r14d","mov rdx, rbp","mov rsi, rbx","xor eax, eax",call 0x4600,jmp 0x7110,nop dword ptr [rax + rax],"lea rsi, [rip + 0x8ee9]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbp","mov rdi, rax","mov rdx, rbx","xor eax, eax","mov rbp, rbx",call 0x4600,jmp 0x7769,"cmp rbx, 0x17",ja 0x8470,"mov r9d, ebx","mov dword ptr [rsp + 0x78], r9d",jmp 0x7d13,"test al, al","mov qword ptr [rsp + 0x70], 0","mov dword ptr [rsp + 0x78], 0","mov qword ptr [rsp + 0x210], 0",je 0x7d33,"lea rdi, [rip + 0x8f3a]","xor eax, eax",call 0x4600,jmp 0x7d33,"mov rsi, qword ptr [rsp + 0x18]","mov rdi, r15","mov dword ptr [rsp + 0x90], 0xffffffff",call 0xb8f0,"mov qword ptr [rsp + 0x20], rax","add rax, 1",je 0x7e7c,"cmp byte ptr [rsp + 0x289], 0",je 0x83fc,"lea rbx, [rsp + 0x300]","mov rdi, qword ptr [rsp + 0x18]","mov rsi, r13","mov rdx, rbx",call 0x4b50,"lea rsi, [rsp + 0x3e0]","mov rdi, r13","mov rbp, rax",call 0x4c10,"lea rsi, [rip + 0x8933]","mov rbx, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rdx, rbp","mov rdi, rax","mov rsi, rbx","xor eax, eax",call 0x4600,"cmp byte ptr [rsp + 0x289], 0",je 0x83fc,"cmp qword ptr [rsp + 0x258], 0","mov rax, qword ptr [rsp + 0x260]",jne 0x85ea,"test rax, rax",je 0x88a5,"lea rbx, [rsp + 0x300]","mov rdi, qword ptr [rsp + 0x18]","mov rdx, rbx","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x88fa]","mov rbx, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,"mov rax, qword ptr [rsp + 0x218]","mov rdx, qword ptr [rsp + 0x220]","movzx r14d, byte ptr [rsp + 0x289]","or rdx, rax","mov rbx, rdx","or rbx, qword ptr [rsp + 0x228]",je 0x837a,"test r14b, r14b",je 0x841d,"test rdx, rdx",je 0x8878,"cmp dword ptr [rsp + 0x7c], 0xf",je 0x80c4,"lea rsi, [rip + 0x8fda]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"cmp qword ptr [rsp + 0x228], 0",jne 0x8878,"movsxd rdx, dword ptr [rsp + 0x84]","xor eax, eax","mov rcx, rdx","add rcx, qword ptr [rsp + 0x218]","movsxd rdx, ecx",seto al,"mov ebx, ecx","cmp rcx, rdx","mov edx, 1","cmovne eax, edx","test eax, eax",jne 0x813e,"movsxd r12, dword ptr [rsp + 0x80]","xor eax, eax","add r12, qword ptr [rsp + 0x220]","movsxd rdx, r12d",seto al,"cmp r12, rdx",jne 0x813e,"test eax, eax",jne 0x813e,"movsxd rbp, dword ptr [rsp + 0x7c]","xor eax, eax","add rbp, qword ptr [rsp + 0x228]","movsxd rdx, ebp",seto al,"cmp rbp, rdx",jne 0x813e,"test eax, eax",je 0x817a,"cmp byte ptr [rsp + 0x289], 0",je 0x7110,"lea rsi, [rip + 0x8806]","xor edi, edi","mov edx, 5",call 0x2af0,"lea rsi, [rip + 0x8801]","mov rdi, rax","mov edx, 0x86b","xor eax, eax",call 0x4600,jmp 0x7110,"mov eax, dword ptr [rsp + 0xb8]","mov rsi, qword ptr [rsp + 0x18]","mov rdi, r15","mov dword ptr [rsp + 0x84], ebx","mov dword ptr [rsp + 0x80], r12d","mov dword ptr [rsp + 0x7c], ebp","mov dword ptr [rsp + 0x78], eax","mov eax, dword ptr [rsp + 0xb4]","mov dword ptr [rsp + 0x74], eax","mov eax, dword ptr [rsp + 0xb0]","mov dword ptr [rsp + 0x70], eax","mov eax, dword ptr [rsp + 0xd0]","mov dword ptr [rsp + 0x90], eax",call 0xb8f0,"mov qword ptr [rsp + 0x20], rax","add rax, 1",je 0x894e,"movzx r14d, byte ptr [rsp + 0x289]","test r14b, r14b",je 0x837a,"mov rcx, qword ptr [rsp + 0x228]","mov rax, qword ptr [rsp + 0x220]","lea rsi, [rip + 0x8f77]","mov r14, qword ptr [rsp + 0x218]","xor edi, edi","mov edx, 5","mov qword ptr [rsp + 0x38], rcx","mov qword ptr [rsp + 0x30], rax",call 0x2af0,"mov rcx, qword ptr [rsp + 0x38]","mov rdx, qword ptr [rsp + 0x30]","mov rsi, r14","mov rdi, rax","xor eax, eax",call 0x4600,"mov rdi, qword ptr [rsp + 0x18]","lea rdx, [rsp + 0x300]","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x8726]","xor edi, edi","mov r14, rax","mov edx, 5",call 0x2af0,"mov rsi, r14","mov rdi, rax","xor eax, eax",call 0x4600,"mov eax, dword ptr [rsp + 0xd0]","cmp eax, -1",je 0x82a0,"cmp eax, dword ptr [rsp + 0x90]",je 0x82a0,"lea rsi, [rip + 0x8f2e]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"cmp qword ptr [rsp + 0x228], 0",jne 0x8371,"cmp ebp, dword ptr [rsp + 0x7c]",jne 0x82d2,"cmp qword ptr [rsp + 0x220], 0",jne 0x8371,"cmp r12d, dword ptr [rsp + 0x80]",je 0x8371,"lea rsi, [rip + 0x8f1f]","mov edx, 5","xor edi, edi","lea r14, [rsp + 0x2d3]",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"mov edi, ebx","mov rsi, r14",call 0x2ea0,"lea rsi, [rip + 0x8f30]","mov edx, 5","xor edi, edi","mov rbx, rax",call 0x2af0,"lea edx, [r12 + 1]","mov ecx, ebp","mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,"mov eax, dword ptr [rsp + 0x80]","mov edi, dword ptr [rsp + 0x84]","mov rsi, r14","mov r12d, dword ptr [rsp + 0x7c]","lea ebx, [rax + 1]",call 0x2ea0,"lea rsi, [rip + 0x8f10]","mov rbp, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov ecx, r12d","mov rdi, rax","mov edx, ebx","mov rsi, rbp","xor eax, eax",call 0x4600,"movzx r14d, byte ptr [rsp + 0x289]","cmp qword ptr [rsp + 0x280], 0",je 0x8638,"movsxd rax, dword ptr [rsp + 0x1c8]","xor edx, edx","mov rcx, qword ptr [rsp + 0x20]","mov rbx, rax","sub rax, qword ptr [rsp + 0x98]",seto dl,"sub rcx, rax",seto al,"mov qword ptr [rsp + 0x20], rcx","movzx eax, al","or rdx, rax",je 0x8638,"test r14b, r14b",je 0x7110,"lea rsi, [rip + 0x8ebb]","xor edi, edi","mov edx, 5",call 0x2af0,"mov esi, ebx","mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x7110,"movzx r14d, byte ptr [rsp + 0x289]","test r14b, r14b",jne 0x85f3,"mov rax, qword ptr [rsp + 0x218]","mov rdx, qword ptr [rsp + 0x220]","or rdx, rax","or rdx, qword ptr [rsp + 0x228]",je 0x837a,"movsxd rdx, dword ptr [rsp + 0x84]","add rax, rdx",seto dl,"movsxd rcx, eax","mov ebx, eax","cmp rax, rcx","movzx edx, dl","mov ecx, 1","cmovne edx, ecx","test edx, edx",jne 0x7110,jmp 0x80ff,"lea rdx, [rbx - 1]","cmp rdx, 0xa",jbe 0x7f2d,"cmp rbx, 0xc",jne 0x8864,"mov dword ptr [rsp + 0x78], 0",jmp 0x7d13,"lea rbp, [rip + 0x842f]","mov dword ptr [rsp + 0x78], 0xffffffff","test al, al",je 0x7110,"lea rsi, [rip + 0x83b3]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdx, rbp","mov rdi, rax","mov rsi, rbx","xor eax, eax",call 0x4600,jmp 0x7110,"test al, al",je 0x7110,"lea rsi, [rip + 0x8a1a]","mov edx, 5","xor edi, edi","lea rbx, [rsp + 0x3e0]","mov dword ptr [rsp + 0x5c], ecx","mov dword ptr [rsp + 0x58], r8d","mov dword ptr [rsp + 0x54], r9d","mov dword ptr [rsp + 0x50], r10d",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"mov rdi, r12","mov rdx, rbx","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x8385]","mov r12, rax","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, r12","mov rdi, rax","xor eax, eax",call 0x4600,"mov rdi, qword ptr [rsp + 0x18]","mov rdx, rbx","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x8370]","mov edx, 5","xor edi, edi","mov r12, rax",call 0x2af0,"mov rsi, r12","mov rdi, rax","xor eax, eax",call 0x4600,"mov r10d, dword ptr [rsp + 0x50]","mov r9d, dword ptr [rsp + 0x54]","lea rdx, [rip + 0x8342]","mov r8d, dword ptr [rsp + 0x58]","mov ecx, dword ptr [rsp + 0x5c]","lea rax, [rip + 0x81fd]","mov rsi, rdx","cmp r10d, r9d","cmovne rsi, rax","cmp r8d, ecx","cmove rax, rdx",jmp 0x7aff,"lea rbx, [rsp + 0x300]","lea r8, [rip + 0x82c3]",push rcx,push rdx,"mov ecx, 0x64","mov edx, 1","mov esi, 0x64","xor eax, eax","mov rdi, rbx",call 0x2a00,pop rcx,pop rsi,"cmp qword ptr [rsp + 0x278], 0","mov edx, 5",je 0x893b,"lea rsi, [rip + 0x886f]","xor edi, edi",call 0x2af0,"mov rdi, rax","mov rsi, rbx","xor eax, eax",call 0x4600,jmp 0x7d33,"test rax, rax",je 0x8026,"lea rbx, [rsp + 0x300]","lea rsi, [rsp + 0x3e0]","mov rdi, r13",call 0x4c10,"lea rsi, [rip + 0x8a36]","mov rbp, rax","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbp","mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x802e,call 0x2b30,"test r14b, r14b",jne 0x87d1,"mov rbp, qword ptr [rsp + 0x230]","movzx r12d, byte ptr [rsp + 0x289]","imul r9, rbp, 0xe10",jo 0x87b7,"add r9, qword ptr [rsp + 0x20]",jo 0x87b7,"mov r13, qword ptr [rsp + 0x238]","imul rax, r13, 0x3c",jo 0x87b7,"add r9, rax",jo 0x87b7,"mov r14, qword ptr [rsp + 0x240]","add r9, r14",jo 0x87b7,"movsxd rsi, dword ptr [rsp + 0x248]","mov rcx, qword ptr [rsp + 0x210]","mov r8d, 0x3b9aca00","mov rbx, r9","add rcx, rsi","mov rax, rcx",cqo ,idiv r8,"lea rax, [rdx + 0x3b9aca00]",cqo ,idiv r8,"mov rax, rcx","sub rax, rdx","mov rdi, rdx",cqo ,idiv r8,cdqe ,"add rbx, rax",jo 0x87b7,"mov rax, qword ptr [rsp + 0x28]","test r12b, r12b","mov qword ptr [rax], rbx","mov qword ptr [rax + 8], rdi",je 0x7452,"mov rax, rbp","or rax, r13","or rax, r14","or rax, rsi",je 0x7452,"mov dword ptr [rsp + 0x18], esi","lea rsi, [rip + 0x8bd7]","xor edi, edi","mov edx, 5",call 0x2af0,"mov r10d, dword ptr [rsp + 0x18]","mov rcx, r14","mov rdi, rax","mov rdx, r13","xor eax, eax","mov rsi, rbp","mov r8d, r10d",call 0x4600,"lea rsi, [rip + 0x8bf9]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,"cmp dword ptr [rsp + 0x90], -1",je 0x87a9,"mov rsi, qword ptr [rsp + 0x28]","lea rdx, [rsp + 0x170]","mov rdi, r15",call 0xb840,"test rax, rax",je 0x87a9,"mov eax, dword ptr [rsp + 0x190]","cmp dword ptr [rsp + 0x90], eax",je 0x87a9,"lea rsi, [rip + 0x8bcd]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,"movzx r12d, byte ptr [rsp + 0x289]",jmp 0x7452,"test r12b, r12b",je 0x7110,"mov edx, 5","lea rsi, [rip + 0x8aec]",jmp 0x77f0,"mov rdi, qword ptr [rsp + 0x18]","lea rdx, [rsp + 0x300]","mov rsi, r13",call 0x4b50,"lea rsi, [rip + 0x81a5]","xor edi, edi","mov edx, 5","mov rbx, rax",call 0x2af0,"mov rdx, qword ptr [rsp + 0x20]","mov rdi, rax","mov rsi, rbx","xor eax, eax",call 0x4600,jmp 0x8641,"cmp byte ptr [rsp + 0x289], 0",je 0x7110,"lea rsi, [rip + 0x8043]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x7110,"mov edx, 1",jmp 0x7857,"mov dword ptr [rsp + 0x78], 0xffffffff","lea rbp, [rip + 0x7e71]",jmp 0x847f,"mov dword ptr [rsp + 0x78], 0xffffffff","lea rbp, [rip + 0x7ef9]",jmp 0x847f,"cmp dword ptr [rsp + 0x78], 0xc",je 0x80d3,"lea rsi, [rip + 0x8866]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rdi, rax","xor eax, eax",call 0x4600,jmp 0x80d3,"mov eax, dword ptr [rsp + 0x80]","mov edi, dword ptr [rsp + 0x84]","lea rsi, [rsp + 0x2d3]","mov r12d, dword ptr [rsp + 0x7c]","lea rbx, [rsp + 0x300]","lea ebp, [rax + 1]",call 0x2ea0,push r12,"lea r8, [rip + 0x8051]",push rbp,"mov r9, rax","mov ecx, 0x64","mov edx, 1","mov esi, 0x64","mov rdi, rbx","xor eax, eax",call 0x2a00,"lea rsi, [rip + 0x871b]","mov edx, 5","xor edi, edi",call 0x2af0,"mov rsi, rbx","mov rdi, rax","xor eax, eax",call 0x4600,pop rax,pop rdx,"cmp qword ptr [rsp + 0x260], 0",je 0x802e,"cmp qword ptr [rsp + 0x258], 0",je 0x802e,jmp 0x85fb,"lea rsi, [rip + 0x852e]","xor edi, edi",call 0x2af0,jmp 0x85d8,"cmp byte ptr [rsp + 0x289], 0",je 0x7110,"mov rdi, qword ptr [rsp + 0x18]","lea rdx, [rsp + 0x300]","mov rsi, r13",call 0x4b50,"mov edx, 5","mov rbx, rax","lea rsi, [rip + 0x87b8]",jmp 0x882d,"lea rsi, [rip + 0x7f64]","xor edi, edi",call 0x2af0,jmp 0x7c56,nop dword ptr [rax + rax],push r14,push r13,"mov r14, rdx",push r12,push rbp,"mov r12, rdi",push rbx,"lea rdi, [rip + 0x804f]","mov r13, rsi","sub rsp, 0x10",call 0x29f0,"mov rdi, rax","mov rbp, rax",call 0xb580,"mov rbx, rax","xor eax, eax","test rbx, rbx",je 0x89fd,"mov r9, rbp","mov r8, rbx","xor ecx, ecx","mov rdx, r14","mov rsi, r13","mov rdi, r12",call 0x6d00,"mov rdi, rbx","mov byte ptr [rsp + 0xf], al",call 0xb830,"movzx eax, byte ptr [rsp + 0xf]","add rsp, 0x10",pop rbx,pop rbp,pop r12,pop r13,pop r14,ret ,nop word ptr [rax + rax],push rbp,push rbx,"mov rbx, rdi","sub rsp, 0x18","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 8], rax","xor eax, eax","cmp rdx, 1",je 0x8a88,jb 0x8a48,"cmp rdx, 2",jne 0x8ac1,"and ecx, 4",jne 0x8aa8,"xor eax, eax",jmp 0x8a6a,nop dword ptr [rax],"mov rbp, rsp","mov rdi, rbp",call 0x2cb0,"mov rdi, rbp",call 0x2a30,"test rax, rax",je 0x8a6a,"mov eax, dword ptr [rax + 0x14]","mov dword ptr [rbx], eax","mov eax, 1","mov rdi, qword ptr [rsp + 8]","xor rdi, qword ptr fs:[0x28]",jne 0x8abc,"add rsp, 0x18",pop rbx,pop rbp,ret ,nop dword ptr [rax],"mov edx, dword ptr [rsi]","mov eax, 1","mov dword ptr [rdi], edx","cmp dword ptr [rsi], 0x44",jg 0x8a6a,"and ecx, 0x10",jne 0x8a40,"add edx, 0x64","mov dword ptr [rdi], edx",jmp 0x8a6a,nop word ptr [rax + rax],"imul eax, dword ptr [rsi], 0x64","add eax, dword ptr [rsi + 4]","sub eax, 0x76c","mov dword ptr [rdi], eax","mov eax, 1",jmp 0x8a6a,call 0x2b30,call 0x2a40,nop word ptr cs:[rax + rax],push r15,push r14,push r13,push r12,"mov r12, rdi",push rbp,push rbx,"mov ebp, edx","mov rdi, rsi","mov rbx, rsi","sub rsp, 0xd8","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0xc8], rax","xor eax, eax",call 0x2b10,"test bpl, 8","mov r13, rax",je 0x8d38,"mov esi, 0x2e","mov rdi, rbx",call 0x2b70,"test rax, rax","mov r14, rax",je 0x8b6b,"sub rax, rbx","sub r13, rax","cmp r13, 3",je 0x8b68,nop word ptr [rax + rax],"xor eax, eax","mov rsi, qword ptr [rsp + 0xc8]","xor rsi, qword ptr fs:[0x28]",jne 0x8dbd,"add rsp, 0xd8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax + rax],"mov r13, rax","lea rax, [r13 - 8]","cmp rax, 4",ja 0x8b38,"test r13b, 1",jne 0x8b38,"lea rcx, [r13 + rbx]","mov rdx, rbx",nop dword ptr [rax + rax],"movsx eax, byte ptr [rdx]","sub eax, 0x30","cmp eax, 9",ja 0x8b38,"add rdx, 1","cmp rdx, rcx",jne 0x8b88,"shr r13, 1","xor edx, edx","lea rsi, [rsp + 0x90]",jmp 0x8bb3,nop dword ptr [rax + rax],"mov rdx, rax","movsx eax, byte ptr [rbx + rdx*2]","lea ecx, [rax + rax*4 - 0xf0]","movsx eax, byte ptr [rbx + rdx*2 + 1]","lea eax, [rax + rcx*2 - 0x30]","mov dword ptr [rsi + rdx*4], eax","lea rax, [rdx + 1]","cmp r13, rax",jne 0x8bb0,"sub rdx, 3","test bpl, 1","mov r15, rsi",jne 0x8d70,"mov eax, dword ptr [r15]","sub eax, 1","test bpl, 2","mov dword ptr [rsp + 0x20], eax","mov eax, dword ptr [r15 + 4]","mov dword ptr [rsp + 0x1c], eax","mov eax, dword ptr [r15 + 8]","mov dword ptr [rsp + 0x18], eax","mov eax, dword ptr [r15 + 0xc]","mov dword ptr [rsp + 0x14], eax",jne 0x8d90,"test r14, r14",je 0x8db0,"movsx eax, byte ptr [r14 + 1]","sub eax, 0x30","cmp eax, 9",ja 0x8b38,"movsx edx, byte ptr [r14 + 2]","lea ecx, [rdx - 0x30]","cmp ecx, 9",ja 0x8b38,"lea eax, [rax + rax*4]","lea eax, [rdx + rax*2 - 0x30]","mov dword ptr [rsp + 0x10], eax","movdqa xmm0, xmmword ptr [rsp + 0x10]","lea r13, [rsp + 0x50]","mov rax, qword ptr [rsp + 0x40]","movaps xmmword ptr [rsp + 0x50], xmm0","mov rdi, r13","movdqa xmm0, xmmword ptr [rsp + 0x20]","mov qword ptr [rsp + 0x80], rax","movaps xmmword ptr [rsp + 0x60], xmm0","movdqa xmm0, xmmword ptr [rsp + 0x30]","movaps xmmword ptr [rsp + 0x70], xmm0","mov dword ptr [rsp + 0x70], 0xffffffff",call 0x2d30,"cmp rax, -1","mov qword ptr [rsp], rax",je 0x8d50,"mov edx, dword ptr [rsp + 0x24]","mov eax, dword ptr [rsp + 0x20]","xor edx, dword ptr [r13 + 0x14]","xor eax, dword ptr [r13 + 0x10]","mov ecx, dword ptr [rsp + 0x10]","or edx, eax","mov eax, dword ptr [rsp + 0x1c]","xor eax, dword ptr [r13 + 0xc]","or edx, eax","mov eax, dword ptr [rsp + 0x18]","xor eax, dword ptr [r13 + 8]","or edx, eax","mov eax, dword ptr [rsp + 0x14]","xor eax, dword ptr [r13 + 4]","or edx, eax","mov eax, dword ptr [r13]","xor eax, ecx","or edx, eax",je 0x8d20,"cmp ecx, 0x3c",jne 0x8b38,"lea r13, [rsp + 0xb0]","mov edx, 0x10","mov rsi, rbx","mov rdi, r13",call 0x2cd0,"mov edx, 0x3935","lea rdi, [rsp + 8]","mov byte ptr [rax], 0","mov word ptr [rax - 2], dx","mov rsi, r13","mov edx, ebp",call 0x8ad0,"test al, al",je 0x8b3a,nop dword ptr [rax],"mov rax, qword ptr [rsp]","mov qword ptr [r12], rax","mov eax, 1",jmp 0x8b3a,nop word ptr [rax + rax],"lea rax, [r13 - 8]","xor r14d, r14d","cmp rax, 4",jbe 0x8b75,jmp 0x8b38,nop ,"mov rdi, rsp",call 0x2a30,"test rax, rax","mov r13, rax",jne 0x8c97,jmp 0x8b38,nop dword ptr [rax],"lea rdi, [rsp + 0x24]","mov ecx, ebp",call 0x8a10,"test al, al",je 0x8b38,"lea r15, [r15 + r13*4 - 0x10]","xor edx, edx",jmp 0x8be4,"lea rsi, [r15 + 0x10]","lea rdi, [rsp + 0x24]","mov ecx, ebp",call 0x8a10,"test al, al",jne 0x8c10,jmp 0x8b38,nop dword ptr [rax],"mov dword ptr [rsp + 0x10], 0",jmp 0x8c46,call 0x2b30,nop word ptr cs:[rax + rax],nop dword ptr [rax],push rbx,"lea rdi, [rip + 0x8c5e]","mov ebx, 0x31069","sub rsp, 0x10","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 8], rax","xor eax, eax",call 0x29f0,"test rax, rax",je 0x8e00,"cmp byte ptr [rax], 0",jne 0x8e20,"mov rcx, qword ptr [rsp + 8]","xor rcx, qword ptr fs:[0x28]","mov eax, ebx",jne 0x8e59,"add rsp, 0x10",pop rbx,ret ,nop dword ptr [rax + rax],"mov edx, 0xa","mov rsi, rsp","mov rdi, rax",call 0x2c80,"mov rdx, qword ptr [rsp]","cmp byte ptr [rdx], 0",jne 0x8e00,"cmp rax, -0x80000000",jl 0x8e52,"cmp rax, 0x7fffffff","mov ebx, 0x7fffffff","cmovle rbx, rax",jmp 0x8e00,"mov ebx, 0x80000000",jmp 0x8e00,call 0x2b30,nop ,"test rdi, rdi",push rbx,je 0x8ed7,"mov esi, 0x2f","mov rbx, rdi",call 0x2ba0,"test rax, rax",je 0x8ec7,"lea rdx, [rax + 1]","mov rcx, rdx","sub rcx, rbx","cmp rcx, 6",jle 0x8ec7,"lea rsi, [rax - 6]","lea rdi, [rip + 0x8bed]","mov ecx, 7","repe cmpsb byte ptr [rsi], byte ptr [rdi]",jne 0x8ec7,"lea rdi, [rip + 0x8be5]","mov ecx, 3","mov rsi, rdx","mov rbx, rdx","repe cmpsb byte ptr [rsi], byte ptr [rdi]",seta sil,setb cl,"cmp sil, cl",jne 0x8ec7,"lea rbx, [rax + 4]","mov qword ptr [rip + 0x20c1d9], rbx","mov qword ptr [rip + 0x20c28a], rbx","mov qword ptr [rip + 0x20c1f3], rbx",pop rbx,ret ,"mov rcx, qword ptr [rip + 0x20c202]","lea rdi, [rip + 0x8b63]","mov edx, 0x37","mov esi, 1",call 0x2e20,call 0x2a40,nop dword ptr [rax],push rbp,push rbx,"mov rbp, rdi","mov ebx, esi","sub rsp, 8",call 0xbc20,"movzx edx, byte ptr [rax]","and edx, 0xffffffdf","cmp dl, 0x55",je 0x8f90,"cmp dl, 0x47",je 0x8f40,"lea rax, [rip + 0x7850]","lea rdx, [rip + 0x8b6d]","cmp ebx, 9","cmovne rax, rdx","add rsp, 8",pop rbx,pop rbp,ret ,nop dword ptr [rax],"movzx edx, byte ptr [rax + 1]","and edx, 0xffffffdf","cmp dl, 0x42",jne 0x8f20,"cmp byte ptr [rax + 2], 0x31",jne 0x8f20,"cmp byte ptr [rax + 3], 0x38",jne 0x8f20,"cmp byte ptr [rax + 4], 0x30",jne 0x8f20,"cmp byte ptr [rax + 5], 0x33",jne 0x8f20,"cmp byte ptr [rax + 6], 0x30",jne 0x8f20,"cmp byte ptr [rax + 7], 0",jne 0x8f20,"cmp byte ptr [rbp], 0x60","lea rax, [rip + 0x8b19]","lea rdx, [rip + 0x8b16]","cmovne rax, rdx","add rsp, 8",pop rbx,pop rbp,ret ,nop dword ptr [rax],"movzx edx, byte ptr [rax + 1]","and edx, 0xffffffdf","cmp dl, 0x54",jne 0x8f20,"movzx edx, byte ptr [rax + 2]","and edx, 0xffffffdf","cmp dl, 0x46",jne 0x8f20,"cmp byte ptr [rax + 3], 0x2d",jne 0x8f20,"cmp byte ptr [rax + 4], 0x38",jne 0x8f20,"cmp byte ptr [rax + 5], 0",jne 0x8f20,"cmp byte ptr [rbp], 0x60","lea rax, [rip + 0x8ab7]","lea rdx, [rip + 0x8ab4]","cmovne rax, rdx","add rsp, 8",pop rbx,pop rbp,ret ,nop word ptr [rax + rax],push r15,push r14,"mov r15d, r8d",push r13,push r12,"mov r14, rdi",push rbp,push rbx,"mov ebx, r9d","mov r13, rsi","mov rbp, rcx","and ebx, 2","sub rsp, 0xb8","mov rax, qword ptr [rsp + 0xf0]","mov qword ptr [rsp + 0x10], rdx","mov dword ptr [rsp + 8], r8d","mov dword ptr [rsp + 0x78], r9d","mov qword ptr [rsp + 0x20], rax","mov rax, qword ptr [rsp + 0xf8]","mov qword ptr [rsp + 0x68], rax","mov rax, qword ptr [rsp + 0x100]","mov qword ptr [rsp + 0x60], rax","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0xa8], rax","xor eax, eax",call 0x2b00,"cmp r15d, 0xa","mov qword ptr [rsp + 0x58], rax",ja 0xa21f,"lea rcx, [rip + 0x8a89]","mov edx, r15d","movsxd rax, dword ptr [rcx + rdx*4]","add rax, rcx",jmp rax,"mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 1","mov byte ptr [rsp + 0xd], 0","lea rax, [rip + 0x89f1]","mov qword ptr [rsp + 0x18], 1","xor r15d, r15d","mov dword ptr [rsp + 8], 2","mov qword ptr [rsp + 0x48], rax","xor r11d, r11d","mov rax, rbp","mov r8d, r12d","mov rbp, r11","mov r11, rax",nop word ptr [rax + rax],"cmp r11, rbp",setne r12b,"cmp r11, -1",jne 0x90f2,"mov rax, qword ptr [rsp + 0x10]","cmp byte ptr [rax + rbp], 0",setne r12b,"test r12b, r12b",je 0x9750,"cmp dword ptr [rsp + 8], 2","mov rdi, qword ptr [rsp + 0x10]","lea r9, [rdi + rbp]",setne al,"and al, byte ptr [rsp + 0xd]","mov r10d, eax",je 0x91c0,"mov rax, qword ptr [rsp + 0x18]","test rax, rax",je 0x9550,"cmp r11, -1","lea rbx, [rbp + rax]",jne 0x9160,"cmp rax, 1",jbe 0x9160,"mov byte ptr [rsp + 0x38], r8b","mov byte ptr [rsp + 0x30], r10b","mov qword ptr [rsp + 0x28], r9",call 0x2b10,"movzx r8d, byte ptr [rsp + 0x38]","movzx r10d, byte ptr [rsp + 0x30]","mov r11, rax","mov r9, qword ptr [rsp + 0x28]","cmp rbx, r11","mov byte ptr [rsp + 0x28], r10b",ja 0x9720,"mov rdx, qword ptr [rsp + 0x18]","mov rsi, qword ptr [rsp + 0x48]","mov rdi, r9","mov qword ptr [rsp + 0x40], r11","mov byte ptr [rsp + 0x38], r8b","mov qword ptr [rsp + 0x30], r9",call 0x2c40,"test eax, eax","mov r9, qword ptr [rsp + 0x30]","movzx r8d, byte ptr [rsp + 0x38]","mov r11, qword ptr [rsp + 0x40]",jne 0x9720,"cmp byte ptr [rsp + 0xf], 0","movzx r10d, byte ptr [rsp + 0x28]",jne 0xa135,nop dword ptr [rax + rax],"movzx ebx, byte ptr [r9]","cmp bl, 0x7e",ja 0x94e8,"lea rcx, [rip + 0x8958]","movzx edx, bl","movsxd rax, dword ptr [rcx + rdx*4]","add rax, rcx",jmp rax,"xor r10d, r10d","cmp r11, 1",setne al,"cmp r11, -1",jne 0x91fc,"mov rax, qword ptr [rsp + 0x10]","cmp byte ptr [rax + 1], 0",setne al,"cmp dword ptr [rsp + 8], 2",sete dl,"test al, al",je 0x9458,"xor r12d, r12d","xor eax, eax",nop dword ptr [rax],"cmp byte ptr [rsp + 0xd], 1",jne 0x9332,"test dl, dl",jne 0x9332,"mov rsi, qword ptr [rsp + 0x20]","test rsi, rsi",je 0x9249,"mov edx, ebx","shr dl, 5","movzx edx, dl","mov edx, dword ptr [rsi + rdx*4]","bt edx, ebx",jb 0x9393,"test r10b, r10b",jne 0x9393,"xor eax, 1","add rbp, 1","and eax, r8d","test al, al",je 0x9280,"cmp r13, r15",jbe 0x926a,"mov byte ptr [r14 + r15], 0x27","lea rax, [r15 + 1]","cmp r13, rax",jbe 0x9279,"mov byte ptr [r14 + r15 + 1], 0x27","add r15, 2","xor r8d, r8d","cmp r15, r13",jae 0x9289,"mov byte ptr [r14 + r15], bl","movzx edi, byte ptr [rsp + 0xe]","add r15, 1","mov eax, 0","test r12b, r12b","cmove edi, eax","mov byte ptr [rsp + 0xe], dil",jmp 0x90d8,nop word ptr [rax + rax],"xor r10d, r10d","mov eax, dword ptr [rsp + 8]","cmp eax, 2",je 0x9878,"cmp eax, 5",je 0x9838,"cmp eax, 2","mov ebx, 0x3f",sete dl,"xor r12d, r12d","xor eax, eax",jmp 0x9218,nop ,"xor r10d, r10d","cmp dword ptr [rsp + 8], 2",je 0x97f0,"mov byte ptr [rsp + 0x7c], r12b","xor edx, edx","xor eax, eax","mov ebx, 0x27",jmp 0x9218,nop dword ptr [rax],"mov edx, 9","mov ebx, 0x74","cmp dword ptr [rsp + 8], 2",sete al,"and al, byte ptr [rsp + 0xf]",jne 0x946e,"cmp byte ptr [rsp + 0xd], 0",jne 0x9390,"mov ebx, edx","xor r12d, r12d","xor eax, eax","cmp byte ptr [rsp + 0xf], 0",jne 0x922b,jmp 0x9249,nop word ptr [rax + rax],"mov edx, 8","mov ebx, 0x62",jmp 0x9324,nop dword ptr [rax],"cmp dword ptr [rsp + 8], 2",je 0x9730,"cmp byte ptr [rsp + 0xd], 0",je 0x9580,"cmp byte ptr [rsp + 0xf], 0",je 0x9580,"cmp qword ptr [rsp + 0x18], 0",jne 0x973b,"mov ebx, 0x5c",nop word ptr [rax + rax],"xor r12d, r12d","cmp dword ptr [rsp + 8], 2",sete dl,"cmp byte ptr [rsp + 0xf], 0","mov eax, edx",jne 0x9bf8,"mov eax, r8d","xor eax, 1","and al, dl",je 0x93e1,"cmp r13, r15",jbe 0x93bc,"mov byte ptr [r14 + r15], 0x27","lea rdx, [r15 + 1]","cmp r13, rdx",jbe 0x93cb,"mov byte ptr [r14 + r15 + 1], 0x24","lea rdx, [r15 + 2]","cmp r13, rdx",jbe 0x93da,"mov byte ptr [r14 + r15 + 2], 0x27","add r15, 3","mov r8d, eax","cmp r13, r15",jbe 0x93eb,"mov byte ptr [r14 + r15], 0x5c","add r15, 1","add rbp, 1",jmp 0x9280,nop dword ptr [rax + rax],"cmp byte ptr [rsp + 0xd], 0",jne 0x95d3,"xor edx, edx","test byte ptr [rsp + 0x78], 1",je 0x932b,"add rbp, 1",jmp 0x90d8,nop dword ptr [rax],"cmp dword ptr [rsp + 8], 2",sete dl,"xor eax, eax",jmp 0x9218,nop word ptr [rax + rax],"mov edx, 7","mov ebx, 0x61",jmp 0x9324,nop ,"cmp dword ptr [rsp + 8], 2",sete dl,"test rbp, rbp",jne 0x920c,"movzx eax, byte ptr [rsp + 0xf]","and al, dl",je 0x9218,"mov rbp, r11","mov dword ptr [rsp + 8], 2",jmp 0x9b79,nop ,"cmp dword ptr [rsp + 8], 2",sete dl,"xor r12d, r12d",jmp 0x9461,nop dword ptr [rax],"cmp dword ptr [rsp + 8], 2","mov ebx, 0x20",sete dl,jmp 0x9461,nop ,"mov edx, 0xd","mov ebx, 0x72",jmp 0x9312,nop ,"mov edx, 0xc","mov ebx, 0x66",jmp 0x9324,nop ,"mov edx, 0xb","mov ebx, 0x76",jmp 0x9324,nop ,"mov edx, 0xa","mov ebx, 0x6e",jmp 0x9312,nop ,"xor r10d, r10d",nop dword ptr [rax + rax],"cmp qword ptr [rsp + 0x58], 1",jne 0x9898,"mov qword ptr [rsp + 0x38], r11","mov byte ptr [rsp + 0x30], r8b","mov byte ptr [rsp + 0x28], r10b",call 0x2e70,"mov rcx, qword ptr [rax]","movzx edx, bl","movzx r10d, byte ptr [rsp + 0x28]","movzx r8d, byte ptr [rsp + 0x30]","mov r11, qword ptr [rsp + 0x38]","mov edi, 1","movzx eax, word ptr [rcx + rdx*2]","and ax, 0x4000",setne r12b,sete al,"and al, byte ptr [rsp + 0xd]","test al, al",jne 0x9ed1,"cmp dword ptr [rsp + 8], 2",sete dl,jmp 0x9218,nop dword ptr [rax],"movzx ebx, byte ptr [r9]","cmp bl, 0x7e",ja 0x94e0,"lea rcx, [rip + 0x87c8]","movzx edx, bl","movsxd rax, dword ptr [rcx + rdx*4]","add rax, rcx",jmp rax,nop dword ptr [rax],"xor r10d, r10d","cmp byte ptr [rsp + 0xd], 0",jne 0x936e,nop ,"mov edx, 0x5c","mov ebx, 0x5c",jmp 0x9324,nop ,"mov edx, 0xc","xor r10d, r10d","mov ebx, 0x66",jmp 0x9324,nop word ptr [rax + rax],"mov edx, 0xa","xor r10d, r10d","mov ebx, 0x6e",jmp 0x9312,nop word ptr [rax + rax],"mov ebx, 0x61",jmp 0x9390,nop word ptr [rax + rax],"xor r10d, r10d","cmp dword ptr [rsp + 8], 2",sete dl,"cmp byte ptr [rsp + 0xf], 0",jne 0xa17a,"mov eax, r8d","mov rcx, r15","xor eax, 1","and al, dl",je 0x9620,"cmp r13, r15",jbe 0x95fd,"mov byte ptr [r14 + r15], 0x27","lea rcx, [r15 + 1]","cmp r13, rcx",jbe 0x960c,"mov byte ptr [r14 + r15 + 1], 0x24","lea rcx, [r15 + 2]","cmp r13, rcx",ja 0x9c49,"lea rcx, [r15 + 3]","mov r8d, eax","cmp r13, rcx",jbe 0x962a,"mov byte ptr [r14 + rcx], 0x5c","cmp dword ptr [rsp + 8], 2","lea r15, [rcx + 1]",je 0x9c39,"lea rax, [rbp + 1]","cmp rax, r11",jae 0x965b,"mov rax, qword ptr [rsp + 0x10]","movzx eax, byte ptr [rax + rbp + 1]","mov byte ptr [rsp + 0x28], al","sub eax, 0x30","cmp al, 9",jbe 0x9e89,"mov eax, r12d","mov ebx, 0x30","xor r12d, r12d",jmp 0x9218,nop dword ptr [rax + rax],"cmp dword ptr [rsp + 8], 2","mov r12d, r10d",sete dl,"xor r10d, r10d","xor eax, eax",jmp 0x9218,nop dword ptr [rax],"cmp dword ptr [rsp + 8], 2",sete dl,"xor r10d, r10d",jmp 0x9458,nop dword ptr [rax + rax],"cmp dword ptr [rsp + 8], 2",sete dl,"xor r10d, r10d","xor r12d, r12d",jmp 0x9461,nop dword ptr [rax + rax],"cmp dword ptr [rsp + 8], 2","mov r12d, r10d","mov ebx, 0x20",sete dl,"xor r10d, r10d",jmp 0x9461,"mov edx, 0xd","xor r10d, r10d","mov ebx, 0x72",jmp 0x9312,nop word ptr [rax + rax],"mov ebx, 0x76",jmp 0x9390,nop word ptr [rax + rax],"mov edx, 9","xor r10d, r10d","mov ebx, 0x74",jmp 0x9312,nop word ptr [rax + rax],"mov ebx, 0x62",jmp 0x9390,nop word ptr [rax + rax],"xor r10d, r10d",jmp 0x91c0,nop dword ptr [rax + rax],"cmp byte ptr [rsp + 0xf], 0",jne 0xa0a0,"add rbp, 1","mov eax, r8d","xor r12d, r12d","mov ebx, 0x5c",jmp 0x925c,nop ,"cmp dword ptr [rsp + 8], 2","movzx ebx, byte ptr [rsp + 0xf]","mov r12d, r8d","mov rbp, r11",sete dl,"mov eax, ebx","test r15, r15",sete cl,"and eax, edx","and al, cl",jne 0xa1d6,"mov eax, ebx","xor eax, 1","and dl, al",je 0xa0ec,"cmp byte ptr [rsp + 0x7c], 0",je 0xa0ea,"cmp byte ptr [rsp + 0xe], 0",jne 0xa18d,"test r13, r13",sete al,"cmp qword ptr [rsp + 0x50], 0",setne dl,"and al, dl",je 0xa1cc,"mov r13, qword ptr [rsp + 0x50]","lea rbx, [rip + 0x82e0]","mov byte ptr [r14], 0x27","mov dword ptr [rsp + 8], 2","mov r15d, 1","mov qword ptr [rsp + 0x18], 1","mov byte ptr [rsp + 0xf], 0","mov qword ptr [rsp + 0x48], rbx","mov byte ptr [rsp + 0x7c], al",jmp 0x90c3,nop dword ptr [rax],"cmp byte ptr [rsp + 0xf], 0",jne 0xa0a0,"test r13, r13",je 0x9c00,"xor edx, edx","cmp qword ptr [rsp + 0x50], 0",jne 0x9c00,"mov qword ptr [rsp + 0x50], r13","add r15, 3","xor eax, eax","mov byte ptr [rsp + 0x7c], r12b","xor r8d, r8d","mov r13, rdx","mov ebx, 0x27",jmp 0x9249,nop word ptr [rax + rax],"test byte ptr [rsp + 0x78], 4",je 0x9860,"lea rcx, [rbp + 2]","cmp rcx, r11",jae 0x9860,"mov rax, qword ptr [rsp + 0x10]","cmp byte ptr [rax + rbp + 1], 0x3f",je 0x9fe2,nop dword ptr [rax + rax],"xor edx, edx","xor r12d, r12d","xor eax, eax","mov ebx, 0x3f",jmp 0x9218,nop dword ptr [rax],"cmp byte ptr [rsp + 0xf], 0",jne 0xa0a0,"xor r12d, r12d","xor eax, eax","mov ebx, 0x3f",jmp 0x9249,nop word ptr [rax + rax],"lea rax, [rsp + 0xa0]","cmp r11, -1","mov qword ptr [rsp + 0xa0], 0","mov qword ptr [rsp + 0x28], rax",jne 0x98e4,"mov rdi, qword ptr [rsp + 0x10]","mov byte ptr [rsp + 0x40], r8b","mov byte ptr [rsp + 0x38], r10b","mov qword ptr [rsp + 0x30], r9",call 0x2b10,"movzx r8d, byte ptr [rsp + 0x40]","movzx r10d, byte ptr [rsp + 0x38]","mov r11, rax","mov r9, qword ptr [rsp + 0x30]","lea rax, [rsp + 0x9c]","xor ecx, ecx","mov byte ptr [rsp + 0x7e], bl","mov byte ptr [rsp + 0x7d], r8b","mov rbx, rcx","mov qword ptr [rsp + 0x88], r9","mov qword ptr [rsp + 0x38], rax","mov byte ptr [rsp + 0x7f], r10b","mov qword ptr [rsp + 0x80], r15","mov qword ptr [rsp + 0x40], r14","mov qword ptr [rsp + 0x70], r13","mov qword ptr [rsp + 0x30], r11","mov rax, qword ptr [rsp + 0x10]","lea r14, [rbp + rbx]","mov rdx, qword ptr [rsp + 0x30]","mov rcx, qword ptr [rsp + 0x28]","mov rdi, qword ptr [rsp + 0x38]","lea r13, [rax + r14]","sub rdx, r14","mov rsi, r13",call 0xb430,"test rax, rax","mov r15, rax",je 0x99a1,"cmp rax, -1",je 0x9f75,"cmp rax, -2",je 0x9f01,"cmp dword ptr [rsp + 8], 2",sete al,"and al, byte ptr [rsp + 0xf]",jne 0x9b10,"mov edi, dword ptr [rsp + 0x9c]",call 0x2e50,"mov rdi, qword ptr [rsp + 0x28]","test eax, eax","mov eax, 0","cmove r12d, eax","add rbx, r15",call 0x2e40,"test eax, eax",je 0x9923,"mov edx, r12d","mov rdi, rbx","movzx r8d, byte ptr [rsp + 0x7d]","xor edx, 1","movzx ebx, byte ptr [rsp + 0x7e]","movzx r10d, byte ptr [rsp + 0x7f]","and dl, byte ptr [rsp + 0xd]","mov r15, qword ptr [rsp + 0x80]","mov r14, qword ptr [rsp + 0x40]","mov r13, qword ptr [rsp + 0x70]","mov r11, qword ptr [rsp + 0x30]","cmp rdi, 1",jbe 0x9fdb,"mov rcx, rdi","xor esi, esi","movzx r9d, byte ptr [rsp + 0xf]","add rcx, rbp","mov rdi, qword ptr [rsp + 0x10]",jmp 0x9aae,nop dword ptr [rax + rax],"cmp dword ptr [rsp + 8], 2",sete al,"test r9b, r9b",jne 0x9ec0,"mov esi, r8d","xor esi, 1","and al, sil",je 0x9a4b,"cmp r13, r15",jbe 0x9a26,"mov byte ptr [r14 + r15], 0x27","lea rsi, [r15 + 1]","cmp r13, rsi",jbe 0x9a35,"mov byte ptr [r14 + r15 + 1], 0x24","lea rsi, [r15 + 2]","cmp r13, rsi",jbe 0x9a44,"mov byte ptr [r14 + r15 + 2], 0x27","add r15, 3","mov r8d, eax","cmp r13, r15",jbe 0x9a55,"mov byte ptr [r14 + r15], 0x5c","lea rax, [r15 + 1]","cmp r13, rax",jbe 0x9a6b,"mov eax, ebx","shr al, 6","add eax, 0x30","mov byte ptr [r14 + r15 + 1], al","lea rax, [r15 + 2]","cmp r13, rax",jbe 0x9a84,"mov eax, ebx","shr al, 3","and eax, 7","add eax, 0x30","mov byte ptr [r14 + r15 + 2], al","and ebx, 7","add rbp, 1","add r15, 3","add ebx, 0x30","cmp rbp, rcx",jae 0x9280,"mov esi, edx","cmp r13, r15",jbe 0x9aa6,"mov byte ptr [r14 + r15], bl","movzx ebx, byte ptr [rdi + rbp]","add r15, 1","test dl, dl",jne 0x9a00,"mov eax, esi","xor eax, 1","and eax, r8d","test r10b, r10b",je 0x9ad1,"cmp r13, r15",jbe 0x9acd,"mov byte ptr [r14 + r15], 0x5c","add r15, 1","add rbp, 1","cmp rbp, rcx",jae 0x925c,"test al, al",je 0x9ede,"cmp r13, r15",jbe 0x9af0,"mov byte ptr [r14 + r15], 0x27","lea rax, [r15 + 1]","cmp r13, rax",jbe 0x9aff,"mov byte ptr [r14 + r15 + 1], 0x27","add r15, 2","xor r10d, r10d","xor r8d, r8d",jmp 0x9a9d,nop dword ptr [rax + rax],"cmp r15, 1",je 0x9979,"mov rdi, qword ptr [rsp + 0x10]","lea rcx, [rdi + r15]","lea rdx, [rdi + r14 + 1]","lea r8, [rcx + r14]",jmp 0x9b3d,nop ,"add rdx, 1","cmp r8, rdx",je 0x9979,"movzx ecx, byte ptr [rdx]","sub ecx, 0x5b","cmp cl, 0x21",ja 0x9b30,"mov esi, 1","shl rsi, cl","mov rcx, rsi","movabs rsi, 0x20000002b","test rcx, rsi",je 0x9b30,"mov r14, qword ptr [rsp + 0x40]","mov r13, qword ptr [rsp + 0x70]","mov rbp, qword ptr [rsp + 0x30]","mov dword ptr [rsp + 8], 2","cmp byte ptr [rsp + 0xd], 0",je 0x9b90,"test al, al","mov eax, 4","cmove eax, dword ptr [rsp + 8]","mov dword ptr [rsp + 8], eax","sub rsp, 8","mov rcx, rbp","mov rsi, r13",push qword ptr [rsp + 0x68],push qword ptr [rsp + 0x78],"mov rdi, r14",push 0,"mov r9d, dword ptr [rsp + 0x98]","mov r8d, dword ptr [rsp + 0x28]","mov rdx, qword ptr [rsp + 0x30]","and r9d, 0xfffffffd",call 0x8ff0,"add rsp, 0x20","mov r15, rax","mov rbx, qword ptr [rsp + 0xa8]","xor rbx, qword ptr fs:[0x28]","mov rax, r15",jne 0xa1e3,"add rsp, 0xb8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax],"mov rbp, r11",jmp 0x9b79,"cmp r13, r15",jbe 0x9c0a,"mov byte ptr [r14 + r15], 0x27","lea rax, [r15 + 1]","cmp r13, rax",jbe 0x9c19,"mov byte ptr [r14 + r15 + 1], 0x5c","lea rax, [r15 + 2]","cmp r13, rax",jbe 0xa212,"mov rdx, r13","mov byte ptr [r14 + r15 + 2], 0x27","mov r13, qword ptr [rsp + 0x50]",jmp 0x9812,"mov eax, r12d","mov ebx, 0x30","xor r12d, r12d",jmp 0x9249,"mov byte ptr [r14 + r15 + 2], 0x27",jmp 0x9619,"test ebx, ebx",jne 0x9083,"mov byte ptr [rsp + 0xd], 1","test r13, r13",jne 0xa1fa,"lea rax, [rip + 0x7e2a]","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov byte ptr [rsp + 0xf], 0","mov qword ptr [rsp + 0x18], 1","mov qword ptr [rsp + 0x48], rax","mov r15d, 1","mov dword ptr [rsp + 8], 2",jmp 0x90c3,nop dword ptr [rax],"test ebx, ebx",jne 0xa0ad,"test r13, r13",je 0x9ee6,"mov byte ptr [r14], 0x22","mov byte ptr [rsp + 0xe], 1","xor r12d, r12d","mov byte ptr [rsp + 0x7c], 0","mov qword ptr [rsp + 0x50], 0","lea rax, [rip + 0x6a95]","mov byte ptr [rsp + 0xf], 0","mov byte ptr [rsp + 0xd], 1","mov qword ptr [rsp + 0x18], 1","mov r15d, 1","mov qword ptr [rsp + 0x48], rax",jmp 0x90c3,"lea rax, [rip + 0x6a6b]","mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 1","mov byte ptr [rsp + 0xd], 1","mov qword ptr [rsp + 0x18], 1","xor r15d, r15d","mov qword ptr [rsp + 0x48], rax","mov dword ptr [rsp + 8], 5",jmp 0x90c3,"mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 0","xor r15d, r15d","mov byte ptr [rsp + 0xd], 1","mov qword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x48], 0",jmp 0x90c3,"cmp dword ptr [rsp + 8], 0xa",je 0x9de1,"lea rsi, [rip + 0x7d0b]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rcx, rax","mov qword ptr [rsp + 0x68], rax","lea rax, [rip + 0x7cf0]","cmp rcx, rax",je 0xa14e,"lea rsi, [rip + 0x7cde]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rcx, rax","mov qword ptr [rsp + 0x60], rax","lea rax, [rip + 0x7cc3]","cmp rcx, rax",je 0xa164,"xor r15d, r15d","test ebx, ebx",je 0x9fad,"test ebx, ebx","mov rbx, qword ptr [rsp + 0x60]",setne byte ptr [rsp + 0xf],"xor r12d, r12d","mov rdi, rbx",call 0x2b10,"mov qword ptr [rsp + 0x48], rbx","mov qword ptr [rsp + 0x18], rax","mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xd], 1",jmp 0x90c3,"mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 0","xor r15d, r15d","mov byte ptr [rsp + 0xd], 0","mov qword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x48], 0",jmp 0x90c3,"mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 1","mov byte ptr [rsp + 0xd], 1",jmp 0x90a3,"cmp r13, r15",jbe 0x9e93,"mov byte ptr [r14 + r15], 0x30","lea rax, [rcx + 2]","cmp r13, rax",jbe 0x9ea2,"mov byte ptr [r14 + rcx + 2], 0x30","mov eax, r12d","lea r15, [rcx + 3]","xor r12d, r12d","mov ebx, 0x30",jmp 0x9218,nop word ptr cs:[rax + rax],"movzx ebx, byte ptr [rsp + 0xf]","mov rbp, r11","mov byte ptr [rsp + 0xd], bl",jmp 0x9b79,"movzx edx, byte ptr [rsp + 0xd]","xor r12d, r12d",jmp 0x99e0,"xor r10d, r10d",jmp 0x9a9d,"mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xe], 1","xor r12d, r12d","mov byte ptr [rsp + 0x7c], 0",jmp 0x9cdb,"mov r11, qword ptr [rsp + 0x30]","mov rsi, r14","mov rcx, r13","mov rax, rbx","mov rdi, rbx","movzx r8d, byte ptr [rsp + 0x7d]","movzx ebx, byte ptr [rsp + 0x7e]","mov r9, qword ptr [rsp + 0x88]","cmp rsi, r11","movzx r10d, byte ptr [rsp + 0x7f]","mov r15, qword ptr [rsp + 0x80]","mov r14, qword ptr [rsp + 0x40]","mov r13, qword ptr [rsp + 0x70]",jae 0x9f68,"cmp byte ptr [rcx], 0",jne 0x9f57,jmp 0x9f68,nop dword ptr [rax],"cmp byte ptr [r9 + rax], 0",je 0x9f65,"add rax, 1","lea rdx, [rbp + rax]","cmp r11, rdx",ja 0x9f50,"mov rdi, rax","movzx edx, byte ptr [rsp + 0xd]","xor r12d, r12d",jmp 0x99d6,"mov rdi, rbx","movzx r8d, byte ptr [rsp + 0x7d]","movzx ebx, byte ptr [rsp + 0x7e]","movzx r10d, byte ptr [rsp + 0x7f]","mov r15, qword ptr [rsp + 0x80]","xor r12d, r12d","mov r14, qword ptr [rsp + 0x40]","mov r13, qword ptr [rsp + 0x70]","mov r11, qword ptr [rsp + 0x30]","movzx edx, byte ptr [rsp + 0xd]",jmp 0x99d6,"mov rdx, qword ptr [rsp + 0x68]","movzx eax, byte ptr [rdx]","test al, al",je 0x9dec,nop dword ptr [rax],"cmp r13, r15",jbe 0x9fc9,"mov byte ptr [r14 + r15], al","add r15, 1","movzx eax, byte ptr [rdx + r15]","test al, al",jne 0x9fc0,jmp 0x9dec,"mov eax, edx",jmp 0x9537,"movzx ebx, byte ptr [rax + rcx]","cmp bl, 0x3e",ja 0x9860,"movabs rax, 0x7000a38200000000","bt rax, rbx",jae 0x9860,"cmp byte ptr [rsp + 0xf], 0",jne 0xa1f2,"cmp r13, r15",jbe 0xa018,"mov byte ptr [r14 + r15], 0x3f","lea rax, [r15 + 1]","cmp r13, rax",jbe 0xa027,"mov byte ptr [r14 + r15 + 1], 0x22","lea rax, [r15 + 2]","cmp r13, rax",jbe 0xa036,"mov byte ptr [r14 + r15 + 2], 0x22","lea rax, [r15 + 3]","cmp r13, rax",jbe 0xa045,"mov byte ptr [r14 + r15 + 3], 0x3f","add r15, 4","xor edx, edx","xor r12d, r12d","xor eax, eax","mov rbp, rcx",jmp 0x9218,"test ebx, ebx",je 0xa1e8,"lea rax, [rip + 0x7a34]","mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 1","mov byte ptr [rsp + 0xd], 0","mov qword ptr [rsp + 0x18], 1","xor r15d, r15d","mov qword ptr [rsp + 0x48], rax",jmp 0x90c3,nop dword ptr [rax],"mov rbp, r11","movzx eax, byte ptr [rsp + 0xf]",jmp 0x9b79,"lea rax, [rip + 0x66c3]","mov byte ptr [rsp + 0xe], 1","mov byte ptr [rsp + 0x7c], 0","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0","mov byte ptr [rsp + 0xf], 1","mov byte ptr [rsp + 0xd], 1","mov qword ptr [rsp + 0x18], 1","xor r15d, r15d","mov qword ptr [rsp + 0x48], rax",jmp 0x90c3,"mov eax, edx","mov rbx, qword ptr [rsp + 0x48]","test rbx, rbx",je 0xa122,"test al, al",je 0xa122,"movzx ecx, byte ptr [rbx]","mov rax, rbx","test cl, cl",je 0xa122,"mov rdx, r15","sub rax, r15","cmp r13, rdx",jbe 0xa113,"mov byte ptr [r14 + rdx], cl","add rdx, 1","movzx ecx, byte ptr [rax + rdx]","test cl, cl",jne 0xa10a,"mov r15, rdx","cmp r13, r15",jbe 0x9bc9,"mov byte ptr [r14 + r15], 0",jmp 0x9bc9,"cmp dword ptr [rsp + 8], 2","movzx ebx, byte ptr [rsp + 0xf]","mov rbp, r11",sete al,"mov byte ptr [rsp + 0xd], bl",jmp 0x9b79,"mov esi, dword ptr [rsp + 8]","mov rdi, rcx",call 0x8f00,"mov qword ptr [rsp + 0x68], rax",jmp 0x9db6,"mov esi, dword ptr [rsp + 8]","mov rdi, rcx",call 0x8f00,"mov qword ptr [rsp + 0x60], rax",jmp 0x9de1,"movzx ebx, byte ptr [rsp + 0xf]","mov rbp, r11","mov eax, edx","mov byte ptr [rsp + 0xd], bl",jmp 0x9b79,"sub rsp, 8","mov r8d, 5","mov rcx, r11",push qword ptr [rsp + 0x68],push qword ptr [rsp + 0x78],"mov rdi, r14",push qword ptr [rsp + 0x38],"mov r9d, dword ptr [rsp + 0x98]","mov rdx, qword ptr [rsp + 0x30]","mov rsi, qword ptr [rsp + 0x70]",call 0x8ff0,"add rsp, 0x20","mov r15, rax",jmp 0x9bc9,"movzx eax, byte ptr [rsp + 0x7c]",jmp 0xa0ec,"mov dword ptr [rsp + 8], 2",jmp 0x9b79,call 0x2b30,"mov byte ptr [rsp + 0xd], 0",jmp 0x9c61,"mov rbp, r11",jmp 0x9b90,"mov byte ptr [rsp + 0xe], 1","xor eax, eax","xor r12d, r12d","mov qword ptr [rsp + 0x50], 0",jmp 0x97b4,"mov rdx, r13","mov r13, qword ptr [rsp + 0x50]",jmp 0x9812,call 0x2a40,nop ,nop word ptr cs:[rax + rax],push r15,push r14,"movsxd r15, edi",push r13,push r12,"mov r14, rdx",push rbp,push rbx,"mov rbp, rcx","sub rsp, 0x28","mov qword ptr [rsp + 8], rsi",call 0x2a50,"mov r13, rax","mov eax, dword ptr [rax]","test r15d, r15d","mov rbx, qword ptr [rip + 0x20ae20]","mov dword ptr [rsp + 0x18], eax",js 0xa3d1,"cmp dword ptr [rip + 0x20ae07], r15d",jg 0xa2d5,"cmp r15d, 0x7ffffffe",ja 0xa3d6,"lea r12d, [r15 + 1]","lea rax, [rip + 0x20ae05]","movsxd rsi, r12d","shl rsi, 4","cmp rbx, rax",je 0xa3b0,"mov rdi, rbx",call 0xb200,"mov rbx, rax","mov qword ptr [rip + 0x20add3], rax","movsxd rdi, dword ptr [rip + 0x20adc4]","mov edx, r12d","xor esi, esi","sub edx, edi","shl rdi, 4","movsxd rdx, edx","add rdi, rbx","shl rdx, 4",call 0x2c00,"mov dword ptr [rip + 0x20ada3], r12d","mov eax, dword ptr [rbp + 4]","shl r15, 4","sub rsp, 8","add rbx, r15","lea r15, [rbp + 8]","mov r8d, dword ptr [rbp]","mov r11, qword ptr [rbx]","mov r12, qword ptr [rbx + 8]","mov rcx, r14","or eax, 1","mov dword ptr [rsp + 0x24], eax",push qword ptr [rbp + 0x30],"mov r9d, eax",push qword ptr [rbp + 0x28],push r15,"mov rsi, r11","mov rdx, qword ptr [rsp + 0x28]","mov rdi, r12","mov qword ptr [rsp + 0x30], r11",call 0x8ff0,"add rsp, 0x20","mov r11, qword ptr [rsp + 0x10]","cmp r11, rax",ja 0xa391,"lea rsi, [rax + 1]","lea rax, [rip + 0x20ae2b]","cmp r12, rax","mov qword ptr [rbx], rsi",je 0xa34f,"mov rdi, r12","mov qword ptr [rsp + 0x10], rsi",call 0x2a10,"mov rsi, qword ptr [rsp + 0x10]","mov rdi, rsi","mov qword ptr [rsp + 0x10], rsi",call 0xb1a0,"sub rsp, 8","mov qword ptr [rbx + 8], rax","mov r8d, dword ptr [rbp]",push qword ptr [rbp + 0x30],push qword ptr [rbp + 0x28],"mov rcx, r14",push r15,"mov r9d, dword ptr [rsp + 0x3c]","mov rdi, rax","mov rdx, qword ptr [rsp + 0x28]","mov rsi, qword ptr [rsp + 0x30]","mov r12, rax",call 0x8ff0,"add rsp, 0x20","mov eax, dword ptr [rsp + 0x18]","mov dword ptr [r13], eax","add rsp, 0x28","mov rax, r12",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax + rax],"xor edi, edi",call 0xb200,"movdqa xmm0, xmmword ptr [rip + 0x20acd1]","mov rbx, rax","mov qword ptr [rip + 0x20acb7], rax","movups xmmword ptr [rax], xmm0",jmp 0xa2ad,call 0x2a40,call 0xb3f0,nop dword ptr [rax + rax],push r12,push rbp,push rbx,"mov rbx, rdi",call 0x2a50,"mov r12d, dword ptr [rax]","mov rbp, rax","lea rax, [rip + 0x20ae67]","test rbx, rbx","mov esi, 0x38","cmove rbx, rax","mov rdi, rbx",call 0xb3a0,"mov dword ptr [rbp], r12d",pop rbx,pop rbp,pop r12,ret ,nop word ptr cs:[rax + rax],"lea rax, [rip + 0x20ae39]","test rdi, rdi","cmove rdi, rax","mov eax, dword ptr [rdi]",ret ,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],"lea rax, [rip + 0x20ae19]","test rdi, rdi","cmove rdi, rax","mov dword ptr [rdi], esi",ret ,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],"lea rax, [rip + 0x20adf9]","test rdi, rdi","mov ecx, esi","cmove rdi, rax","mov eax, esi","and ecx, 0x1f","shr al, 5","movzx eax, al","lea rdi, [rdi + rax*4 + 8]","mov esi, dword ptr [rdi]","mov eax, esi","shr eax, cl","xor edx, eax","and eax, 1","and edx, 1","shl edx, cl","xor edx, esi","mov dword ptr [rdi], edx",ret ,nop ,nop word ptr cs:[rax + rax],"lea rax, [rip + 0x20adb9]","test rdi, rdi","cmove rdi, rax","mov eax, dword ptr [rdi + 4]","mov dword ptr [rdi + 4], esi",ret ,nop ,nop word ptr cs:[rax + rax],"lea rax, [rip + 0x20ad99]","test rdi, rdi","cmove rdi, rax","test rsi, rsi","mov dword ptr [rdi], 0xa",je 0xa4e7,"test rdx, rdx",je 0xa4e7,"mov qword ptr [rdi + 0x28], rsi","mov qword ptr [rdi + 0x30], rdx",ret ,"sub rsp, 8",call 0x2a40,push r15,push r14,"lea rax, [rip + 0x20ad65]",push r13,push r12,"mov r13, rdi",push rbp,push rbx,"mov rbx, r8","mov r14, rsi","mov r15, rdx","sub rsp, 0x18","test r8, r8","cmove rbx, rax","mov qword ptr [rsp + 8], rcx",call 0x2a50,"mov r12d, dword ptr [rax]","mov rbp, rax","lea rax, [rbx + 8]","sub rsp, 8","mov r9d, dword ptr [rbx + 4]",push qword ptr [rbx + 0x30],"mov r8d, dword ptr [rbx]",push qword ptr [rbx + 0x28],"mov rdx, r15",push rax,"mov rcx, qword ptr [rsp + 0x28]","mov rsi, r14","mov rdi, r13",call 0x8ff0,"mov dword ptr [rbp], r12d","add rsp, 0x38",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],push r15,push r14,"lea rax, [rip + 0x20ace5]",push r13,push r12,"mov r12, rdx",push rbp,push rbx,"mov rbx, rcx","mov r14, rdi","mov r15, rsi","sub rsp, 0x38","test rcx, rcx","cmove rbx, rax","xor ebp, ebp",call 0x2a50,"test r12, r12","mov r13, rax","mov eax, dword ptr [rax]",sete bpl,"or ebp, dword ptr [rbx + 4]","lea r10, [rbx + 8]","sub rsp, 8","mov r8d, dword ptr [rbx]","mov rcx, r15","mov dword ptr [rsp + 0x14], eax",push qword ptr [rbx + 0x30],"mov rdx, r14",push qword ptr [rbx + 0x28],push r10,"xor esi, esi","mov r9d, ebp","xor edi, edi","mov qword ptr [rsp + 0x40], r10",call 0x8ff0,"lea rsi, [rax + 1]","mov qword ptr [rsp + 0x48], rax","add rsp, 0x20","mov rdi, rsi","mov qword ptr [rsp + 0x18], rsi",call 0xb1a0,"mov qword ptr [rsp + 0x10], rax","sub rsp, 8",push qword ptr [rbx + 0x30],push qword ptr [rbx + 0x28],"mov r10, qword ptr [rsp + 0x38]","mov r9d, ebp","mov r8d, dword ptr [rbx]","mov rcx, r15","mov rdx, r14","mov rdi, rax",push r10,"mov rsi, qword ptr [rsp + 0x38]",call 0x8ff0,"mov eax, dword ptr [rsp + 0x2c]","add rsp, 0x20","test r12, r12","mov dword ptr [r13], eax",je 0xa63f,"mov r11, qword ptr [rsp + 0x28]","mov qword ptr [r12], r11","mov rax, qword ptr [rsp + 0x10]","add rsp, 0x38",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov rcx, rdx","xor edx, edx",jmp 0xa570,nop word ptr [rax + rax],"mov eax, dword ptr [rip + 0x20aa02]",push r12,"mov r12, qword ptr [rip + 0x20aa01]",push rbp,push rbx,"cmp eax, 1",jle 0xa6b1,"sub eax, 2","lea rbx, [r12 + 0x18]","shl rax, 4","lea rbp, [r12 + rax + 0x28]",nop word ptr [rax + rax],"mov rdi, qword ptr [rbx]","add rbx, 0x10",call 0x2a10,"cmp rbx, rbp",jne 0xa6a0,"mov rdi, qword ptr [r12 + 8]","lea rbx, [rip + 0x20aaa3]","cmp rdi, rbx",je 0xa6d9,call 0x2a10,"mov qword ptr [rip + 0x20a9be], 0x100","mov qword ptr [rip + 0x20a9bf], rbx","lea rbx, [rip + 0x20a9b0]","cmp r12, rbx",je 0xa6f4,"mov rdi, r12",call 0x2a10,"mov qword ptr [rip + 0x20a98c], rbx",pop rbx,"mov dword ptr [rip + 0x20a979], 1",pop rbp,pop r12,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"lea rcx, [rip + 0x20ab49]","mov rdx, -1",jmp 0xa230,nop dword ptr [rax],nop word ptr cs:[rax + rax],"lea rcx, [rip + 0x20ab29]",jmp 0xa230,nop dword ptr [rax],"lea rcx, [rip + 0x20ab19]","mov rsi, rdi","mov rdx, -1","xor edi, edi",jmp 0xa230,nop dword ptr [rax + rax],"lea rcx, [rip + 0x20aaf9]","mov rdx, rsi","mov rsi, rdi","xor edi, edi",jmp 0xa230,nop ,nop word ptr cs:[rax + rax],"sub rsp, 0x48","mov rax, rdx","mov rdx, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x38], rdx","xor edx, edx","cmp esi, 0xa",je 0xa804,"mov dword ptr [rsp], esi","mov rcx, rsp","mov rdx, -1","mov rsi, rax","mov qword ptr [rsp + 4], 0","mov qword ptr [rsp + 0xc], 0","mov qword ptr [rsp + 0x14], 0","mov qword ptr [rsp + 0x1c], 0","mov qword ptr [rsp + 0x24], 0","mov qword ptr [rsp + 0x2c], 0","mov dword ptr [rsp + 0x34], 0",call 0xa230,"mov rcx, qword ptr [rsp + 0x38]","xor rcx, qword ptr fs:[0x28]",jne 0xa809,"add rsp, 0x48",ret ,call 0x2a40,call 0x2b30,nop ,"sub rsp, 0x48","mov rax, rdx","mov rdx, rcx","mov rcx, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x38], rcx","xor ecx, ecx","cmp esi, 0xa",je 0xa890,"mov dword ptr [rsp], esi","mov rcx, rsp","mov rsi, rax","mov qword ptr [rsp + 4], 0","mov qword ptr [rsp + 0xc], 0","mov qword ptr [rsp + 0x14], 0","mov qword ptr [rsp + 0x1c], 0","mov qword ptr [rsp + 0x24], 0","mov qword ptr [rsp + 0x2c], 0","mov dword ptr [rsp + 0x34], 0",call 0xa230,"mov rdx, qword ptr [rsp + 0x38]","xor rdx, qword ptr fs:[0x28]",jne 0xa895,"add rsp, 0x48",ret ,call 0x2a40,call 0x2b30,nop word ptr [rax + rax],"mov rdx, rsi","mov esi, edi","xor edi, edi",jmp 0xa780,nop dword ptr [rax],"mov rcx, rdx","mov rdx, rsi","mov esi, edi","xor edi, edi",jmp 0xa810,nop ,"sub rsp, 0x48","mov ecx, edx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x38], rax","xor eax, eax","mov rax, qword ptr [rip + 0x20a9b3]","mov r8, rsp","and ecx, 0x1f","movdqa xmm0, xmmword ptr [rip + 0x20a975]","mov qword ptr [rsp + 0x30], rax","mov eax, edx","movaps xmmword ptr [rsp], xmm0","shr al, 5","movzx eax, al","lea r9, [r8 + rax*4 + 8]","movdqa xmm0, xmmword ptr [rip + 0x20a967]","movaps xmmword ptr [rsp + 0x10], xmm0","movdqa xmm0, xmmword ptr [rip + 0x20a96a]","movaps xmmword ptr [rsp + 0x20], xmm0","mov edx, dword ptr [r9]","mov eax, edx","shr eax, cl",not eax,"and eax, 1","shl eax, cl","mov rcx, r8","xor eax, edx","mov rdx, rsi","mov rsi, rdi","mov dword ptr [r9], eax","xor edi, edi",call 0xa230,"mov rsi, qword ptr [rsp + 0x38]","xor rsi, qword ptr fs:[0x28]",jne 0xa953,"add rsp, 0x48",ret ,call 0x2b30,nop dword ptr [rax + rax],"movsx edx, sil","mov rsi, -1",jmp 0xa8c0,"mov edx, 0x3a","mov rsi, -1",jmp 0xa8c0,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],"mov edx, 0x3a",jmp 0xa8c0,nop word ptr [rax + rax],"sub rsp, 0x48","mov rax, rdx","mov rdx, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x38], rdx","xor edx, edx","cmp esi, 0xa",je 0xaa24,"mov dword ptr [rsp], esi","mov rcx, rsp","mov rdx, -1","mov rsi, rax","mov qword ptr [rsp + 4], 0","mov qword ptr [rsp + 0xc], 0x4000000","mov qword ptr [rsp + 0x14], 0","mov qword ptr [rsp + 0x1c], 0","mov qword ptr [rsp + 0x24], 0","mov qword ptr [rsp + 0x2c], 0","mov dword ptr [rsp + 0x34], 0",call 0xa230,"mov rcx, qword ptr [rsp + 0x38]","xor rcx, qword ptr fs:[0x28]",jne 0xaa29,"add rsp, 0x48",ret ,call 0x2a40,call 0x2b30,nop ,"sub rsp, 0x48","mov r9, rcx","mov rcx, qword ptr [rip + 0x20a852]","movdqa xmm0, xmmword ptr [rip + 0x20a81a]","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x38], rax","xor eax, eax","movaps xmmword ptr [rsp], xmm0","test rsi, rsi","mov qword ptr [rsp + 0x30], rcx","mov dword ptr [rsp], 0xa","movdqa xmm0, xmmword ptr [rip + 0x20a7ff]","movaps xmmword ptr [rsp + 0x10], xmm0","movdqa xmm0, xmmword ptr [rip + 0x20a802]","movaps xmmword ptr [rsp + 0x20], xmm0",je 0xaab7,"test rdx, rdx",je 0xaab7,"mov qword ptr [rsp + 0x28], rsi","mov qword ptr [rsp + 0x30], rdx","mov rcx, rsp","mov rdx, r8","mov rsi, r9",call 0xa230,"mov rdi, qword ptr [rsp + 0x38]","xor rdi, qword ptr fs:[0x28]",jne 0xaabc,"add rsp, 0x48",ret ,call 0x2a40,call 0x2b30,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],"mov r8, -1",jmp 0xaa30,nop dword ptr [rax],"mov rcx, rdx","mov r8, -1","mov rdx, rsi","mov rsi, rdi","xor edi, edi",jmp 0xaa30,nop word ptr [rax + rax],"mov r8, rcx","mov rcx, rdx","mov rdx, rsi","mov rsi, rdi","xor edi, edi",jmp 0xaa30,nop dword ptr [rax],nop word ptr cs:[rax + rax],"lea rcx, [rip + 0x20a519]",jmp 0xa230,nop dword ptr [rax],"lea rcx, [rip + 0x20a509]","mov rdx, rsi","mov rsi, rdi","xor edi, edi",jmp 0xa230,nop ,nop word ptr cs:[rax + rax],"lea rcx, [rip + 0x20a4e9]","mov rdx, -1",jmp 0xa230,nop dword ptr [rax],nop word ptr cs:[rax + rax],"lea rcx, [rip + 0x20a4c9]","mov rsi, rdi","mov rdx, -1","xor edi, edi",jmp 0xa230,nop dword ptr [rax + rax],push r15,push r14,push r13,push r12,"mov r12, r9",push rbp,push rbx,"mov rbp, rdi","mov rbx, r8","sub rsp, 0x28","test rsi, rsi",je 0xac40,"mov r8, rdx","lea rdx, [rip + 0x73ae]","mov r9, rcx","xor eax, eax","mov rcx, rsi","mov esi, 1",call 0x2e30,"lea rsi, [rip + 0x73a8]","xor edi, edi","mov edx, 5",call 0x2af0,"lea rdx, [rip + 0x76ba]","mov rcx, rax","mov r8d, 0x7e1","mov esi, 1","mov rdi, rbp","xor eax, eax",call 0x2e30,"lea rsi, [rip + 0x7403]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbp","mov rdi, rax",call 0x2c50,"cmp r12, 9",ja 0xaf50,"lea rdx, [rip + 0x7633]","movsxd rax, dword ptr [rdx + r12*4]","add rax, rdx",jmp rax,nop word ptr cs:[rax + rax],"mov r8, rcx","mov rcx, rdx","lea rdx, [rip + 0x7327]","mov esi, 1","xor eax, eax",call 0x2e30,jmp 0xabcc,nop ,"mov r9, qword ptr [rbx + 0x38]","mov rax, qword ptr [rbx + 0x10]","lea rsi, [rip + 0x7509]","mov r8, qword ptr [rbx + 8]","mov edx, 5","xor edi, edi","mov r13, qword ptr [rbx + 0x30]","mov r12, qword ptr [rbx + 0x28]","mov qword ptr [rsp + 0x10], r9","mov r15, qword ptr [rbx + 0x20]","mov r14, qword ptr [rbx + 0x18]","mov qword ptr [rsp], rax","mov qword ptr [rsp + 8], r8","mov rbx, qword ptr [rbx]",call 0x2af0,"sub rsp, 8","mov r9, qword ptr [rsp + 0x18]","mov rcx, rbx","mov rdx, rax","mov rdi, rbp","mov esi, 1","xor eax, eax",push r9,push r13,push r12,push r15,push r14,"mov r9, qword ptr [rsp + 0x30]","mov r8, qword ptr [rsp + 0x38]",call 0x2e30,"add rsp, 0x30","add rsp, 0x28",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax],"mov r10, qword ptr [rbx + 0x40]","mov r9, qword ptr [rbx + 0x38]","lea rsi, [rip + 0x74b1]","mov rax, qword ptr [rbx + 0x10]","mov r8, qword ptr [rbx + 8]","mov edx, 5","mov r13, qword ptr [rbx + 0x30]","mov r12, qword ptr [rbx + 0x28]","mov r15, qword ptr [rbx + 0x20]","mov r14, qword ptr [rbx + 0x18]","mov rbx, qword ptr [rbx]","mov qword ptr [rsp + 0x18], r10","mov qword ptr [rsp + 0x10], r9","mov qword ptr [rsp], rax","mov qword ptr [rsp + 8], r8","xor edi, edi",call 0x2af0,"mov r10, qword ptr [rsp + 0x18]",push r10,jmp 0xaca4,nop dword ptr [rax],"mov rbx, qword ptr [rbx]","lea rsi, [rip + 0x7235]","mov edx, 5","xor edi, edi",call 0x2af0,"add rsp, 0x28","mov rcx, rbx","mov rdi, rbp",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,"mov rdx, rax","mov esi, 1","xor eax, eax",jmp 0x2e30,nop dword ptr [rax],"mov r12, qword ptr [rbx + 8]","lea rsi, [rip + 0x7204]","mov rbx, qword ptr [rbx]","mov edx, 5","xor edi, edi",call 0x2af0,"add rsp, 0x28","mov r8, r12","mov rcx, rbx","mov rdi, rbp","mov rdx, rax","mov esi, 1",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,"xor eax, eax",jmp 0x2e30,"mov r13, qword ptr [rbx + 0x10]","mov r12, qword ptr [rbx + 8]","lea rsi, [rip + 0x71d7]","mov rbx, qword ptr [rbx]","mov edx, 5","xor edi, edi",call 0x2af0,"add rsp, 0x28","mov r9, r13","mov r8, r12","mov rcx, rbx","mov rdi, rbp","mov rdx, rax",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,"mov esi, 1","xor eax, eax",jmp 0x2e30,nop word ptr [rax + rax],"lea rsi, [rip + 0x72c1]","mov edx, 5","xor edi, edi","mov r14, qword ptr [rbx + 0x18]","mov r13, qword ptr [rbx + 0x10]","mov r12, qword ptr [rbx + 8]","mov rbx, qword ptr [rbx]",call 0x2af0,"sub rsp, 8",push r14,"mov rdx, rax","mov r9, r13","mov r8, r12","mov rcx, rbx","mov rdi, rbp","mov esi, 1","xor eax, eax",call 0x2e30,pop rax,pop rdx,"add rsp, 0x28",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax],"mov r15, qword ptr [rbx + 0x20]","lea rsi, [rip + 0x7285]","mov edx, 5","xor edi, edi","mov r14, qword ptr [rbx + 0x18]","mov r13, qword ptr [rbx + 0x10]","mov r12, qword ptr [rbx + 8]","mov rbx, qword ptr [rbx]",call 0x2af0,push r15,jmp 0xae36,nop word ptr [rax + rax],"mov r8, qword ptr [rbx + 8]","mov r12, qword ptr [rbx + 0x28]","lea rsi, [rip + 0x7279]","mov r15, qword ptr [rbx + 0x20]","mov r14, qword ptr [rbx + 0x18]","mov edx, 5","mov r13, qword ptr [rbx + 0x10]","xor edi, edi","mov rbx, qword ptr [rbx]","mov qword ptr [rsp], r8",call 0x2af0,"sub rsp, 8","mov r9, r13",push r12,push r15,push r14,"mov r8, qword ptr [rsp + 0x20]","mov rcx, rbx","mov rdx, rax","mov rdi, rbp","mov esi, 1","xor eax, eax",call 0x2e30,"add rsp, 0x20","add rsp, 0x28",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,"mov r9, qword ptr [rbx + 0x10]","mov r13, qword ptr [rbx + 0x30]","lea rsi, [rip + 0x7239]","mov r12, qword ptr [rbx + 0x28]","mov r15, qword ptr [rbx + 0x20]","mov edx, 5","mov r14, qword ptr [rbx + 0x18]","mov r8, qword ptr [rbx + 8]","xor edi, edi","mov qword ptr [rsp + 8], r9","mov rbx, qword ptr [rbx]","mov qword ptr [rsp], r8",call 0x2af0,push r13,push r12,push r15,push r14,"mov r9, qword ptr [rsp + 0x28]",jmp 0xaed3,nop word ptr cs:[rax + rax],"mov r10, qword ptr [rbx + 0x40]","mov r9, qword ptr [rbx + 0x38]","mov edx, 5","mov rax, qword ptr [rbx + 0x10]","mov r8, qword ptr [rbx + 8]","lea rsi, [rip + 0x7274]","mov r13, qword ptr [rbx + 0x30]","mov r12, qword ptr [rbx + 0x28]","mov r15, qword ptr [rbx + 0x20]","mov r14, qword ptr [rbx + 0x18]","mov qword ptr [rsp + 0x18], r10","mov qword ptr [rsp + 0x10], r9","mov qword ptr [rsp], rax","mov qword ptr [rsp + 8], r8","mov rbx, qword ptr [rbx]",jmp 0xad2a,call 0x2a40,nop dword ptr [rax],"xor r9d, r9d","cmp qword ptr [r8], 0",je 0xafbb,nop dword ptr [rax],"add r9, 1","cmp qword ptr [r8 + r9*8], 0",jne 0xafb0,jmp 0xab90,"sub rsp, 0x68","mov r10, r8","xor r9d, r9d","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x58], rax","xor eax, eax","mov r8, rsp",nop dword ptr [rax],"mov eax, dword ptr [r10]","cmp eax, 0x2f",ja 0xb02a,"mov r11d, eax","add r11, qword ptr [r10 + 0x10]","add eax, 8","mov dword ptr [r10], eax","mov rax, qword ptr [r11]","test rax, rax","mov qword ptr [r8 + r9*8], rax",je 0xb00b,"add r9, 1","cmp r9, 0xa",jne 0xafe0,call 0xab90,"mov rax, qword ptr [rsp + 0x58]","xor rax, qword ptr fs:[0x28]",jne 0xb025,"add rsp, 0x68",ret ,call 0x2b30,"mov r11, qword ptr [r10 + 8]","lea rax, [r11 + 8]","mov qword ptr [r10 + 8], rax",jmp 0xaff5,nop dword ptr [rax + rax],push rbp,push rbx,"mov r10d, 0x20","xor r11d, r11d","sub rsp, 0xb8","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x78], rax","xor eax, eax","lea rax, [rsp + 0xd0]","mov qword ptr [rsp + 0xa0], r8","lea rbx, [rsp + 0xd0]","lea r8, [rsp + 0x20]","mov qword ptr [rsp + 0xa8], r9","mov dword ptr [rsp + 8], 0x20","mov qword ptr [rsp + 0x10], rax","lea rax, [rsp + 0x80]","xor r9d, r9d","mov qword ptr [rsp + 0x18], rax","mov rbp, rax",nop word ptr [rax + rax],"cmp r10d, 0x2f",ja 0xb10c,"mov eax, r10d","mov r11d, 1","add r10d, 8","add rax, rbp","mov rax, qword ptr [rax]","test rax, rax","mov qword ptr [r8 + r9*8], rax",je 0xb0dc,"add r9, 1","cmp r9, 0xa",jne 0xb0b0,"test r11b, r11b",jne 0xb105,call 0xab90,"mov rax, qword ptr [rsp + 0x78]","xor rax, qword ptr fs:[0x28]",jne 0xb100,"add rsp, 0xb8",pop rbx,pop rbp,ret ,call 0x2b30,"mov dword ptr [rsp + 8], r10d",jmp 0xb0e1,"mov rax, rbx","add rbx, 8",jmp 0xb0c6,nop ,nop word ptr cs:[rax + rax],push rbx,"lea rsi, [rip + 0x6e9a]","mov edx, 5","xor edi, edi",call 0x2af0,"lea rdx, [rip + 0x6e9c]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"lea rsi, [rip + 0x6e9c]","mov edx, 5","xor edi, edi",call 0x2af0,"lea rcx, [rip + 0x5284]","lea rdx, [rip + 0x4b8c]","mov rsi, rax","mov edi, 1","xor eax, eax",call 0x2d80,"mov rbx, qword ptr [rip + 0x209f27]","lea rsi, [rip + 0x7098]","xor edi, edi","mov edx, 5",call 0x2af0,"mov rsi, rbx","mov rdi, rax",pop rbx,jmp 0x2c50,push rbx,"mov rbx, rdi",call 0x2cf0,"test rax, rax",jne 0xb1b3,"test rbx, rbx",jne 0xb1b5,pop rbx,ret ,call 0xb3f0,nop word ptr [rax + rax],"mov rax, rdi",mul rsi,"mov rdi, rax",seto al,"test rdi, rdi",js 0xb1db,"movzx eax, al","test rax, rax",jne 0xb1db,jmp 0xb1a0,"sub rsp, 8",call 0xb3f0,nop ,nop word ptr cs:[rax + rax],jmp 0xb1a0,nop dword ptr [rax],nop word ptr cs:[rax + rax],"test rsi, rsi",push rbx,"mov rbx, rsi",jne 0xb20e,"test rdi, rdi",jne 0xb228,"mov rsi, rbx",call 0x2d50,"test rax, rax",jne 0xb220,"test rbx, rbx",jne 0xb231,pop rbx,ret ,nop word ptr [rax + rax],call 0x2a10,"xor eax, eax",pop rbx,ret ,call 0xb3f0,nop word ptr cs:[rax + rax],"mov rax, rsi",mul rdx,"mov rsi, rax",seto al,"test rsi, rsi",js 0xb25b,"movzx eax, al","test rax, rax",jne 0xb25b,jmp 0xb200,"sub rsp, 8",call 0xb3f0,nop ,nop word ptr cs:[rax + rax],"test rdi, rdi","mov r9, rdx","mov rcx, qword ptr [rsi]",je 0xb2b0,"xor edx, edx","movabs rax, 0x5555555555555554",div r9,"cmp rax, rcx",jbe 0xb2cb,"mov rax, rcx","shr rax, 1","lea rcx, [rax + rcx + 1]","mov qword ptr [rsi], rcx","imul rcx, r9","mov rsi, rcx",jmp 0xb200,nop dword ptr [rax],"test rcx, rcx",je 0xb2d8,"mov rax, rcx",mul r9,seto dl,"test rax, rax","movzx edx, dl",js 0xb2cb,"test rdx, rdx",je 0xb29a,"sub rsp, 8",call 0xb3f0,nop dword ptr [rax],"xor edx, edx","mov eax, 0x80","xor r8d, r8d",div r9,"test rax, rax",sete r8b,"lea rcx, [r8 + rax]",jmp 0xb2b5,nop dword ptr [rax],nop word ptr cs:[rax + rax],"test rdi, rdi","mov rax, qword ptr [rsi]",je 0xb330,"movabs rdx, 0x5555555555555553","cmp rax, rdx",ja 0xb341,"mov rdx, rax","shr rdx, 1","lea rax, [rdx + rax + 1]","mov qword ptr [rsi], rax","mov rsi, rax",jmp 0xb200,nop dword ptr [rax],"test rax, rax","mov edx, 0x80","cmove rax, rdx","test rax, rax",jns 0xb322,"sub rsp, 8",call 0xb3f0,nop word ptr [rax + rax],push rbx,"mov rbx, rdi",call 0xb1a0,"mov rdx, rbx","xor esi, esi","mov rdi, rax",pop rbx,jmp 0x2c00,nop word ptr [rax + rax],"mov rax, rdi","sub rsp, 8",mul rsi,seto dl,"test rax, rax",js 0xb399,"movzx edx, dl","test rdx, rdx",jne 0xb399,call 0x2c60,"test rax, rax",je 0xb399,"add rsp, 8",ret ,call 0xb3f0,nop ,push rbp,push rbx,"mov rbp, rdi","mov rdi, rsi","mov rbx, rsi","sub rsp, 8",call 0xb1a0,"add rsp, 8","mov rdx, rbx","mov rsi, rbp",pop rbx,pop rbp,"mov rdi, rax",jmp 0x2c90,nop dword ptr [rax + rax],push rbx,"mov rbx, rdi",call 0x2b10,"mov rdi, rbx","lea rsi, [rax + 1]",pop rbx,jmp 0xb3a0,nop word ptr cs:[rax + rax],nop dword ptr [rax],"lea rsi, [rip + 0x6ed8]","sub rsp, 8","mov edx, 5","xor edi, edi",call 0x2af0,"mov edi, dword ptr [rip + 0x209c13]","lea rdx, [rip + 0x51bc]","mov rcx, rax","xor esi, esi","xor eax, eax",call 0x2db0,call 0x2a40,nop word ptr cs:[rax + rax],nop ,push r13,push r12,"mov r13, rsi",push rbp,push rbx,"mov rbx, rdi","mov r12, rdx","sub rsp, 0x18","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 8], rax","xor eax, eax","lea rax, [rsp + 4]","test rdi, rdi","cmove rbx, rax","mov rdi, rbx",call 0x2b50,"cmp rax, -3","mov rbp, rax",jbe 0xb490,"test r12, r12",je 0xb490,"xor edi, edi",call 0xbbc0,"test al, al",jne 0xb490,"movzx eax, byte ptr [r13]","mov ebp, 1","mov dword ptr [rbx], eax",nop dword ptr [rax],"mov rdx, qword ptr [rsp + 8]","xor rdx, qword ptr fs:[0x28]","mov rax, rbp",jne 0xb4ae,"add rsp, 0x18",pop rbx,pop rbp,pop r12,pop r13,ret ,call 0x2b30,nop word ptr cs:[rax + rax],nop dword ptr [rax],"test rdi, rdi",je 0xb4e0,"mov rsi, rdi","lea rdi, [rip + 0x5535]","mov edx, 1",jmp 0x2ab0,nop dword ptr [rax],"lea rdi, [rip + 0x551d]",jmp 0x2de0,nop dword ptr [rax],"test rdi, rdi",je 0xb518,push rbx,nop word ptr cs:[rax + rax],"mov rbx, qword ptr [rdi]",call 0x2a10,"test rbx, rbx","mov rdi, rbx",jne 0xb500,pop rbx,ret ,nop word ptr [rax + rax],ret ,nop word ptr [rax + rax],push r13,push r12,push rbp,push rbx,"mov rbp, rdi","sub rsp, 8",call 0x2a50,"cmp byte ptr [rbp + 8], 0","mov rbx, rax","mov r12d, dword ptr [rax]","lea rdi, [rbp + 9]",jne 0xb544,"xor edi, edi",call 0xb4c0,"test eax, eax",je 0xb570,"mov r12d, dword ptr [rbx]","xor r13d, r13d","mov rdi, rbp",call 0xb4f0,"mov dword ptr [rbx], r12d","add rsp, 8","mov eax, r13d",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax],call 0x2ca0,"mov r13d, 1",jmp 0xb553,nop dword ptr [rax],"test rdi, rdi",push r12,push rbp,push rbx,je 0xb5e8,"mov r12, rdi",call 0x2b10,"lea rbp, [rax + 1]","mov edi, 0x76","cmp rbp, 0x76","cmovae rdi, rbp","add rdi, 0x11","and rdi, 0xfffffffffffffff8",call 0x2cf0,"test rax, rax","mov rbx, rax",je 0xb5db,"mov qword ptr [rax], 0","lea rdi, [rbx + 9]","mov eax, 1","mov word ptr [rbx + 8], ax","mov rdx, rbp","mov rsi, r12",call 0x2c90,"mov byte ptr [rbx + rbp + 9], 0","mov rax, rbx",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax + rax],"mov edi, 0x80",call 0x2cf0,"test rax, rax","mov rbx, rax",je 0xb5db,"xor edx, edx","mov qword ptr [rbx], 0","mov rax, rbx","mov word ptr [rbx + 8], dx",pop rbx,pop rbp,pop r12,ret ,nop ,push r15,push r14,"mov eax, 1",push r13,push r12,push rbp,push rbx,"sub rsp, 8","mov rbp, qword ptr [rsi + 0x30]","test rbp, rbp",je 0xb6c0,"cmp rsi, rbp","mov r12, rdi","mov r13, rsi",ja 0xb644,"lea rdx, [rsi + 0x38]","cmp rbp, rdx",jb 0xb6c0,"cmp byte ptr [rbp], 0","lea rbx, [r12 + 9]",je 0xb6b0,nop ,"mov rsi, rbp","mov rdi, rbx",call 0x2c70,"test eax, eax",je 0xb6b7,"cmp byte ptr [rbx], 0",jne 0xb676,"lea r14, [r12 + 9]","cmp r14, rbx",jne 0xb6d0,"cmp byte ptr [r12 + 8], 0",je 0xb6d0,"mov rdi, rbx",call 0x2b10,"lea rbx, [rbx + rax + 1]","cmp byte ptr [rbx], 0",jne 0xb650,"mov rax, qword ptr [r12]","test rax, rax",je 0xb650,"lea rbx, [rax + 9]","mov rsi, rbp","mov r12, rax","mov rdi, rbx",call 0x2c70,"test eax, eax",jne 0xb65f,jmp 0xb6b7,nop dword ptr [rax],"lea rbx, [rip + 0x51ef]","mov qword ptr [r13 + 0x30], rbx","mov eax, 1","add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,"mov rdi, rbp",call 0x2b10,"lea rdx, [rax + 1]","mov r15, rax","mov rax, rbx","sub rax, r14","mov rcx, rax",not rcx,"cmp rcx, rdx",jb 0xb720,"add rax, rdx","cmp rax, 0x76",jbe 0xb730,"mov rdi, rbp",call 0xb580,"mov rbx, rax","mov qword ptr [r12], rax","xor eax, eax","test rbx, rbx",je 0xb6c0,"mov byte ptr [rbx + 8], 0","add rbx, 9",jmp 0xb6b7,nop dword ptr [rax],call 0x2a50,"mov dword ptr [rax], 0xc","xor eax, eax",jmp 0xb6c0,nop ,"mov rsi, rbp","mov rdi, rbx",call 0x2c90,"mov byte ptr [rbx + r15 + 1], 0",jmp 0xb6b7,nop word ptr cs:[rax + rax],push r12,push rbp,"mov rbp, rdi",push rbx,"lea rdi, [rip + 0x52a6]","sub rsp, 0x10",call 0x29f0,"test rax, rax","mov rbx, rax",je 0xb808,"cmp byte ptr [rbp + 8], 0",jne 0xb7e0,"mov rdi, rbx",call 0xb580,"test rax, rax","mov r12, rax",je 0xb7cd,"xor edi, edi","cmp byte ptr [rbp + 8], 0",je 0xb795,"lea rdi, [rbp + 9]",call 0xb4c0,"test eax, eax",je 0xb828,call 0x2a50,"cmp r12, 1","mov ebx, dword ptr [rax]",je 0xb7c8,"mov rdi, r12","mov qword ptr [rsp + 8], rax",call 0xb4f0,"mov rax, qword ptr [rsp + 8]",nop dword ptr [rax],"mov dword ptr [rax], ebx","xor r12d, r12d","add rsp, 0x10","mov rax, r12",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax],"lea rdi, [rbp + 9]","mov rsi, rax","mov r12d, 1",call 0x2c70,"test eax, eax",jne 0xb779,"add rsp, 0x10","mov rax, r12",pop rbx,pop rbp,pop r12,ret ,nop word ptr [rax + rax],"cmp byte ptr [rbp + 8], 0","mov r12d, 1",jne 0xb779,"add rsp, 0x10","mov rax, r12",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax],call 0x2ca0,jmp 0xb7cd,nop ,"cmp rdi, 1",je 0xb83b,jmp 0xb4f0,ret ,nop dword ptr [rax],push r13,push r12,push rbp,push rbx,"mov rbp, rsi","sub rsp, 8","test rdi, rdi",je 0xb8c0,"mov r13, rdx","mov rbx, rdi",call 0xb750,"test rax, rax","mov r12, rax",je 0xb8ae,"mov rsi, r13","mov rdi, rbp",call 0x2a70,"test rax, rax",je 0xb8a0,"mov rsi, r13","mov rdi, rbx",call 0xb610,"test al, al",je 0xb8a0,"cmp r12, 1",jne 0xb8d5,"add rsp, 8","mov rax, r13",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax + rax],"cmp r12, 1",je 0xb8ae,"mov rdi, r12",call 0xb520,"add rsp, 8","xor eax, eax",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax + rax],"add rsp, 8","mov rdi, rbp","mov rsi, rdx",pop rbx,pop rbp,pop r12,pop r13,jmp 0x2bb0,"mov rdi, r12",call 0xb520,"test al, al",jne 0xb88a,jmp 0xb8ae,nop dword ptr [rax],nop word ptr cs:[rax + rax],push r12,push rbp,push rbx,"mov rbx, rsi","sub rsp, 0x50","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x48], rax","xor eax, eax","test rdi, rdi",je 0xba10,"mov rbp, rdi",call 0xb750,"test rax, rax","mov r12, rax",je 0xba20,"mov rdi, rbx",call 0x2d30,"cmp rax, -1","mov qword ptr [rsp + 8], rax",je 0xb990,"mov rsi, rbx","mov rdi, rbp",call 0xb610,"test al, al",jne 0xb953,"mov qword ptr [rsp + 8], -1","cmp r12, 1",je 0xb969,"mov rdi, r12",call 0xb520,"test al, al",je 0xba20,"mov rax, qword ptr [rsp + 8]","mov rcx, qword ptr [rsp + 0x48]","xor rcx, qword ptr fs:[0x28]",jne 0xba2c,"add rsp, 0x50",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax + rax],"lea rsi, [rsp + 0x10]","lea rdi, [rsp + 8]",call 0x2a70,"test rax, rax",je 0xb953,"mov eax, dword ptr [rbx]","mov edx, dword ptr [rbx + 4]","xor eax, dword ptr [rsp + 0x10]","xor edx, dword ptr [rsp + 0x14]","mov ecx, dword ptr [rsp + 0x30]","or eax, edx","mov edx, dword ptr [rbx + 8]","xor edx, dword ptr [rsp + 0x18]","or eax, edx","mov edx, dword ptr [rbx + 0xc]","xor edx, dword ptr [rsp + 0x1c]","or eax, edx","mov edx, dword ptr [rbx + 0x10]","xor edx, dword ptr [rsp + 0x20]","or eax, edx","mov edx, dword ptr [rbx + 0x14]","xor edx, dword ptr [rsp + 0x24]","or eax, edx","mov edx, dword ptr [rbx + 0x20]","test edx, edx",sete dil,"test ecx, ecx",sete sil,"cmp dil, sil",je 0xb9fb,"test edx, edx",js 0xb9fb,"test ecx, ecx",jns 0xb953,"test eax, eax",je 0xb93b,jmp 0xb953,nop dword ptr [rax + rax],"mov rdi, rsi",call 0x2d90,jmp 0xb96e,nop dword ptr [rax],"mov rax, -1",jmp 0xb96e,call 0x2b30,nop word ptr cs:[rax + rax],nop dword ptr [rax + rax],push r13,push r12,"mov rax, rsi",push rbp,push rbx,"mov r13, rdi","sub rsp, 0x7f8","lea r12, [rsp + 0x10]","lea rsi, [rsp + 8]","mov qword ptr [rsp + 8], 0x7d0","mov rcx, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x7e8], rcx","xor ecx, ecx","mov rdi, r12","mov rcx, rdx","mov rdx, rax",call 0xdb80,"test rax, rax","mov rbx, qword ptr [rsp + 8]",je 0xbb1e,"mov rcx, r13","mov rdx, rbx","mov esi, 1","mov rdi, rax","mov rbp, rax",call 0x2e20,"cmp rax, rbx",jb 0xbaf0,"cmp rbp, r12",je 0xbabd,"mov rdi, rbp",call 0x2a10,"cmp rbx, 0x7fffffff",ja 0xbb13,"mov rcx, qword ptr [rsp + 0x7e8]","xor rcx, qword ptr fs:[0x28]","mov eax, ebx",jne 0xbb2d,"add rsp, 0x7f8",pop rbx,pop rbp,pop r12,pop r13,ret ,nop dword ptr [rax],"cmp rbp, r12","mov ebx, 0xffffffff",je 0xbac6,call 0x2a50,"mov r13d, dword ptr [rax]","mov r12, rax","mov rdi, rbp",call 0x2a10,"mov dword ptr [r12], r13d",jmp 0xbac6,call 0x2a50,"mov dword ptr [rax], 0x4b","mov rdi, r13","mov ebx, 0xffffffff",call 0xdb70,jmp 0xbac6,call 0x2b30,nop word ptr cs:[rax + rax],nop dword ptr [rax],push r12,push rbp,"mov rbp, rdi",push rbx,call 0x2a90,"mov ebx, dword ptr [rbp]","mov rdi, rbp","mov r12, rax",call 0xda50,"and ebx, 0x20","test ebx, ebx",jne 0xbb78,"test eax, eax",je 0xbb6f,"test r12, r12","mov eax, 0xffffffff",je 0xbba8,pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax],"test eax, eax",jne 0xbb98,call 0x2a50,"mov dword ptr [rax], 0","mov eax, 0xffffffff",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax],pop rbx,"mov eax, 0xffffffff",pop rbp,pop r12,ret ,nop word ptr [rax + rax],call 0x2a50,"cmp dword ptr [rax], 9",pop rbx,pop rbp,pop r12,setne al,"movzx eax, al",neg eax,ret ,nop dword ptr [rax],"sub rsp, 8","xor esi, esi",call 0x2d70,"mov rdx, rax","mov eax, 1","test rdx, rdx",je 0xbbf7,"lea rdi, [rip + 0x4f95]","mov ecx, 2","mov rsi, rdx","repe cmpsb byte ptr [rsi], byte ptr [rdi]",seta sil,setb cl,"xor eax, eax","cmp sil, cl",jne 0xbc00,"add rsp, 8",ret ,nop dword ptr [rax],"lea rdi, [rip + 0x66d9]","mov ecx, 6","mov rsi, rdx","repe cmpsb byte ptr [rsi], byte ptr [rdi]",setne al,"add rsp, 8",ret ,nop dword ptr [rax],push r15,push r14,"mov edi, 0xe",push r13,push r12,push rbp,push rbx,"sub rsp, 0xa8","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x98], rax","xor eax, eax",call 0x2d10,"mov r15, qword ptr [rip + 0x209643]","test rax, rax","mov rbx, rax","lea rax, [rip + 0x4c44]","cmove rbx, rax","test r15, r15",jne 0xbc8a,jmp 0xbd00,"mov rdi, r15",call 0x2b10,"lea rbp, [r15 + rax + 1]","mov rdi, rbp",call 0x2b10,"lea r15, [rbp + rax + 1]","movzx ebp, byte ptr [r15]","test bpl, bpl",je 0xbcbc,"mov rsi, r15","mov rdi, rbx",call 0x2c70,"test eax, eax",je 0xbcaf,"cmp bpl, 0x2a",jne 0xbc70,"cmp byte ptr [r15 + 1], 0",jne 0xbc70,"mov rdi, r15",call 0x2b10,"lea rbx, [r15 + rax + 1]","cmp byte ptr [rbx], 0","lea rax, [rip + 0x6620]","cmove rbx, rax","mov rcx, qword ptr [rsp + 0x98]","xor rcx, qword ptr fs:[0x28]","mov rax, rbx",jne 0xc05c,"add rsp, 0xa8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop word ptr cs:[rax + rax],"lea rdi, [rip + 0x65ff]",call 0x29f0,"test rax, rax","mov r13, rax",je 0xbd60,"cmp byte ptr [rax], 0",je 0xbd60,"mov rdi, rax",call 0x2b10,"test rax, rax","mov r12, rax","mov r14, rax",jne 0xc04b,"mov edi, 0xe",call 0x2cf0,"test rax, rax","mov rbp, rax",jne 0xbde8,"lea r15, [rip + 0x4b59]","mov qword ptr [rip + 0x209544], r15",jmp 0xbc8a,nop dword ptr [rax],"lea r13, [rip + 0x6585]","mov edi, 0x28","mov r12d, 0x1a","mov r14d, 0x19",call 0x2cf0,"test rax, rax","mov rbp, rax",je 0xbd46,"mov rdx, r14","mov rsi, r13","mov rdi, rbp",call 0x2c90,"mov byte ptr [rbp + r14], 0x2f","add r12, rbp","movabs rax, 0x2e74657372616863","mov esi, 0x20000","mov qword ptr [r12], rax","mov eax, 0x73","mov dword ptr [r12 + 8], 0x61696c61","mov word ptr [r12 + 0xc], ax","mov rdi, rbp","xor eax, eax",call 0x2dc0,"test eax, eax","mov r12d, eax",jns 0xbdf8,"lea r15, [rip + 0x4acb]","mov rdi, rbp",call 0x2a10,jmp 0xbd4d,"mov rdx, r14","mov rsi, r13","mov rdi, rbp",call 0x2c90,jmp 0xbd99,"lea rsi, [rip + 0x4964]","mov edi, eax","xor r15d, r15d",call 0x2d60,"test rax, rax","mov r14, rax","mov qword ptr [rsp], 0",je 0xbff3,"lea rax, [rsp + 0x60]","mov qword ptr [rsp + 8], rax","lea rax, [rsp + 0x20]","mov qword ptr [rsp + 0x10], rax","mov rax, qword ptr [r14 + 8]","cmp rax, qword ptr [r14 + 0x10]",jae 0xbf8a,"lea rdx, [rax + 1]","mov qword ptr [r14 + 8], rdx","movzx edi, byte ptr [rax]","lea eax, [rdi - 9]","cmp eax, 1",jbe 0xbe31,"cmp edi, 0x20",je 0xbe31,"cmp edi, 0x23",je 0xbfd9,"mov rsi, r14",call 0x2d20,"mov r13, qword ptr [rsp + 0x10]","mov rcx, qword ptr [rsp + 8]","lea rsi, [rip + 0x649d]","xor eax, eax","mov rdi, r14","mov rdx, r13",call 0x2c10,"cmp eax, 1",jle 0xbf9d,"mov rdx, r13","mov ecx, dword ptr [rdx]","add rdx, 4","lea eax, [rcx - 0x1010101]",not ecx,"and eax, ecx","and eax, 0x80808080",je 0xbe92,"mov ecx, eax","mov r13, qword ptr [rsp + 8]","shr ecx, 0x10","test eax, 0x8080","cmove eax, ecx","lea rcx, [rdx + 2]","cmove rdx, rcx","mov ecx, eax","add cl, al","sbb rdx, 3","sub rdx, qword ptr [rsp + 0x10]","mov esi, dword ptr [r13]","add r13, 4","lea eax, [rsi - 0x1010101]",not esi,"and eax, esi","and eax, 0x80808080",je 0xbed0,"mov esi, eax","mov qword ptr [rsp + 0x18], rdx","shr esi, 0x10","test eax, 0x8080","cmove eax, esi","lea rsi, [r13 + 2]","mov ecx, eax","cmove r13, rsi","add cl, al","sbb r13, 3","sub r13, qword ptr [rsp + 8]","cmp qword ptr [rsp], 0","lea rax, [rdx + r13]",jne 0xc00a,"lea rcx, [rax + 2]","lea rdi, [rax + 3]","mov qword ptr [rsp], rcx",call 0x2cf0,"mov rdx, qword ptr [rsp + 0x18]","mov r12, rax","test r12, r12",je 0xc02f,"mov r15, qword ptr [rsp]","mov rdi, -2","mov rsi, qword ptr [rsp + 0x10]","sub rdi, rdx","add rdx, 1","sub r15, r13","add rdi, r15","add rdi, r12",call 0x2c90,"mov rsi, qword ptr [rsp + 8]","lea rdi, [r12 + r15 - 1]","lea rdx, [r13 + 1]","mov r15, r12",call 0x2c90,"mov rax, qword ptr [r14 + 8]","cmp rax, qword ptr [r14 + 0x10]",jb 0xbe3f,"mov rdi, r14",call 0x29e0,"cmp eax, -1","mov edi, eax",jne 0xbe4a,"mov rdi, r14",call 0xda50,"mov rax, qword ptr [rsp]","test rax, rax",je 0xbdd4,"mov byte ptr [r15 + rax], 0",jmp 0xbddb,nop dword ptr [rax],"lea rdx, [rax + 1]","mov qword ptr [r14 + 8], rdx","movzx eax, byte ptr [rax]","mov edx, 1","cmp eax, 0xa",je 0xc000,"test dl, dl",je 0xc000,"mov rax, qword ptr [r14 + 8]","cmp rax, qword ptr [r14 + 0x10]",jb 0xbfc0,"mov rdi, r14",call 0x29e0,"cmp eax, -1",setne dl,jmp 0xbfd0,"mov edi, r12d",call 0x2c20,jmp 0xbdd4,"cmp eax, -1",je 0xbf9d,jmp 0xbe31,"add rax, qword ptr [rsp]","mov rdi, r15","lea rcx, [rax + 2]","lea rsi, [rax + 3]","mov qword ptr [rsp], rcx",call 0x2d50,"mov rdx, qword ptr [rsp + 0x18]","mov r12, rax",jmp 0xbf38,"mov rdi, r15","lea r15, [rip + 0x486d]",call 0x2a10,"mov rdi, r14",call 0xda50,jmp 0xbddb,"cmp byte ptr [r13 + rax - 1], 0x2f",jne 0xc061,"lea rdi, [rax + 0xe]",jmp 0xbd35,call 0x2b30,"lea rdi, [rax + 0xf]","add r12, 1",jmp 0xbd78,nop ,"test rdx, rdx",push r12,push rbp,"mov rbp, rdi",push rbx,je 0xc0a9,"mov r12, rsi","lea rbx, [rdx - 1]",call 0x2e60,nop dword ptr [rax + rax],"movzx ecx, byte ptr [r12 + rbx]","mov rdx, qword ptr [rax]","mov edx, dword ptr [rdx + rcx*4]","mov byte ptr [rbp + rbx], dl","sub rbx, 1","cmp rbx, -1",jne 0xc090,"mov rax, rbp",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],"test rdx, rdx",push r12,push rbp,"mov rbp, rdi",push rbx,je 0xc0f9,"mov r12, rsi","lea rbx, [rdx - 1]",call 0x29d0,nop dword ptr [rax + rax],"movzx ecx, byte ptr [r12 + rbx]","mov rdx, qword ptr [rax]","mov edx, dword ptr [rdx + rcx*4]","mov byte ptr [rbp + rbx], dl","sub rbx, 1","cmp rbx, -1",jne 0xc0e0,"mov rax, rbp",pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax + rax],nop word ptr cs:[rax + rax],push r15,push r14,"mov r15, rdi",push r13,push r12,"lea rax, [rip + 0x4784]",push rbp,push rbx,"mov r10, rsi","mov r11, rdx","sub rsp, 0x4d8","mov rbx, qword ptr [rcx + 0x30]","mov r14d, dword ptr [rcx + 8]","mov rdi, qword ptr [rsp + 0x510]","mov qword ptr [rsp + 8], rcx","mov qword ptr [rsp + 0x38], r9","mov byte ptr [rsp + 0x4b], r8b","mov qword ptr [rsp + 0x30], rdi","mov rdi, qword ptr fs:[0x28]","mov qword ptr [rsp + 0x4c8], rdi","xor edi, edi","test rbx, rbx","cmovne rax, rbx","cmp r14d, 0xc","mov qword ptr [rsp + 0x40], rax",jle 0xc290,"sub r14d, 0xc","movzx eax, byte ptr [r11]","xor r13d, r13d","test al, al",je 0xc1e2,"lea rsi, [rsp + 0xbb]","lea rdi, [rsp + 0xbd]","mov dword ptr [rsp + 0x4c], r14d","mov r12, r10","mov qword ptr [rsp + 0x10], rsi","mov qword ptr [rsp + 0x28], rdi","cmp al, 0x25",je 0xc230,"mov rdx, r12","sub rdx, r13","cmp rdx, 1",jbe 0xc1f8,"test r15, r15",je 0xc1cb,"mov byte ptr [r15], al","add r15, 1","add r13, 1","mov r14, r11","movzx eax, byte ptr [r14 + 1]","lea r11, [r14 + 1]","test al, al",jne 0xc1af,"mov r10, r12","test r15, r15",je 0xc1fb,"test r10, r10",je 0xc1fb,"mov byte ptr [r15], 0",jmp 0xc1fb,nop word ptr [rax + rax],"xor r13d, r13d","mov rdi, qword ptr [rsp + 0x4c8]","xor rdi, qword ptr fs:[0x28]","mov rax, r13",jne 0xd9ea,"add rsp, 0x4d8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop word ptr [rax + rax],"movzx eax, byte ptr [rsp + 0x4b]","xor r8d, r8d","mov dword ptr [rsp + 0x20], 0","mov byte ptr [rsp + 0x18], al","add r11, 1","movsx ebp, byte ptr [r11]","cmp bpl, 0x30","mov ecx, ebp","mov edi, ebp",je 0xc286,jg 0xc270,"cmp bpl, 0x23",jne 0xc280,"mov r8d, 1",jmp 0xc244,nop word ptr cs:[rax + rax],"cmp bpl, 0x5e",jne 0xc2a8,"mov byte ptr [rsp + 0x18], 1",jmp 0xc244,nop dword ptr [rax],"cmp bpl, 0x2d",jne 0xc2ae,"mov dword ptr [rsp + 0x20], ebp",jmp 0xc244,nop dword ptr [rax],"test r14d, r14d","mov eax, 0xc","cmove r14d, eax",jmp 0xc182,nop dword ptr [rax],"cmp bpl, 0x5f",je 0xc286,"lea eax, [rbp - 0x30]","mov ebx, 0xffffffff","cmp eax, 9",jbe 0xc3b8,"cmp cl, 0x45",je 0xc2e8,"cmp cl, 0x4f",je 0xc2e8,"xor ebp, ebp","cmp cl, 0x7a",ja 0xc300,"lea rsi, [rip + 0x6061]","movzx eax, cl","movsxd rax, dword ptr [rsi + rax*4]","add rax, rsi",jmp rax,nop dword ptr [rax + rax],"movsx edi, byte ptr [r11 + 1]","add r11, 1","mov ecx, edi",jmp 0xc2cb,"mov r11, r8",nop dword ptr [rax + rax],"lea rax, [r11 - 1]","mov ecx, 1","mov r8, rax","lea rax, [rax - 1]","add ecx, 1","cmp byte ptr [rax + 1], 0x25",jne 0xc309,"mov rdx, r12","mov eax, 0","movsxd rbp, ecx","sub rdx, r13","test ebx, ebx","mov r14, r11","cmovns eax, ebx",cdqe ,"cmp rbp, rax","mov r9, rax","cmovae r9, rbp","cmp rdx, r9",jbe 0xc1f8,"test r15, r15",je 0xc3ad,"cmp rbp, rax",jae 0xc387,"movsxd rdx, ebx","mov qword ptr [rsp + 0x50], r9","sub rdx, rbp","cmp dword ptr [rsp + 0x20], 0x30","mov qword ptr [rsp + 0x20], r8","lea rbx, [r15 + rdx]",je 0xd4cf,"mov rdi, r15","mov esi, 0x20","mov r15, rbx",call 0x2c00,"mov r9, qword ptr [rsp + 0x50]","mov r8, qword ptr [rsp + 0x20]","cmp byte ptr [rsp + 0x18], 0","mov rdx, rbp","mov qword ptr [rsp + 0x18], r9","mov rsi, r8","mov rdi, r15",jne 0xc420,call 0x2c90,"mov r9, qword ptr [rsp + 0x18]","add r15, rbp","add r13, r9",jmp 0xc1d2,nop dword ptr [rax],"xor ebx, ebx","movsx ebp, byte ptr [r11 + 1]","cmp ebx, 0xccccccc","lea rsi, [r11 + 1]","mov ecx, ebp","lea eax, [rbp - 0x30]",jg 0xc3f5,"movsx edx, byte ptr [r11]",je 0xc3f0,"lea edi, [rbx + rbx*4]","mov r11, rsi","lea ebx, [rdx + rdi*2 - 0x30]","cmp eax, 9",jbe 0xc3ba,"mov edi, ebp",jmp 0xc2bf,nop dword ptr [rax],"cmp dl, 0x37",jle 0xc3d6,"cmp eax, 9",ja 0xc410,"movsx ebp, byte ptr [r11 + 2]","mov ebx, 0x7fffffff","add r11, 2","mov ecx, ebp","lea eax, [rbp - 0x30]",jmp 0xc3e0,nop ,"mov edi, ebp","mov r11, rsi","mov ebx, 0x7fffffff",jmp 0xc2bf,nop ,call 0xc0c0,"mov r9, qword ptr [rsp + 0x18]",jmp 0xc3aa,nop ,"test ebp, ebp",jne 0xc300,"movzx eax, byte ptr [rsp + 0x18]","test r8b, r8b","cmovne eax, r8d","mov byte ptr [rsp + 0x18], al","mov rax, qword ptr [rsp + 0x28]","mov edx, 0x2520","mov r14, r11","mov word ptr [rsp + 0xbb], dx","xor r8d, r8d","xor ebp, ebp",nop word ptr [rax + rax],"mov byte ptr [rax], cl","mov byte ptr [rax + 1], 0","lea rax, [rsp + 0xc0]","mov rcx, qword ptr [rsp + 8]","mov rdx, qword ptr [rsp + 0x10]","mov esi, 0x400","mov rdi, rax","mov byte ptr [rsp + 0x58], r8b","mov qword ptr [rsp + 0x50], rax",call 0x2da0,"test rax, rax",je 0xc1d2,"lea rcx, [rax - 1]","test ebx, ebx","mov eax, 0","cmovns eax, ebx","mov rdx, r12",cdqe ,"cmp rcx, rax","mov r9, rax","cmovae r9, rcx","sub rdx, r13","cmp rdx, r9",jbe 0xc1f8,"test r15, r15",je 0xc3ad,"test ebp, ebp","movzx r8d, byte ptr [rsp + 0x58]",jne 0xc525,"cmp rcx, rax",jae 0xc525,"movsxd rdx, ebx","mov qword ptr [rsp + 0x60], r9","mov qword ptr [rsp + 0x58], rcx","sub rdx, rcx","cmp dword ptr [rsp + 0x20], 0x30","mov byte ptr [rsp + 0x20], r8b","lea rbp, [r15 + rdx]",je 0xd4aa,"mov rdi, r15","mov esi, 0x20","mov r15, rbp",call 0x2c00,"movzx r8d, byte ptr [rsp + 0x20]","mov r9, qword ptr [rsp + 0x60]","mov rcx, qword ptr [rsp + 0x58]","test r8b, r8b",jne 0xd3e8,"cmp byte ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], r9","mov rsi, qword ptr [rsp + 0x50]",je 0xd3c0,"mov rdx, rcx","add rsi, 1","mov rdi, r15","mov qword ptr [rsp + 0x18], rcx",call 0xc0c0,"mov rcx, qword ptr [rsp + 0x18]","mov r9, qword ptr [rsp + 0x20]","add r15, rcx","add r13, r9",jmp 0xc1d2,nop dword ptr [rax],"cmp ebp, 0x4f",je 0xc300,"xor r8d, r8d","mov esi, 0x2520","test ebp, ebp","mov word ptr [rsp + 0xbb], si",jne 0xd9ef,"mov r14, r11","mov rax, qword ptr [rsp + 0x28]",jmp 0xc468,"cmp ebp, 0x45",je 0xd4ee,"mov rax, qword ptr [rsp + 8]","mov edx, 0x51eb851f","mov r10d, 2","mov esi, dword ptr [rax + 0x14]","mov eax, esi",imul edx,"mov eax, edx","mov edx, esi","sar edx, 0x1f","sar eax, 5","sub eax, edx","mov edx, esi","lea ecx, [rax + 0x13]","imul eax, eax, 0x64","sub edx, eax","mov eax, edx","shr eax, 0x1f","test ecx, ecx",setg dl,"and eax, edx","cmp esi, 0xfffff894",setl r9b,"sub ecx, eax","xor esi, esi","xor r14d, r14d",nop dword ptr [rax],"cmp ebp, 0x4f",jne 0xd2b0,"test r9b, r9b",jne 0xd2b9,"mov ecx, edi","mov eax, 0x2520","xor r8d, r8d","mov word ptr [rsp + 0xbb], ax","mov rax, qword ptr [rsp + 0x10]","mov byte ptr [rsp + 0xbd], bpl","mov r14, r11","mov ebp, r10d","add rax, 3",jmp 0xc468,"test ebp, ebp",jne 0xc300,"lea rax, [rip + 0x5cd9]","mov qword ptr [rsp + 0x50], rax",nop dword ptr [rax],"movzx eax, byte ptr [rsp + 0x18]","mov edi, dword ptr [rsp + 0x518]","mov rsi, -1","mov qword ptr [rsp + 0x58], r11","mov dword ptr [rsp + 0x18], eax",push rdi,"mov r8d, eax",push qword ptr [rsp + 0x38],"mov r9, qword ptr [rsp + 0x48]","xor edi, edi","mov rcx, qword ptr [rsp + 0x18]","mov rdx, qword ptr [rsp + 0x60]",call 0xc110,"test ebx, ebx","mov rbp, rax","mov eax, 0","cmovns eax, ebx",cdqe ,"cmp rbp, rax","mov r14, rax",pop r9,pop r10,"mov r10, r12","cmovae r14, rbp","sub r10, r13","cmp r10, r14",jbe 0xc1f8,"test r15, r15","mov r11, qword ptr [rsp + 0x58]",jne 0xd42c,"add r13, r14","mov r14, r11",jmp 0xc1d2,"cmp ebp, 0x45",je 0xc300,"mov rdx, qword ptr [rsp + 8]","mov esi, dword ptr [rdx + 0x14]","mov r9d, dword ptr [rdx + 0x1c]","mov r14d, dword ptr [rdx + 0x18]","mov edx, 0x92492493","mov eax, esi","mov r8d, r9d","sar eax, 0x1f","sub r8d, r14d","add r8d, 0x17e","and eax, 0x190","lea r10d, [rsi + rax - 0x64]","mov eax, r8d",imul edx,"lea eax, [rdx + r8]","mov edx, r8d","sar edx, 0x1f","sar eax, 2","sub eax, edx","lea edx, [rax*8]","sub edx, eax","mov eax, edx","mov edx, r9d","sub edx, r8d","lea eax, [rdx + rax + 3]","test eax, eax","mov dword ptr [rsp + 0x50], eax",js 0xd791,"test r10b, 3","mov eax, 0x16d",jne 0xc793,"mov r8d, 0x51eb851f","mov eax, r10d",imul r8d,"mov eax, r10d","sar eax, 0x1f","mov dword ptr [rsp + 0x58], eax","mov r8d, edx","sar edx, 5","sub edx, eax","mov eax, 0x16e","imul edx, edx, 0x64","cmp r10d, edx",jne 0xc793,"sar r8d, 7","mov eax, r8d","sub eax, dword ptr [rsp + 0x58]","imul eax, eax, 0x190","cmp r10d, eax",sete al,"movzx eax, al","add eax, 0x16d","sub r9d, eax","mov edx, 0x92492493","mov r8d, r9d","sub r8d, r14d","mov r14d, 1","add r8d, 0x17e","mov eax, r8d","sub r9d, r8d",imul edx,"lea eax, [rdx + r8]","mov edx, r8d","sar edx, 0x1f","sar eax, 2","sub eax, edx","lea edx, [rax*8]","sub edx, eax","lea r8d, [r9 + rdx + 3]","test r8d, r8d",jns 0xc7e0,"mov r8d, dword ptr [rsp + 0x50]","xor r14d, r14d","cmp cl, 0x47",je 0xd823,"cmp cl, 0x67",jne 0xd849,"mov ecx, 0x51eb851f","mov eax, esi","mov r8d, esi",imul ecx,"mov r10d, 2","mov eax, edx","mov edx, esi","sar edx, 0x1f","sar eax, 5","sub eax, edx","imul eax, eax, 0x64","sub r8d, eax","add r8d, r14d","mov eax, r8d",imul ecx,"mov eax, r8d","sar eax, 0x1f","mov ecx, edx","sar ecx, 5","sub ecx, eax","imul ecx, ecx, 0x64","sub r8d, ecx","mov ecx, r8d",jns 0xc850,"mov eax, 0xfffff894","mov edx, r8d","add ecx, 0x64","sub eax, r14d",neg edx,"cmp esi, eax","cmovl ecx, edx",nop dword ptr [rax + rax],"mov eax, ecx","xor esi, esi","xor r14d, r14d","shr eax, 0x1f","mov r9d, eax",jmp 0xc5f8,"mov rdx, r12","mov eax, 0","mov esi, 1","sub rdx, r13","test ebx, ebx","cmovns eax, ebx",cdqe ,"test rax, rax","cmovne rsi, rax","test ebp, ebp","mov r9, rsi",jne 0xd73b,"cmp rdx, rsi",jbe 0xc1f8,"test r15, r15",je 0xc8e4,"cmp ebx, 1",jle 0xc8dd,"movsxd rdx, ebx","mov qword ptr [rsp + 0x18], rsi","mov esi, 0x30","sub rdx, 1","cmp dword ptr [rsp + 0x20], 0x30","mov qword ptr [rsp + 0x20], r11","lea rbx, [r15 + rdx]",je 0xc8c4,"mov esi, 0x20","mov rdi, r15","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x20]","mov r9, qword ptr [rsp + 0x18]","movzx ecx, byte ptr [r11]","mov byte ptr [r15], cl","add r15, 1","add r13, r9","mov r14, r11",jmp 0xc1d2,"movzx eax, byte ptr [r11 + 1]","lea rdx, [r11 + 1]","cmp al, 0x3a",je 0xd8b9,"mov r10d, 1","cmp al, 0x7a",jne 0xc300,"mov r11, rdx","mov rax, qword ptr [rsp + 8]","mov ecx, dword ptr [rax + 0x20]","test ecx, ecx",js 0xd671,"mov rcx, qword ptr [rax + 0x28]","mov r9d, 1","test ecx, ecx",js 0xc943,"mov r9d, 0",jne 0xc943,"mov rax, qword ptr [rsp + 0x40]","cmp byte ptr [rax], 0x2d",sete r9b,"mov eax, ecx","mov edx, 0x91a2b3c5","mov esi, 0x88888889",imul edx,"mov eax, ecx","sar eax, 0x1f","mov dword ptr [rsp + 0x50], eax","lea r14d, [rdx + rcx]","sar r14d, 0xb","sub r14d, eax","mov eax, ecx",imul esi,"lea r8d, [rdx + rcx]","sar r8d, 5","sub r8d, dword ptr [rsp + 0x50]","mov eax, r8d",imul esi,"mov eax, r8d","sar eax, 0x1f","lea esi, [rdx + r8]","sar esi, 5","sub esi, eax","mov eax, r8d","imul esi, esi, 0x3c","imul r8d, r8d, 0x3c","sub eax, esi","sub ecx, r8d","cmp r10, 1","mov esi, eax",je 0xd86f,jb 0xd90c,"cmp r10, 2",je 0xd76d,"cmp r10, 3",jne 0xd900,"test ecx, ecx",jne 0xd76d,"test eax, eax",jne 0xd86f,"mov ecx, r14d","mov r10d, 3","mov r14d, 1",jmp 0xc5f8,nop dword ptr [rax + rax],"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov edx, 0x92492493","mov esi, dword ptr [rax + 0x1c]","sub esi, dword ptr [rax + 0x18]","add esi, 7","mov eax, esi",imul edx,"lea ecx, [rdx + rsi]","sar esi, 0x1f","mov r10d, 2","sar ecx, 2","sub ecx, esi",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov r10, qword ptr [rsp + 8]","mov ecx, 0x92492493","mov eax, dword ptr [r10 + 0x18]","lea esi, [rax + 6]","mov dword ptr [rsp + 0x50], eax","mov eax, esi",imul ecx,"lea eax, [rdx + rsi]","mov edx, esi","sar edx, 0x1f","sar eax, 2","sub eax, edx","lea edx, [rax*8]","sub edx, eax","mov eax, edx","mov edx, dword ptr [r10 + 0x1c]","sub eax, esi","lea esi, [rax + rdx + 7]","mov eax, esi",imul ecx,jmp 0xca08,"test ebx, ebx","mov ebp, 0","mov eax, 1","cmovns ebp, ebx","movsxd rbp, ebp","test rbp, rbp","cmove rbp, rax","mov rax, r12","sub rax, r13","cmp rax, rbp",jbe 0xc1f8,"test r15, r15",je 0xcad2,"cmp ebx, 1",jle 0xcaca,"movsxd rdx, ebx","mov qword ptr [rsp + 0x18], r11","sub rdx, 1","cmp dword ptr [rsp + 0x20], 0x30","lea rbx, [r15 + rdx]",je 0xd925,"mov rdi, r15","mov esi, 0x20","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x18]","mov byte ptr [r15], 9","add r15, 1","add r13, rbp","mov r14, r11",jmp 0xc1d2,"mov rax, qword ptr [rsp + 8]","cmp ebp, 0x4f","mov r10d, 1","mov eax, dword ptr [rax + 0x10]",je 0xc60c,"lea edx, [rax + rax*4]","xor r14d, r14d","xor r9d, r9d","xor esi, esi","lea ecx, [rax + rdx*2]","sar ecx, 5","add ecx, 1",nop dword ptr [rax + rax],"lea rax, [rsp + 0xc0]","lea rdi, [rsp + 0xd7]","mov r8d, 0xcccccccd","mov qword ptr [rsp + 0x50], rax",nop dword ptr [rax + rax],"test sil, 1","lea rbp, [rdi - 1]",je 0xcb48,"lea rax, [rdi - 2]","mov byte ptr [rdi - 1], 0x3a","mov rdi, rbp","mov rbp, rax","mov eax, ecx","sar esi, 1",mul r8d,"shr edx, 3","lea eax, [rdx + rdx*4]","add eax, eax","sub ecx, eax","mov eax, esi","add ecx, 0x30","or eax, edx","mov byte ptr [rdi - 1], cl","mov ecx, edx","mov rdi, rbp",jne 0xcb30,"cmp r10d, ebx","cmovl r10d, ebx","test r9b, r9b",jne 0xd2f0,"test r14b, r14b",je 0xce2c,"cmp dword ptr [rsp + 0x20], 0x2d","mov r9d, 0x2b",je 0xd667,"mov rax, qword ptr [rsp + 0x50]","lea r14d, [r10 - 1]","mov rdx, r12","sub rdx, r13","lea rcx, [rax + 0x17]","sub rcx, rbp","sub r14d, ecx","test r14d, r14d",jle 0xd599,"cmp dword ptr [rsp + 0x20], 0x5f",je 0xd508,"movsxd rax, r10d","cmp rax, rdx",jae 0xc1f8,"test ebx, ebx","mov eax, 0","mov esi, 1","cmovns eax, ebx",cdqe ,"test rax, rax","cmovne rsi, rax","cmp rsi, rdx",jae 0xc1f8,"add r13, rsi","test r15, r15","movsxd r8, r14d","mov r14, r11",je 0xcca4,"test r10d, r10d",jne 0xcc64,"cmp rax, 1",jbe 0xcc64,"movsxd rdx, ebx","mov qword ptr [rsp + 0x70], r11","mov byte ptr [rsp + 0x68], r9b","sub rdx, 1","cmp dword ptr [rsp + 0x20], 0x30","mov qword ptr [rsp + 0x60], r8","lea rbx, [r15 + rdx]","mov qword ptr [rsp + 0x58], rcx","mov dword ptr [rsp + 0x50], r10d",je 0xd97e,"mov rdi, r15","mov esi, 0x20","mov r15, rbx",call 0x2c00,"movzx r9d, byte ptr [rsp + 0x68]","mov r11, qword ptr [rsp + 0x70]","mov r8, qword ptr [rsp + 0x60]","mov rcx, qword ptr [rsp + 0x58]","mov r10d, dword ptr [rsp + 0x50]","mov byte ptr [r15], r9b","mov r14, r11","add r15, 1","test r15, r15",je 0xcca4,"mov rdx, r8","mov rdi, r15","mov esi, 0x30","mov qword ptr [rsp + 0x60], rcx","mov dword ptr [rsp + 0x58], r10d","mov qword ptr [rsp + 0x50], r8",call 0x2c00,"mov r8, qword ptr [rsp + 0x50]","mov rcx, qword ptr [rsp + 0x60]","mov r10d, dword ptr [rsp + 0x58]","add r15, r8","add r13, r8","mov rdx, r12","xor r8d, r8d","sub rdx, r13","xor ebx, ebx","cmp rcx, r8","mov r9, r8","cmovae r9, rcx","cmp r9, rdx",jae 0xc1f8,"test r15, r15",je 0xc3ad,"test r10d, r10d",jne 0xcd11,"cmp rcx, r8",jae 0xcd11,"movsxd rdx, ebx","mov qword ptr [rsp + 0x50], rcx","sub rdx, rcx","cmp dword ptr [rsp + 0x20], 0x30","mov qword ptr [rsp + 0x20], r9","lea rbx, [r15 + rdx]",je 0xd648,"mov rdi, r15","mov esi, 0x20","mov r15, rbx",call 0x2c00,"mov rcx, qword ptr [rsp + 0x50]","mov r9, qword ptr [rsp + 0x20]","cmp byte ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x20], r9","mov rdx, rcx","mov qword ptr [rsp + 0x18], rcx","mov rsi, rbp","mov rdi, r15",je 0xd418,call 0xc0c0,"mov rcx, qword ptr [rsp + 0x18]","mov r9, qword ptr [rsp + 0x20]",jmp 0xc561,"lea rax, [rip + 0x55e8]","mov qword ptr [rsp + 0x50], rax",jmp 0xc650,"mov rax, qword ptr [rsp + 8]","mov rdi, qword ptr [rsp + 0x30]","lea rsi, [rsp + 0x80]","mov qword ptr [rsp + 0x58], r11","lea rbp, [rsp + 0xd7]","movdqu xmm0, xmmword ptr [rax]","movaps xmmword ptr [rsp + 0x80], xmm0","movdqu xmm0, xmmword ptr [rax + 0x10]","movaps xmmword ptr [rsp + 0x90], xmm0","movdqu xmm0, xmmword ptr [rax + 0x20]","mov rax, qword ptr [rax + 0x30]","movaps xmmword ptr [rsp + 0xa0], xmm0","mov qword ptr [rsp + 0xb0], rax",call 0xb8f0,"mov r11, qword ptr [rsp + 0x58]","mov rsi, rax","mov rcx, rax","lea rax, [rsp + 0xc0]","mov edi, 0x30","mov qword ptr [rsp + 0x50], rax",nop word ptr [rax + rax],"movabs rax, 0x6666666666666667",imul rcx,"mov rax, rcx","sar rax, 0x3f","sar rdx, 2","sub rdx, rax","mov rax, rdx","lea rdx, [rdx + rdx*4]","add rdx, rdx","sub rcx, rdx","mov rdx, rcx","mov rcx, rax","mov eax, edi","sub eax, edx","add edx, 0x30","test rsi, rsi","cmovs edx, eax","sub rbp, 1","test rcx, rcx","mov byte ptr [rbp], dl",jne 0xcdd0,"test ebx, ebx","mov r10d, 1","cmovg r10d, ebx","test rsi, rsi",js 0xd2f0,"mov rax, qword ptr [rsp + 0x50]","mov rdx, r12","sub rdx, r13","lea rcx, [rax + 0x17]","sub rcx, rbp","cmp dword ptr [rsp + 0x20], 0x2d",je 0xce54,"mov r14d, r10d","sub r14d, ecx","test r14d, r14d",jg 0xd74b,"test ebx, ebx","mov r8d, 0","mov r14, r11","cmovns r8d, ebx","movsxd r8, r8d",jmp 0xccb2,"cmp ebp, 0x45",je 0xc300,"mov ecx, dword ptr [rsp + 0x4c]","mov eax, dword ptr [rsp + 0x20]","mov r10d, 2","cmp eax, 0x30",je 0xc850,"cmp eax, 0x2d",je 0xc850,"mov dword ptr [rsp + 0x20], 0x5f",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 2","mov ecx, dword ptr [rax + 0x10]","cmp ecx, -1",setl r9b,"add ecx, 1","xor esi, esi","xor r14d, r14d",jmp 0xc5f8,"test ebx, ebx","mov ebp, 0","mov eax, 1","cmovns ebp, ebx","movsxd rbp, ebp","test rbp, rbp","cmove rbp, rax","mov rax, r12","sub rax, r13","cmp rax, rbp",jbe 0xc1f8,"test r15, r15",je 0xcad2,"cmp ebx, 1",jle 0xcf32,"movsxd rdx, ebx","mov qword ptr [rsp + 0x18], r11","sub rdx, 1","cmp dword ptr [rsp + 0x20], 0x30","lea rbx, [r15 + rdx]",je 0xd93f,"mov rdi, r15","mov esi, 0x20","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x18]","mov byte ptr [r15], 0xa","add r15, 1",jmp 0xcad2,"xor eax, eax","test r8b, r8b",jne 0xd4f6,"mov r8d, eax","mov ecx, 0x70",jmp 0xc57c,"lea rax, [rip + 0x3717]","mov qword ptr [rsp + 0x50], rax",jmp 0xc650,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 2","mov ecx, dword ptr [rax]",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov ecx, dword ptr [rax + 8]",jmp 0xce78,"test ebp, ebp",jne 0xc300,"lea rax, [rip + 0x5381]","mov qword ptr [rsp + 0x50], rax",jmp 0xc650,"mov rax, qword ptr [rsp + 8]","mov edx, 0x92492493","mov r10d, 1","mov eax, dword ptr [rax + 0x18]","lea ecx, [rax + 6]","mov dword ptr [rsp + 0x50], eax","mov eax, ecx",imul edx,"lea eax, [rdx + rcx]","mov edx, ecx","sar edx, 0x1f","sar eax, 2","sub eax, edx","lea edx, [rax*8]","sub edx, eax","sub ecx, edx","add ecx, 1",jmp 0xc850,"movzx ecx, byte ptr [r11 - 1]","lea r8, [r11 - 1]","mov rdx, r12","mov eax, 0","sub rdx, r13","test ebx, ebx","cmovns eax, ebx","cmp cl, 0x25",cdqe ,jne 0xc2f5,"test rax, rax","mov ecx, 1","mov r14, r8","cmovne rcx, rax","mov ebp, 1","mov r9, rcx",jmp 0xc33b,"cmp ebp, 0x45",je 0xd4ee,"mov rax, qword ptr [rsp + 8]","mov edx, 0x51eb851f","mov r10d, 2","mov esi, dword ptr [rax + 0x14]","mov eax, esi",imul edx,"mov eax, esi","sar eax, 0x1f","sar edx, 5","mov ecx, edx","sub ecx, eax","mov eax, esi","imul ecx, ecx, 0x64","sub eax, ecx","mov ecx, eax",jns 0xc850,neg eax,"add ecx, 0x64","cmp esi, 0xfffff893","cmovle ecx, eax",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 2","mov ecx, dword ptr [rax + 0xc]",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov ecx, dword ptr [rax + 0xc]",jmp 0xce78,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 3","mov ecx, dword ptr [rax + 0x1c]","cmp ecx, -1",setl r9b,"add ecx, 1","xor esi, esi","xor r14d, r14d",jmp 0xc5f8,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 2","mov ecx, dword ptr [rax + 8]",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov ecx, dword ptr [rsp + 0x4c]","mov r10d, 2",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 2","mov ecx, dword ptr [rax + 4]",jmp 0xc850,"cmp ebp, 0x45",je 0xc300,"cmp ebx, -1",je 0xd71b,"cmp ebx, 8",jg 0xd9de,"mov ecx, dword ptr [rsp + 0x518]","mov esi, ebx","mov r8d, 0x66666667",nop dword ptr [rax],"mov eax, ecx","add esi, 1","sar ecx, 0x1f",imul r8d,"sar edx, 2","sub edx, ecx","cmp esi, 9","mov ecx, edx",jne 0xd158,"mov r10d, ebx",jmp 0xc850,"mov eax, 1",jmp 0xcf41,"movzx edi, byte ptr [rsp + 0x18]","test r8b, r8b","mov eax, 0","mov qword ptr [rsp + 0x50], r11","mov byte ptr [rsp + 0x58], r8b","cmovne edi, eax","mov byte ptr [rsp + 0x18], dil","mov rdi, qword ptr [rsp + 0x40]",call 0x2b10,"test ebx, ebx","mov rbp, rax","mov eax, 0","cmovns eax, ebx","mov rdx, r12",cdqe ,"cmp rbp, rax","mov r14, rax","cmovae r14, rbp","sub rdx, r13","cmp rdx, r14",jbe 0xc1f8,"test r15, r15","mov r11, qword ptr [rsp + 0x50]",je 0xc6c4,"cmp rbp, rax","movzx r8d, byte ptr [rsp + 0x58]",jae 0xd225,"movsxd rdx, ebx","sub rdx, rbp","cmp dword ptr [rsp + 0x20], 0x30","lea rbx, [r15 + rdx]",je 0xd959,"mov rdi, r15","mov esi, 0x20","mov qword ptr [rsp + 0x50], r11","mov byte ptr [rsp + 0x20], r8b","mov r15, rbx",call 0x2c00,"movzx r8d, byte ptr [rsp + 0x20]","mov r11, qword ptr [rsp + 0x50]","test r8b, r8b",jne 0xd89a,"cmp byte ptr [rsp + 0x18], 0","mov rdx, rbp","mov qword ptr [rsp + 0x18], r11","mov rsi, qword ptr [rsp + 0x40]","mov rdi, r15",je 0xd88b,call 0xc0c0,"mov r11, qword ptr [rsp + 0x18]","add r15, rbp",jmp 0xc6c4,"cmp ebp, 0x45",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 1","mov ecx, dword ptr [rax + 0x18]",jmp 0xc850,"cmp ebp, 0x45",je 0xd4ee,"cmp ebp, 0x4f",je 0xc300,"mov rax, qword ptr [rsp + 8]","mov r10d, 4","mov ecx, dword ptr [rax + 0x14]","cmp ecx, 0xfffff894",setl r9b,"add ecx, 0x76c","xor esi, esi","xor r14d, r14d",nop dword ptr [rax],"test r9b, r9b",je 0xcb10,neg ecx,jmp 0xcb10,"movzx eax, byte ptr [rsp + 0x18]","test r8b, r8b","cmovne eax, r8d","test ebp, ebp",jne 0xd732,"mov ecx, edi","mov byte ptr [rsp + 0x18], al",jmp 0xc448,"xor r10d, r10d",jmp 0xc911,nop word ptr [rax + rax],"cmp dword ptr [rsp + 0x20], 0x2d","mov r9d, 0x2d","mov ecx, 0x2d",jne 0xcb94,"test ebx, ebx","mov r8d, 0","mov r14d, 1","cmovns r8d, ebx","mov rax, r12","movsxd r8, r8d","test r8, r8","cmovne r14, r8","sub rax, r13","cmp rax, r14",jbe 0xc1f8,"test r15, r15",je 0xd393,"test r10d, r10d",jne 0xd38c,"cmp r8, 1",jbe 0xd38c,"movsxd r9, ebx","mov rdi, r15","mov esi, 0x20","sub r9, 1","mov qword ptr [rsp + 0x70], r11","mov byte ptr [rsp + 0x68], cl","mov rdx, r9","mov qword ptr [rsp + 0x60], r8","mov dword ptr [rsp + 0x58], r10d","mov qword ptr [rsp + 0x20], r9",call 0x2c00,"mov r9, qword ptr [rsp + 0x20]","movzx ecx, byte ptr [rsp + 0x68]","mov r11, qword ptr [rsp + 0x70]","mov r8, qword ptr [rsp + 0x60]","mov r10d, dword ptr [rsp + 0x58]","add r15, r9","mov byte ptr [r15], cl","add r15, 1","mov rcx, qword ptr [rsp + 0x50]","add r13, r14","mov rdx, r12","sub rdx, r13","mov r14, r11","mov dword ptr [rsp + 0x20], 0x2d","add rcx, 0x17","sub rcx, rbp",jmp 0xccb2,nop dword ptr [rax + rax],"mov rdx, rcx","add rsi, 1","mov rdi, r15","mov qword ptr [rsp + 0x18], rcx",call 0x2c90,"mov r9, qword ptr [rsp + 0x20]","mov rcx, qword ptr [rsp + 0x18]",jmp 0xc561,nop dword ptr [rax + rax],"mov rsi, qword ptr [rsp + 0x50]","mov rdx, rcx","mov rdi, r15","mov qword ptr [rsp + 0x20], r9","mov qword ptr [rsp + 0x18], rcx","add rsi, 1",call 0xc070,"mov rcx, qword ptr [rsp + 0x18]","mov r9, qword ptr [rsp + 0x20]",jmp 0xc561,nop dword ptr [rax],call 0x2c90,"mov r9, qword ptr [rsp + 0x20]","mov rcx, qword ptr [rsp + 0x18]",jmp 0xc561,"cmp rbp, rax",jae 0xd46a,"movsxd rdx, ebx","sub rdx, rbp","cmp dword ptr [rsp + 0x20], 0x30","lea rbx, [r15 + rdx]",je 0xd8dc,"mov rdi, r15","mov esi, 0x20","mov qword ptr [rsp + 0x58], r11","mov qword ptr [rsp + 0x20], r10","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x58]","mov r10, qword ptr [rsp + 0x20]","mov eax, dword ptr [rsp + 0x518]","mov qword ptr [rsp + 0x20], r11","mov rdi, r15","mov rsi, r10","add r15, rbp",push rax,push qword ptr [rsp + 0x38],"mov r9, qword ptr [rsp + 0x48]","mov r8d, dword ptr [rsp + 0x28]","mov rcx, qword ptr [rsp + 0x18]","mov rdx, qword ptr [rsp + 0x60]",call 0xc110,pop rdi,pop r8,"mov r11, qword ptr [rsp + 0x20]",jmp 0xc6c4,"mov rdi, r15","mov esi, 0x30","mov r15, rbp",call 0x2c00,"movzx r8d, byte ptr [rsp + 0x20]","mov rcx, qword ptr [rsp + 0x58]","mov r9, qword ptr [rsp + 0x60]",jmp 0xc525,"mov rdi, r15","mov esi, 0x30","mov r15, rbx",call 0x2c00,"mov r8, qword ptr [rsp + 0x20]","mov r9, qword ptr [rsp + 0x50]",jmp 0xc387,"xor r10d, r10d",jmp 0xc60c,"mov ecx, 0x70","mov byte ptr [rsp + 0x18], 0",jmp 0xc57c,"xor r9d, r9d","movsxd rcx, r14d","cmp rcx, rdx",jae 0xc1f8,"test r15, r15",je 0xd555,"mov rdx, rcx","mov rdi, r15","mov esi, 0x20","mov qword ptr [rsp + 0x68], r11","mov byte ptr [rsp + 0x60], r9b","mov dword ptr [rsp + 0x58], r10d","mov qword ptr [rsp + 0x20], rcx",call 0x2c00,"mov rcx, qword ptr [rsp + 0x20]","movzx r9d, byte ptr [rsp + 0x60]","mov r11, qword ptr [rsp + 0x68]","mov r10d, dword ptr [rsp + 0x58]","add r15, rcx","mov eax, ebx","add r13, rcx","mov rdx, r12","sub eax, r14d","cmp r14d, ebx","mov ebx, 0","cmovl ebx, eax","sub rdx, r13","test r9b, r9b",jne 0xd679,"mov rax, qword ptr [rsp + 0x50]","movsxd r8, ebx","mov r14, r11","mov dword ptr [rsp + 0x20], 0x5f","add rax, 0x17","sub rax, rbp","mov rcx, rax",jmp 0xccb2,"test ebx, ebx","mov r8d, 0","mov eax, 1","cmovns r8d, ebx","movsxd r8, r8d","test r8, r8","cmovne rax, r8","cmp rax, rdx","mov r14, rax",jae 0xc1f8,"test r15, r15",je 0xd637,"test r10d, r10d",jne 0xd630,"cmp r8, 1",jbe 0xd630,"movsxd rdx, ebx","mov qword ptr [rsp + 0x78], r11","mov byte ptr [rsp + 0x70], r9b","sub rdx, 1","cmp dword ptr [rsp + 0x20], 0x30","mov qword ptr [rsp + 0x68], rcx","lea rax, [r15 + rdx]","mov qword ptr [rsp + 0x60], r8","mov dword ptr [rsp + 0x58], r10d","mov qword ptr [rsp + 0x50], rax",je 0xd9ad,"mov rdi, r15","mov esi, 0x20",call 0x2c00,"movzx r9d, byte ptr [rsp + 0x70]","mov r15, qword ptr [rsp + 0x50]","mov r11, qword ptr [rsp + 0x78]","mov rcx, qword ptr [rsp + 0x68]","mov r8, qword ptr [rsp + 0x60]","mov r10d, dword ptr [rsp + 0x58]","mov byte ptr [r15], r9b","add r15, 1","add r13, r14","mov rdx, r12","mov r14, r11","sub rdx, r13",jmp 0xccb2,"mov rdi, r15","mov esi, 0x30","mov r15, rbx",call 0x2c00,"mov r9, qword ptr [rsp + 0x20]","mov rcx, qword ptr [rsp + 0x50]",jmp 0xcd11,"mov ecx, 0x2b",jmp 0xd306,"mov r14, r11",jmp 0xc1d2,"movsxd r8, ebx","mov r14d, 1","test r8, r8","cmovne r14, r8","cmp r14, rdx",jae 0xc1f8,"test r15, r15",je 0xd6f3,"test r10d, r10d",jne 0xd6ec,"cmp r8, 1",jbe 0xd6ec,"lea rcx, [r8 - 1]","mov rdi, r15","mov esi, 0x20","mov qword ptr [rsp + 0x70], r11","mov byte ptr [rsp + 0x68], r9b","mov rdx, rcx","mov dword ptr [rsp + 0x60], r10d","mov qword ptr [rsp + 0x58], r8","mov qword ptr [rsp + 0x20], rcx",call 0x2c00,"mov rcx, qword ptr [rsp + 0x20]","movzx r9d, byte ptr [rsp + 0x68]","mov r11, qword ptr [rsp + 0x70]","mov r10d, dword ptr [rsp + 0x60]","mov r8, qword ptr [rsp + 0x58]","add r15, rcx","mov byte ptr [r15], r9b","add r15, 1","mov rax, qword ptr [rsp + 0x50]","add r13, r14","mov rdx, r12","sub rdx, r13","mov r14, r11","mov dword ptr [rsp + 0x20], 0x5f","add rax, 0x17","sub rax, rbp","mov rcx, rax",jmp 0xccb2,"mov ecx, dword ptr [rsp + 0x518]","mov ebx, 9","mov r10d, 9",jmp 0xc850,"mov byte ptr [rsp + 0x18], al",jmp 0xc300,"mov r14, r11","mov r8, r11","mov ebp, 1",jmp 0xc33b,"cmp dword ptr [rsp + 0x20], 0x5f",je 0xd505,"movsxd rax, r10d","cmp rax, rdx",jae 0xc1f8,"movsxd r8, r14d","mov r14, r11",jmp 0xcc6e,"imul eax, r14d, 0x2710","mov r10d, 9","mov r14d, 1","imul esi, esi, 0x64","add eax, esi","mov esi, 0x14","add ecx, eax",jmp 0xc5f8,"sub r10d, 1","mov edx, 0x16d","test r10b, 3",jne 0xd7de,"mov eax, r10d","mov edx, 0x51eb851f",imul edx,"mov eax, edx","mov edx, r10d","sar edx, 0x1f","sar eax, 5","sub eax, edx","mov edx, 0x16e","imul eax, eax, 0x64","cmp r10d, eax",jne 0xd7de,"mov eax, r10d","mov r8d, 0x190",cdq ,idiv r8d,"cmp edx, 1","sbb edx, edx",not edx,"add edx, 0x16e","add r9d, edx","mov edx, 0x92492493","mov r8d, r9d","sub r8d, r14d","mov r14d, 0xffffffff","add r8d, 0x17e","mov eax, r8d","sub r9d, r8d",imul edx,"lea eax, [rdx + r8]","mov edx, r8d","sar edx, 0x1f","sar eax, 2","sub eax, edx","lea edx, [rax*8]","sub edx, eax","lea r8d, [r9 + rdx + 3]",jmp 0xc7e0,"mov eax, 0xfffff894","lea ecx, [rsi + r14 + 0x76c]","mov r10d, 4","sub eax, r14d","cmp esi, eax",setl r9b,"xor esi, esi","xor r14d, r14d",jmp 0xc5f8,"mov eax, r8d","mov edx, 0x92492493","mov r10d, 2",imul edx,"lea ecx, [rdx + r8]","sar r8d, 0x1f","sar ecx, 2","sub ecx, r8d","add ecx, 1",jmp 0xc850,"imul ecx, r14d, 0x64","mov r10d, 6","mov r14d, 1","add ecx, esi","mov esi, 4",jmp 0xc5f8,call 0x2c90,"mov r11, qword ptr [rsp + 0x18]",jmp 0xd253,"mov rsi, qword ptr [rsp + 0x40]","mov rdx, rbp","mov rdi, r15","mov qword ptr [rsp + 0x18], r11",call 0xc070,"mov r11, qword ptr [rsp + 0x18]",jmp 0xd253,"lea rcx, [r11 + 2]","mov r10d, 1","mov rdx, rcx","add rcx, 1","movzx eax, byte ptr [rcx - 1]","add r10, 1","cmp al, 0x3a",jne 0xc906,jmp 0xd8c3,"mov rdi, r15","mov esi, 0x30","mov qword ptr [rsp + 0x20], r10","mov r15, rbx",call 0x2c00,"mov r10, qword ptr [rsp + 0x20]","mov r11, qword ptr [rsp + 0x58]",jmp 0xd46a,"movzx ecx, byte ptr [r11]","mov r8, r11",jmp 0xcff9,"imul ecx, r14d, 0x64","xor esi, esi","mov r14d, 1","mov r10d, 5","add ecx, eax",jmp 0xc5f8,"mov rdi, r15","mov esi, 0x30","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x18]",jmp 0xcaca,"mov rdi, r15","mov esi, 0x30","mov r15, rbx",call 0x2c00,"mov r11, qword ptr [rsp + 0x18]",jmp 0xcf32,"mov rdi, r15","mov esi, 0x30","mov byte ptr [rsp + 0x20], r8b","mov r15, rbx",call 0x2c00,"movzx r8d, byte ptr [rsp + 0x20]","mov r11, qword ptr [rsp + 0x50]",jmp 0xd225,"mov rdi, r15","mov esi, 0x30","mov r15, rbx",call 0x2c00,"mov r10d, dword ptr [rsp + 0x50]","mov rcx, qword ptr [rsp + 0x58]","mov r8, qword ptr [rsp + 0x60]","movzx r9d, byte ptr [rsp + 0x68]","mov r11, qword ptr [rsp + 0x70]",jmp 0xcc64,"mov rdi, r15","mov esi, 0x30",call 0x2c00,"mov r15, qword ptr [rsp + 0x50]","mov r10d, dword ptr [rsp + 0x58]","mov r8, qword ptr [rsp + 0x60]","mov rcx, qword ptr [rsp + 0x68]","movzx r9d, byte ptr [rsp + 0x70]","mov r11, qword ptr [rsp + 0x78]",jmp 0xd630,"mov ecx, dword ptr [rsp + 0x518]",jmp 0xd16f,call 0x2b30,"xor r10d, r10d",jmp 0xc61c,nop word ptr [rax + rax],"sub rsp, 0x18","mov rax, qword ptr fs:[0x28]","mov qword ptr [rsp + 8], rax","xor eax, eax","mov byte ptr [rsp + 7], 0",push r9,push r8,"xor r8d, r8d","lea r9, [rsp + 0x17]",call 0xc110,pop rdx,pop rcx,"mov rdx, qword ptr [rsp + 8]","xor rdx, qword ptr fs:[0x28]",jne 0xda41,"add rsp, 0x18",ret ,call 0x2b30,nop word ptr cs:[rax + rax],push r12,push rbp,push rbx,"mov rbx, rdi",call 0x2cc0,"test eax, eax","mov rdi, rbx",js 0xdab7,call 0x2d40,"test eax, eax",jne 0xda98,"mov rdi, rbx",call 0xdad0,"test eax, eax",je 0xdab4,call 0x2a50,"mov r12d, dword ptr [rax]","mov rdi, rbx","mov rbp, rax",call 0x2ad0,"test r12d, r12d",jne 0xdac0,pop rbx,pop rbp,pop r12,ret ,nop dword ptr [rax],"mov rdi, rbx",call 0x2cc0,"xor esi, esi","mov edx, 1","mov edi, eax",call 0x2bc0,"cmp rax, -1",jne 0xda6c,"mov rdi, rbx",pop rbx,pop rbp,pop r12,jmp 0x2ad0,"mov dword ptr [rbp], r12d","mov eax, 0xffffffff",jmp 0xda90,nop dword ptr [rax + rax],"test rdi, rdi",push rbx,"mov rbx, rdi",je 0xdaea,call 0x2d40,"test eax, eax",je 0xdaea,"test dword ptr [rbx], 0x100",jne 0xdaf8,"mov rdi, rbx",pop rbx,jmp 0x2d00,nop dword ptr [rax + rax],"mov rdi, rbx","mov edx, 1","xor esi, esi",call 0xdb10,"mov rdi, rbx",pop rbx,jmp 0x2d00,"mov rax, qword ptr [rdi + 8]","cmp qword ptr [rdi + 0x10], rax",je 0xdb20,jmp 0x2dd0,nop ,"mov rax, qword ptr [rdi + 0x20]","cmp qword ptr [rdi + 0x28], rax",jne 0xdb1a,"cmp qword ptr [rdi + 0x48], 0",jne 0xdb1a,push r12,push rbp,"mov r12d, edx",push rbx,"mov rbp, rsi","mov rbx, rdi",call 0x2cc0,"mov edx, r12d","mov rsi, rbp","mov edi, eax",call 0x2bc0,"cmp rax, -1",je 0xdb62,"and dword ptr [rbx], 0xffffffef","mov qword ptr [rbx + 0x90], rax","xor eax, eax",pop rbx,pop rbp,pop r12,ret ,nop word ptr [rax + rax],"or dword ptr [rdi], 0x20",ret ,nop word ptr cs:[rax + rax],nop ,push rbp,"mov rbp, rsp",push r15,push r14,push r13,push r12,"lea r14, [rbp - 0x3b0]",push rbx,"mov rbx, rdx","mov r12, rcx","mov rdx, r14","sub rsp, 0x408","mov qword ptr [rbp - 0x418], rsi","lea rsi, [rbp - 0x2c0]","mov qword ptr [rbp - 0x3e8], rdi","mov rdi, rbx","mov qword ptr [rbp - 0x410], r14","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 0x38], rax","xor eax, eax","mov qword ptr [rbp - 0x408], rsi",call 0xeea0,"test eax, eax",js 0xea48,"mov rsi, r14","mov rdi, r12",call 0xeca0,"test eax, eax",js 0xeab0,"mov rax, qword ptr [rbp - 0x2b0]","mov rdx, -1","add rax, 7","cmp rax, 6","cmovbe rax, rdx","add rax, qword ptr [rbp - 0x2a8]",jb 0xdd20,"mov rdi, rax","xor r8d, r8d","add rdi, 6",setb r8b,jb 0xdd20,"cmp rdi, 0xf9f",jbe 0xdda0,"cmp rdi, -1","mov qword ptr [rbp - 0x3c8], r8",je 0xdd20,call 0x2cf0,"test rax, rax","mov qword ptr [rbp - 0x3d8], rax",je 0xdd20,"mov r8, qword ptr [rbp - 0x3c8]","mov qword ptr [rbp - 0x420], rax","xor r12d, r12d","cmp qword ptr [rbp - 0x3e8], 0",je 0xdc8c,"mov rax, qword ptr [rbp - 0x418]","mov r12, qword ptr [rax]","mov r13, qword ptr [rbp - 0x2b8]","lea rax, [rbp - 0x3bc]","mov r15, qword ptr [rbp - 0x3e8]","mov qword ptr [rbp - 0x400], 0","mov qword ptr [rbp - 0x3f0], rax","mov rax, rbx","mov rbx, r8","mov rcx, qword ptr [r13]","mov r8, rax","cmp rcx, r8",je 0xe64d,"sub rcx, r8","mov rax, rbx","add rax, rcx","mov r14, rax",jae 0xddd0,"cmp r12, -1",je 0xe7b0,call 0x2a50,"mov qword ptr [rbp - 0x3c8], rax","cmp r15, qword ptr [rbp - 0x3e8]",je 0xdd03,"test r15, r15",jne 0xe7e0,"mov rax, qword ptr [rbp - 0x420]","test rax, rax",je 0xdd20,"mov rdi, rax",call 0x2a10,jmp 0xdd2c,nop dword ptr [rax],call 0x2a50,"mov qword ptr [rbp - 0x3c8], rax","mov rax, qword ptr [rbp - 0x408]","mov rdi, qword ptr [rbp - 0x2b8]","add rax, 0x20","cmp rdi, rax",je 0xdd48,call 0x2a10,"mov rax, qword ptr [rbp - 0x410]","mov rdi, qword ptr [rbp - 0x3a8]","add rax, 0x10","cmp rdi, rax",je 0xdd64,call 0x2a10,"mov rax, qword ptr [rbp - 0x3c8]","xor r15d, r15d","mov dword ptr [rax], 0xc","mov rdi, qword ptr [rbp - 0x38]","xor rdi, qword ptr fs:[0x28]","mov rax, r15",jne 0xec77,"lea rsp, [rbp - 0x28]",pop rbx,pop r12,pop r13,pop r14,pop r15,pop rbp,ret ,nop dword ptr [rax],"add rax, 0x24","mov qword ptr [rbp - 0x420], 0","and rax, 0xfffffffffffffff0","sub rsp, rax","lea rax, [rsp + 0xf]","and rax, 0xfffffffffffffff0","mov qword ptr [rbp - 0x3d8], rax",jmp 0xdc75,nop dword ptr [rax + rax],"cmp r12, rax",jae 0xde3c,"test r12, r12",jne 0xe6f0,"cmp rax, 0xc",ja 0xe702,"mov r12d, 0xc","cmp r15, qword ptr [rbp - 0x3e8]",sete dl,"test r15, r15",je 0xe728,"test dl, dl",jne 0xe728,"mov rsi, r12","mov rdi, r15","mov qword ptr [rbp - 0x3d0], r8","mov qword ptr [rbp - 0x3c8], rcx",call 0x2d50,"test rax, rax","mov rcx, qword ptr [rbp - 0x3c8]","mov r8, qword ptr [rbp - 0x3d0]",je 0xe7cb,"mov r15, rax","lea rdi, [r15 + rbx]","mov rdx, rcx","mov rsi, r8",call 0x2c90,"mov rax, qword ptr [rbp - 0x400]","cmp qword ptr [rbp - 0x2c0], rax",je 0xeafb,"movzx edx, byte ptr [r13 + 0x48]","mov rax, qword ptr [r13 + 0x50]","cmp dl, 0x25",je 0xe608,"cmp rax, -1",je 0xeaa6,"mov r8, qword ptr [rbp - 0x3a8]","shl rax, 5","add rax, r8","cmp dl, 0x6e","mov edi, dword ptr [rax]","mov dword ptr [rbp - 0x3d0], edi",je 0xe660,"mov eax, dword ptr [r13 + 0x10]","mov rdi, qword ptr [rbp - 0x3d8]","test al, 1","mov byte ptr [rdi], 0x25","lea rbx, [rdi + 1]",je 0xdebf,"mov rdi, qword ptr [rbp - 0x3d8]","lea rbx, [rdi + 2]","mov byte ptr [rdi + 1], 0x27","test al, 2",je 0xdeca,"mov byte ptr [rbx], 0x2d","add rbx, 1","test al, 4",je 0xded5,"mov byte ptr [rbx], 0x2b","add rbx, 1","test al, 8",je 0xdee0,"mov byte ptr [rbx], 0x20","add rbx, 1","test al, 0x10",je 0xdeeb,"mov byte ptr [rbx], 0x23","add rbx, 1","test al, 0x40",je 0xdef6,"mov byte ptr [rbx], 0x49","add rbx, 1","test al, 0x20",je 0xdf01,"mov byte ptr [rbx], 0x30","add rbx, 1","mov rsi, qword ptr [r13 + 0x18]","mov rdx, qword ptr [r13 + 0x20]","cmp rsi, rdx",je 0xdf3e,"mov rcx, rdx","mov rdi, rbx","mov qword ptr [rbp - 0x3e0], r8","sub rcx, rsi","mov rdx, rcx","mov qword ptr [rbp - 0x3c8], rcx",call 0x2c90,"mov rcx, qword ptr [rbp - 0x3c8]","mov r8, qword ptr [rbp - 0x3e0]","add rbx, rcx","mov rsi, qword ptr [r13 + 0x30]","mov rdx, qword ptr [r13 + 0x38]","cmp rsi, rdx",je 0xdf7b,"mov rcx, rdx","mov rdi, rbx","mov qword ptr [rbp - 0x3e0], r8","sub rcx, rsi","mov rdx, rcx","mov qword ptr [rbp - 0x3c8], rcx",call 0x2c90,"mov rcx, qword ptr [rbp - 0x3c8]","mov r8, qword ptr [rbp - 0x3e0]","add rbx, rcx","mov edi, dword ptr [rbp - 0x3d0]","cmp edi, 0x10",ja 0xdfb3,"mov eax, 1","mov ecx, edi","shl rax, cl","test eax, 0x14180",jne 0xdfac,"test ah, 0x10",jne 0xe8e0,"test ah, 6",je 0xdfb3,"mov byte ptr [rbx], 0x6c","add rbx, 1","mov byte ptr [rbx], 0x6c","add rbx, 1","movzx eax, byte ptr [r13 + 0x48]","mov byte ptr [rbx + 1], 0","mov byte ptr [rbx], al","mov rax, qword ptr [r13 + 0x28]","cmp rax, -1",je 0xe6e0,"shl rax, 5","add rax, r8","cmp dword ptr [rax], 5",jne 0xeaa6,"mov eax, dword ptr [rax + 0x10]","mov dword ptr [rbp - 0x3e0], 1","mov dword ptr [rbp - 0x3b8], eax","mov rax, qword ptr [r13 + 0x40]","cmp rax, -1",je 0xe024,"shl rax, 5","add r8, rax","cmp dword ptr [r8], 5",jne 0xeaa6,"mov eax, dword ptr [rbp - 0x3e0]","mov edx, dword ptr [r8 + 0x10]","mov dword ptr [rbp + rax*4 - 0x3b8], edx","lea eax, [rax + 1]","mov dword ptr [rbp - 0x3e0], eax","mov rax, r14","xor edx, edx","add rax, 2",jb 0xec7c,"cmp r12, rax",jae 0xe083,"test r12, r12",jne 0xe848,"cmp rax, 0xc",ja 0xe860,"mov r12d, 0xc","cmp r15, qword ptr [rbp - 0x3e8]",sete dl,"test r15, r15",je 0xe890,"test dl, dl",jne 0xe890,"mov rsi, r12","mov rdi, r15",call 0x2d50,"test rax, rax",je 0xdce5,"mov r15, rax","mov byte ptr [r15 + r14], 0",call 0x2a50,"mov qword ptr [rbp - 0x3c8], rax","mov eax, dword ptr [rax]","mov qword ptr [rbp - 0x3f8], rbx","mov dword ptr [rbp - 0x424], eax",nop dword ptr [rax + rax],"mov rax, qword ptr [rbp - 0x3c8]","mov rbx, r12","mov r10d, 0x7fffffff","sub rbx, r14","mov dword ptr [rbp - 0x3bc], 0xffffffff","cmp rbx, 0x7fffffff","mov dword ptr [rax], 0","mov eax, dword ptr [rbp - 0x3d0]","cmovbe r10, rbx","cmp eax, 0x11",ja 0xeaa6,"lea rsi, [rip + 0x4438]","movsxd rax, dword ptr [rsi + rax*4]","add rax, rsi",jmp rax,nop dword ptr [rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","mov r9, qword ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",je 0xe5e8,"cmp eax, 2",je 0xe5d0,"sub rsp, 8",push qword ptr [rbp - 0x3f0],"mov r8, qword ptr [rbp - 0x3d8]","mov rsi, r10","mov rcx, -1","mov edx, 1","xor eax, eax","mov qword ptr [rbp - 0x430], r10",call 0x2a00,pop rsi,pop rdi,"mov r10, qword ptr [rbp - 0x430]","mov ecx, dword ptr [rbp - 0x3bc]","test ecx, ecx",js 0xe2a4,"movsxd rdx, ecx","cmp rdx, r10",jae 0xe182,"add rdx, r15","cmp byte ptr [rdx + r14], 0",jne 0xeaa6,"cmp ecx, eax",jge 0xe18e,"mov dword ptr [rbp - 0x3bc], eax","mov ecx, eax","lea eax, [rcx + 1]","cmp rax, r10",jb 0xe9b0,"cmp rbx, 0x7ffffffe",ja 0xe9d0,"lea rsi, [r12 + r12]","lea edx, [rcx + 2]","test r12, r12","mov rax, -1","cmovns rax, rsi","add rdx, r14",jb 0xec68,"cmp rax, rdx","cmovb rax, rdx","cmp r12, rax",jae 0xe0a8,"test r12, r12",js 0xdcf1,"cmp rsi, rax","mov r12, rsi",jae 0xe1f3,"cmp rax, -1",je 0xdcf1,"mov r12, rax","cmp r15, qword ptr [rbp - 0x3e8]",sete bl,"test r15, r15",je 0xe590,"test bl, bl",jne 0xe590,"mov rsi, r12","mov rdi, r15",call 0x2d50,"test rax, rax",je 0xdcf1,"mov r15, rax",jmp 0xe0a8,nop word ptr [rax + rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","mov r9d, dword ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",je 0xe490,"cmp eax, 2",je 0xe4d8,"sub rsp, 8",push qword ptr [rbp - 0x3f0],"mov r8, qword ptr [rbp - 0x3d8]","mov rcx, -1","mov edx, 1","mov rsi, r10","xor eax, eax","mov qword ptr [rbp - 0x430], r10",call 0x2a00,pop rdx,pop rcx,"mov ecx, dword ptr [rbp - 0x3bc]","mov r10, qword ptr [rbp - 0x430]","test ecx, ecx",jns 0xe16c,"mov rdi, qword ptr [rbp - 0x3f8]","cmp byte ptr [rdi + 1], 0",jne 0xe5f8,"test eax, eax",jns 0xe186,"mov rax, qword ptr [rbp - 0x3c8]","mov ebx, dword ptr [rax]","test ebx, ebx",jne 0xe2e8,"movzx eax, byte ptr [r13 + 0x48]","mov ebx, 0x16","and eax, 0xffffffef","cmp al, 0x63","mov eax, 0x54","cmove ebx, eax",nop dword ptr [rax],"cmp r15, qword ptr [rbp - 0x3e8]",je 0xe2fa,"test r15, r15",jne 0xea8c,"mov rax, qword ptr [rbp - 0x420]","test rax, rax",je 0xe30e,"mov rdi, rax",call 0x2a10,"mov rax, qword ptr [rbp - 0x408]","mov rdi, qword ptr [rbp - 0x2b8]","add rax, 0x20","cmp rdi, rax",je 0xe32a,call 0x2a10,"mov rax, qword ptr [rbp - 0x410]","mov rdi, qword ptr [rbp - 0x3a8]","add rax, 0x10","cmp rdi, rax",je 0xe346,call 0x2a10,"mov rax, qword ptr [rbp - 0x3c8]","xor r15d, r15d","mov dword ptr [rax], ebx",jmp 0xdd74,nop word ptr [rax + rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]",fld xword ptr [rax + 0x10],"mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",je 0xe990,"cmp eax, 2",jne 0xe830,"mov eax, dword ptr [rbp - 0x3b4]","sub rsp, 8",push qword ptr [rbp - 0x3f0],"mov r9d, dword ptr [rbp - 0x3b8]","mov r8, qword ptr [rbp - 0x3d8]","mov rsi, r10","sub rsp, 0x18","mov rcx, -1","mov edx, 1",fstp xword ptr [rsp + 8],push rax,"xor eax, eax","mov qword ptr [rbp - 0x430], r10",call 0x2a00,"add rsp, 0x30","mov r10, qword ptr [rbp - 0x430]",jmp 0xe15e,nop word ptr [rax + rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","movsd xmm0, qword ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",je 0xe980,"cmp eax, 2",jne 0xe7f0,"mov eax, dword ptr [rbp - 0x3b4]",push qword ptr [rbp - 0x3f0],push rax,"mov r9d, dword ptr [rbp - 0x3b8]","mov r8, qword ptr [rbp - 0x3d8]","mov rsi, r10","mov rcx, -1","mov edx, 1","mov eax, 1","mov qword ptr [rbp - 0x430], r10",call 0x2a00,pop r8,"mov r10, qword ptr [rbp - 0x430]",pop r9,jmp 0xe15e,nop dword ptr [rax + rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","movzx r9d, word ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",jne 0xe256,nop ,push qword ptr [rbp - 0x3f0],push r9,"mov r9d, dword ptr [rbp - 0x3b8]",jmp 0xe269,nop dword ptr [rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","movsx r9d, word ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",je 0xe490,"cmp eax, 2",jne 0xe25f,nop dword ptr [rax],"sub rsp, 8",push qword ptr [rbp - 0x3f0],push r9,"mov eax, dword ptr [rbp - 0x3b4]",push rax,"mov r9d, dword ptr [rbp - 0x3b8]","mov r8, qword ptr [rbp - 0x3d8]","mov rsi, r10","mov rcx, -1","mov edx, 1","xor eax, eax","mov qword ptr [rbp - 0x430], r10",call 0x2a00,"add rsp, 0x20","mov r10, qword ptr [rbp - 0x430]",jmp 0xe15e,nop word ptr cs:[rax + rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","movzx r9d, byte ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",jne 0xe256,jmp 0xe490,nop dword ptr [rax],"mov rax, qword ptr [r13 + 0x50]","lea rdi, [r15 + r14]","shl rax, 5","add rax, qword ptr [rbp - 0x3a8]","movsx r9d, byte ptr [rax + 0x10]","mov eax, dword ptr [rbp - 0x3e0]","cmp eax, 1",jne 0xe256,jmp 0xe490,nop dword ptr [rax],"mov rdi, r12",call 0x2cf0,"test rax, rax","mov rcx, rax",je 0xdcf1,"test r14, r14",je 0xe658,"test bl, bl",je 0xe658,"mov rsi, r15","mov rdx, r14","mov rdi, rax",call 0x2c90,"mov r15, rax",jmp 0xe0a8,nop dword ptr [rax + rax],"sub rsp, 8",push qword ptr [rbp - 0x3f0],push r9,jmp 0xe4e4,nop dword ptr [rax],push qword ptr [rbp - 0x3f0],push r9,jmp 0xe498,nop dword ptr [rax],"mov byte ptr [rdi + 1], 0",jmp 0xe0a8,nop dword ptr [rax],"cmp rax, -1",jne 0xeaa6,"mov rax, r14","add rax, 1","mov rbx, rax",jae 0xe688,"cmp r12, -1",jne 0xdce5,"mov rbx, r12","mov byte ptr [r15 + r14], 0x25","mov r8, qword ptr [r13 + 8]","add r13, 0x58","mov rcx, qword ptr [r13]","add qword ptr [rbp - 0x400], 1","cmp rcx, r8",jne 0xdcc9,"mov r14, rbx",jmp 0xde4b,nop dword ptr [rax],"mov r15, rcx",jmp 0xe0a8,"mov edx, edi","sub edx, 0x12","cmp edx, 4",ja 0xeaa6,"lea rdi, [rip + 0x3ef7]","mov rax, qword ptr [rax + 0x10]","movsxd rdx, dword ptr [rdi + rdx*4]","add rdx, rdi",jmp rdx,nop word ptr [rax + rax],"cmp r12, rax",jae 0xe62b,"test r12, r12",jne 0xea60,"cmp rax, 0xc",ja 0xea72,"mov r12d, 0xc","cmp r15, qword ptr [rbp - 0x3e8]",sete dl,"test r15, r15",je 0xe920,"test dl, dl",jne 0xe920,"mov rsi, r12","mov rdi, r15",call 0x2d50,"test rax, rax",je 0xe7cb,"mov r15, rax",jmp 0xe62b,nop dword ptr [rax],"mov dword ptr [rbp - 0x3e0], 0",jmp 0xdfef,nop ,js 0xdce5,"add r12, r12","cmp r12, rax",jae 0xddee,"cmp rax, -1",je 0xdce5,"cmp r15, qword ptr [rbp - 0x3e8]","mov r12, rax",sete dl,"test r15, r15",jne 0xde01,nop word ptr [rax + rax],"mov rdi, r12","mov qword ptr [rbp - 0x3e0], r8","mov byte ptr [rbp - 0x3d0], dl","mov qword ptr [rbp - 0x3c8], rcx",call 0x2cf0,"test rax, rax","mov r9, rax","mov rcx, qword ptr [rbp - 0x3c8]","movzx edx, byte ptr [rbp - 0x3d0]","mov r8, qword ptr [rbp - 0x3e0]",je 0xdce5,"test rbx, rbx",je 0xe970,"test dl, dl",je 0xe970,"mov rsi, r15","mov rdx, rbx","mov rdi, rax","mov qword ptr [rbp - 0x3d0], r8","mov qword ptr [rbp - 0x3c8], rcx",call 0x2c90,"mov rcx, qword ptr [rbp - 0x3c8]","mov r15, rax","mov r8, qword ptr [rbp - 0x3d0]",jmp 0xde3c,nop dword ptr [rax + rax],"mov r14, r12",jmp 0xde3c,nop dword ptr [rax + rax],"mov qword ptr [rax], r14","mov rbx, r14",jmp 0xe630,call 0x2a50,"mov qword ptr [rbp - 0x3c8], rax",nop word ptr [rax + rax],"mov rdi, r15",call 0x2a10,jmp 0xdd03,nop dword ptr [rax],"mov r9, qword ptr [rbp - 0x3f0]","mov r8, qword ptr [rbp - 0x3d8]","mov rsi, r10","mov rcx, -1","mov edx, 1","mov eax, 1","mov qword ptr [rbp - 0x430], r10",call 0x2a00,"mov r10, qword ptr [rbp - 0x430]",jmp 0xe15e,nop word ptr [rax + rax],"sub rsp, 0x10","mov r9, qword ptr [rbp - 0x3f0]",fstp xword ptr [rsp],jmp 0xe131,nop dword ptr [rax + rax],js 0xdce5,"add r12, r12","cmp r12, rax",jae 0xe051,nop word ptr [rax + rax],"test rdx, rdx",jne 0xdce5,"cmp rax, -1",je 0xdce5,"cmp r15, qword ptr [rbp - 0x3e8]","mov r12, rax",sete dl,"test r15, r15",jne 0xe064,nop dword ptr [rax],"mov rdi, r12","mov byte ptr [rbp - 0x3c8], dl",call 0x2cf0,"test rax, rax","mov rcx, rax","movzx edx, byte ptr [rbp - 0x3c8]",je 0xdce5,"test r14, r14",je 0xea50,"test dl, dl",je 0xea50,"mov rsi, r15","mov rdx, r14","mov rdi, rax",call 0x2c90,"mov r15, rax",jmp 0xe083,nop dword ptr [rax + rax],"mov byte ptr [rbx], 0x4c","add rbx, 1",jmp 0xdfb3,nop dword ptr [rax],"mov byte ptr [rax], r14b","mov rbx, r14",jmp 0xe630,nop dword ptr [rax + rax],"mov dword ptr [rax], r14d","mov rbx, r14",jmp 0xe630,nop dword ptr [rax + rax],"mov word ptr [rax], r14w","mov rbx, r14",jmp 0xe630,nop dword ptr [rax],"mov rdi, r12","mov byte ptr [rbp - 0x3c8], dl",call 0x2cf0,"test rax, rax","mov rcx, rax","movzx edx, byte ptr [rbp - 0x3c8]",je 0xdce5,"test r14, r14",je 0xea84,"test dl, dl",je 0xea84,"mov rsi, r15","mov rdx, r14","mov rdi, rax",call 0x2c90,"mov r15, rax",jmp 0xe62b,nop dword ptr [rax + rax],"mov r15, r9",jmp 0xde3c,nop dword ptr [rax + rax],"sub rsp, 8",push qword ptr [rbp - 0x3f0],jmp 0xe425,nop ,"sub rsp, 8",push qword ptr [rbp - 0x3f0],"sub rsp, 0x10",fstp xword ptr [rsp],jmp 0xe4eb,nop word ptr cs:[rax + rax],"mov rax, qword ptr [rbp - 0x3c8]","mov edi, dword ptr [rbp - 0x424]","movsxd rbx, ecx","add rbx, r14","mov dword ptr [rax], edi",jmp 0xe630,nop word ptr [rax + rax],"cmp r15, qword ptr [rbp - 0x3e8]",je 0xe9e2,"test r15, r15",jne 0xea99,"mov rax, qword ptr [rbp - 0x420]","test rax, rax",je 0xe9f6,"mov rdi, rax",call 0x2a10,"mov rax, qword ptr [rbp - 0x408]","mov rdi, qword ptr [rbp - 0x2b8]","add rax, 0x20","cmp rdi, rax",je 0xea12,call 0x2a10,"mov rax, qword ptr [rbp - 0x410]","mov rdi, qword ptr [rbp - 0x3a8]","add rax, 0x10","cmp rdi, rax",je 0xea2e,call 0x2a10,"mov rax, qword ptr [rbp - 0x3c8]","xor r15d, r15d","mov dword ptr [rax], 0x4b",jmp 0xdd74,nop dword ptr [rax + rax],"xor r15d, r15d",jmp 0xdd74,"mov r15, rcx",jmp 0xe083,nop dword ptr [rax + rax],js 0xdce5,"add r12, r12","cmp r12, rax",jae 0xe6a6,"cmp rax, -1",je 0xdce5,"mov r12, rax",jmp 0xe6a6,"mov r15, rcx",jmp 0xe62b,"mov rdi, r15",call 0x2a10,jmp 0xe2fa,"mov rdi, r15",call 0x2a10,jmp 0xe9e2,call 0x2a40,nop dword ptr [rax + rax],"mov rax, qword ptr [rbp - 0x408]","mov rdi, qword ptr [rbp - 0x2b8]","add rax, 0x20","cmp rdi, rax",je 0xeacc,call 0x2a10,"mov rax, qword ptr [rbp - 0x410]","mov rdi, qword ptr [rbp - 0x3a8]","add rax, 0x10","cmp rdi, rax",je 0xeae8,call 0x2a10,call 0x2a50,"xor r15d, r15d","mov dword ptr [rax], 0x16",jmp 0xdd74,"mov rbx, r14","xor eax, eax","add rbx, 1",jb 0xec10,"cmp r12, rbx",jae 0xeb5c,"test r12, r12",jne 0xec49,"cmp rbx, 0xc",ja 0xec2e,"mov r12d, 0xc","cmp r15, qword ptr [rbp - 0x3e8]",sete r13b,"test r15, r15",je 0xebdc,"test r13b, r13b",jne 0xebdc,"mov rsi, r12","mov rdi, r15",call 0x2d50,"test rax, rax",je 0xdce5,"mov r15, rax","cmp r15, qword ptr [rbp - 0x3e8]","mov byte ptr [r15 + r14], 0",je 0xeb81,"cmp r12, rbx",jbe 0xeb81,"mov rdi, r15","mov rsi, rbx",call 0x2d50,"test rax, rax","cmovne r15, rax","mov rax, qword ptr [rbp - 0x420]","test rax, rax",je 0xeb95,"mov rdi, rax",call 0x2a10,"mov rax, qword ptr [rbp - 0x408]","mov rdi, qword ptr [rbp - 0x2b8]","add rax, 0x20","cmp rdi, rax",je 0xebb1,call 0x2a10,"mov rax, qword ptr [rbp - 0x410]","mov rdi, qword ptr [rbp - 0x3a8]","add rax, 0x10","cmp rdi, rax",je 0xebcd,call 0x2a10,"mov rax, qword ptr [rbp - 0x418]","mov qword ptr [rax], r14",jmp 0xdd74,"mov rdi, r12",call 0x2cf0,"test rax, rax","mov rcx, rax",je 0xdce5,"test r14, r14",je 0xec60,"test r13b, r13b",je 0xec60,"mov rsi, r15","mov rdx, r14","mov rdi, rax",call 0x2c90,"mov r15, rax",jmp 0xeb5c,"cmp r12, -1","mov eax, 1",je 0xeb5c,"test r12, r12",je 0xdce5,js 0xdce5,"test rax, rax",jne 0xdce5,"cmp rbx, -1",je 0xdce5,"mov r12, rbx",jmp 0xeb28,js 0xdce5,"add r12, r12","cmp r12, rbx",jae 0xeb28,jmp 0xec2e,nop dword ptr [rax],"mov r15, rcx",jmp 0xeb5c,"cmp r12, -1",je 0xe0a8,jmp 0xdcf1,call 0x2b30,"cmp r12, -1","mov edx, 1",je 0xe083,"test r12, r12",je 0xdce5,jns 0xe860,jmp 0xdce5,nop ,"cmp qword ptr [rsi], 0","mov rax, qword ptr [rsi + 8]",je 0xed0d,"lea r8, [rip + 0x38df]","lea r10, [rip + 0x3938]","lea r9, [rip + 0x38c1]","xor ecx, ecx",nop dword ptr [rax],"cmp dword ptr [rax], 0x16",ja 0xed10,"mov edx, dword ptr [rax]","movsxd rdx, dword ptr [r8 + rdx*4]","add rdx, r8",jmp rdx,nop dword ptr [rax + rax],"mov rdx, qword ptr [rdi + 8]","add rdx, 0xf","and rdx, 0xfffffffffffffff0","lea r11, [rdx + 0x10]","mov qword ptr [rdi + 8], r11",fld xword ptr [rdx],fstp xword ptr [rax + 0x10],nop dword ptr [rax],"add rcx, 1","add rax, 0x20","cmp qword ptr [rsi], rcx",ja 0xecc8,"xor eax, eax",ret ,"mov eax, 0xffffffff",ret ,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee5a,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov rdx, qword ptr [rdx]","mov qword ptr [rax + 0x10], rdx",jmp 0xed00,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee7c,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov edx, dword ptr [rdx]","mov dword ptr [rax + 0x10], edx",jmp 0xed00,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee6b,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov edx, dword ptr [rdx]","mov byte ptr [rax + 0x10], dl",jmp 0xed00,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee2a,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov edx, dword ptr [rdx]","mov word ptr [rax + 0x10], dx",jmp 0xed00,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee3b,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov rdx, qword ptr [rdx]","test rdx, rdx","cmove rdx, r9","mov qword ptr [rax + 0x10], rdx",jmp 0xed00,"mov r11d, dword ptr [rdi + 4]","cmp r11d, 0xaf",ja 0xee8d,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 0x10","mov dword ptr [rdi + 4], r11d","movsd xmm0, qword ptr [rdx]","movsd qword ptr [rax + 0x10], xmm0",jmp 0xed00,"mov r11d, dword ptr [rdi]","cmp r11d, 0x2f",ja 0xee4c,"mov edx, r11d","add rdx, qword ptr [rdi + 0x10]","add r11d, 8","mov dword ptr [rdi], r11d","mov rdx, qword ptr [rdx]","test rdx, rdx","cmove rdx, r10","mov qword ptr [rax + 0x10], rdx",jmp 0xed00,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xed99,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xedbf,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xee17,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xed31,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xed77,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xed55,"mov rdx, qword ptr [rdi + 8]","lea r11, [rdx + 8]","mov qword ptr [rdi + 8], r11",jmp 0xedf2,nop ,push r15,push r14,"lea rcx, [rsi + 0x20]",push r13,push r12,"lea rax, [rdx + 0x10]",push rbp,push rbx,"mov r14, rsi","mov r15, rdx","xor ebx, ebx","mov r9d, 7","sub rsp, 0x58","mov r10d, 7","mov qword ptr [rsi], 0","mov qword ptr [rsi + 8], rcx","mov qword ptr [rsp + 0x28], rcx","mov r8, -1","mov qword ptr [rdx], 0","mov qword ptr [rsp + 8], rax","mov qword ptr [rdx + 8], rax","mov qword ptr [rsp + 0x18], 0","mov qword ptr [rsp + 0x10], 0","mov qword ptr [rsp + 0x20], 0",jmp 0xef1b,nop ,"cmp al, 0x25","lea rbp, [rdi + 1]",je 0xef58,"mov rdi, rbp","movzx eax, byte ptr [rdi]","test al, al",jne 0xef10,"lea rax, [rbx + rbx*4]","lea rax, [rbx + rax*2]","mov qword ptr [rcx + rax*8], rdi","mov rax, qword ptr [rsp + 0x10]","mov qword ptr [r14 + 0x10], rax","mov rax, qword ptr [rsp + 0x18]","mov qword ptr [r14 + 0x18], rax","xor eax, eax","add rsp, 0x58",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop dword ptr [rax],"lea rax, [rbx + rbx*4]","mov r13, r8","lea rax, [rbx + rax*2]","lea r12, [rcx + rax*8]","mov qword ptr [r12], rdi","mov dword ptr [r12 + 0x10], 0","mov qword ptr [r12 + 0x18], 0","mov qword ptr [r12 + 0x20], 0","mov qword ptr [r12 + 0x28], r8","mov qword ptr [r12 + 0x30], 0","mov qword ptr [r12 + 0x38], 0","mov qword ptr [r12 + 0x40], r8","mov qword ptr [r12 + 0x50], r8","movzx ebx, byte ptr [rdi + 1]","lea eax, [rbx - 0x30]","cmp al, 9",ja 0xefee,jmp 0xf3ea,nop word ptr [rax + rax],"cmp bl, 0x2d",je 0xf008,"cmp bl, 0x2b",je 0xf010,"cmp bl, 0x20",je 0xf020,"cmp bl, 0x23",je 0xf030,"cmp bl, 0x30",je 0xf040,"cmp bl, 0x49",jne 0xf050,"or dword ptr [r12 + 0x10], 0x40",nop dword ptr [rax],"movzx ebx, byte ptr [rax]","mov rbp, rax","lea rax, [rbp + 1]","cmp bl, 0x27","mov rdx, rax",jne 0xefc0,"or dword ptr [r12 + 0x10], 1",jmp 0xefe8,nop word ptr [rax + rax],"or dword ptr [r12 + 0x10], 2",jmp 0xefe8,"or dword ptr [r12 + 0x10], 4",jmp 0xefe8,nop dword ptr [rax + rax],"or dword ptr [r12 + 0x10], 8",jmp 0xefe8,nop dword ptr [rax + rax],"or dword ptr [r12 + 0x10], 0x10",jmp 0xefe8,nop dword ptr [rax + rax],"or dword ptr [r12 + 0x10], 0x20",jmp 0xefe8,nop dword ptr [rax + rax],"cmp bl, 0x2a",je 0xf209,"lea ecx, [rbx - 0x30]","cmp cl, 9",jbe 0xf477,"cmp bl, 0x2e",je 0xf33f,"xor eax, eax","mov esi, 1",jmp 0xf0a7,nop word ptr [rax + rax],"cmp bl, 0x4c",je 0xf0c0,"cmp bl, 0x6c",je 0xf0a0,"cmp bl, 0x6a",je 0xf0a0,"mov edx, ebx","and edx, 0xffffffdf","cmp dl, 0x5a",je 0xf0a0,"cmp bl, 0x74",jne 0xf0c8,nop ,"add eax, 8","movzx ebx, byte ptr [rbp]","add rbp, 1","cmp bl, 0x68",jne 0xf080,"mov ecx, eax","mov edx, esi","and ecx, 1","shl edx, cl","or eax, edx",jmp 0xf0a3,nop dword ptr [rax],"or eax, 4",jmp 0xf0a3,nop dword ptr [rax],"lea edx, [rbx - 0x25]","cmp dl, 0x53",ja 0xf6eb,"lea rcx, [rip + 0x3531]","movzx edx, dl","movsxd rdx, dword ptr [rcx + rdx*4]","add rdx, rcx",jmp rdx,"mov r11d, 0x10","mov ebx, 0x73",nop word ptr [rax + rax],"cmp r13, -1",je 0xf7b7,"mov qword ptr [r12 + 0x50], r13","cmp r9, r13","mov rcx, qword ptr [r15 + 8]",jbe 0xf730,"mov rax, qword ptr [r15]","mov rdx, rax","shl rdx, 5","add rdx, rcx","cmp rax, r13",ja 0xf146,nop word ptr cs:[rax + rax],"add rax, 1","mov dword ptr [rdx], 0","add rdx, 0x20","cmp rax, r13",jbe 0xf130,"mov qword ptr [r15], rax","shl r13, 5","lea rax, [rcx + r13]","mov edx, dword ptr [rax]","test edx, edx",jne 0xf723,"mov dword ptr [rax], r11d","mov byte ptr [r12 + 0x48], bl","mov rax, qword ptr [r14]","mov qword ptr [r12 + 8], rbp","lea rbx, [rax + 1]","cmp r10, rbx","mov qword ptr [r14], rbx",ja 0xf200,"test r10, r10",js 0xfb27,"add r10, r10","movabs rax, 0x2e8ba2e8ba2e8ba","cmp r10, rax",ja 0xfb27,"lea rax, [r10 + r10*4]","mov rdi, qword ptr [r14 + 8]","cmp qword ptr [rsp + 0x28], rdi","mov qword ptr [rsp + 0x40], r9","mov qword ptr [rsp + 0x38], r10","lea rax, [r10 + rax*2]","mov qword ptr [rsp + 0x30], r8","lea rsi, [rax*8]",je 0xf87d,call 0x2d50,"test rax, rax","mov rcx, rax","mov r8, qword ptr [rsp + 0x30]","mov r10, qword ptr [rsp + 0x38]","mov r9, qword ptr [rsp + 0x40]",je 0xfb27,"mov rax, qword ptr [rsp + 0x28]","cmp rax, qword ptr [r14 + 8]","mov rbx, qword ptr [r14]",je 0xf8a0,"mov qword ptr [r14 + 8], rcx",jmp 0xef18,"mov rcx, qword ptr [r14 + 8]",jmp 0xef18,"mov rsi, qword ptr [rsp + 0x10]","mov ecx, 1","mov qword ptr [r12 + 0x18], rbp","mov qword ptr [r12 + 0x20], rax","test rsi, rsi","cmovne rcx, rsi","mov qword ptr [rsp + 0x10], rcx","movzx ecx, byte ptr [rbp + 1]","lea esi, [rcx - 0x30]","cmp sil, 9",jbe 0xf515,"mov rsi, qword ptr [rsp + 0x20]","cmp rsi, -1","lea rdx, [rsi + 1]","mov qword ptr [r12 + 0x28], rsi",je 0xf6eb,"mov rbx, qword ptr [rsp + 0x20]","mov rbp, rax","mov qword ptr [rsp + 0x20], rdx","cmp r9, rbx","mov rcx, qword ptr [r15 + 8]",ja 0xf8e2,"add r9, r9","lea rax, [rbx + 1]","cmp r9, rbx","cmovbe r9, rax","movabs rax, 0x7ffffffffffffff","cmp r9, rax",ja 0xfb2b,"mov rsi, r9","mov qword ptr [rsp + 0x40], r9","mov qword ptr [rsp + 0x38], r10","shl rsi, 5","cmp qword ptr [rsp + 8], rcx","mov qword ptr [rsp + 0x30], r8",je 0xf9c1,"mov rdi, rcx",call 0x2d50,"mov rdx, qword ptr [r15 + 8]","mov r8, qword ptr [rsp + 0x30]","mov rcx, rax","mov r10, qword ptr [rsp + 0x38]","mov r9, qword ptr [rsp + 0x40]","test rcx, rcx",je 0xfb87,"cmp qword ptr [rsp + 8], rdx","mov rax, qword ptr [r15]",je 0xfa9b,"mov qword ptr [r15 + 8], rcx","mov rdx, rax","shl rdx, 5","add rdx, rcx","cmp rax, rbx",ja 0xf316,nop word ptr cs:[rax + rax],"add rax, 1","mov dword ptr [rdx], 0","add rdx, 0x20","cmp rax, rbx",jbe 0xf300,"mov qword ptr [r15], rax","shl rbx, 5","lea rax, [rcx + rbx]","mov edx, dword ptr [rax]","test edx, edx",jne 0xf7fb,"mov dword ptr [rax], 5","movzx ebx, byte ptr [rbp]","lea rdx, [rbp + 1]","cmp bl, 0x2e",jne 0xf06e,"cmp byte ptr [rbp + 1], 0x2a","mov qword ptr [r12 + 0x30], rbp",jne 0xf4ce,"mov rsi, qword ptr [rsp + 0x18]","lea r11, [rbp + 2]","mov eax, 2","mov qword ptr [r12 + 0x38], r11","cmp rsi, 2","cmovae rax, rsi","mov qword ptr [rsp + 0x18], rax","movsx eax, byte ptr [rbp + 2]","lea edx, [rax - 0x30]","cmp dl, 9",jbe 0xfa0c,"mov rbx, qword ptr [r12 + 0x40]","cmp rbx, -1",je 0xf9e5,"cmp r9, rbx","mov rcx, qword ptr [r15 + 8]",jbe 0xf8ff,"mov rax, qword ptr [r15]","mov rdx, rax","shl rdx, 5","add rdx, rcx","cmp rax, rbx",ja 0xf3c6,nop dword ptr [rax],"add rax, 1","mov dword ptr [rdx], 0","add rdx, 0x20","cmp rax, rbx",jbe 0xf3b0,"mov qword ptr [r15], rax","shl rbx, 5","lea rax, [rcx + rbx]","mov edx, dword ptr [rax]","test edx, edx",jne 0xf8ea,"mov dword ptr [rax], 5","mov rbp, r11","movzx ebx, byte ptr [r11]",jmp 0xf06e,"mov rax, rbp",nop dword ptr [rax],"add rax, 1","movzx edx, byte ptr [rax]","lea ecx, [rdx - 0x30]","cmp cl, 9",jbe 0xf3f0,"cmp dl, 0x24","mov r13, r8",jne 0xefee,"xor edx, edx","movsx eax, bl","movabs rdi, 0x1999999999999999","mov rsi, r8","sub eax, 0x30","cmp rdx, rdi",cdqe ,ja 0xf42e,"lea rsi, [rdx + rdx*4]","add rsi, rsi","mov rcx, rbp","add rax, rsi","movzx ebx, byte ptr [rbp + 1]",setb sil,"add rbp, 1","mov rdx, rax","movzx esi, sil","test rsi, rsi","lea edi, [rbx - 0x30]",jne 0xf7de,"cmp dil, 9",jbe 0xf40d,"mov r13, rax","sub r13, 1","cmp r13, -3",ja 0xf6eb,"lea rbp, [rcx + 2]","movzx ebx, byte ptr [rcx + 2]",jmp 0xefee,"mov qword ptr [r12 + 0x18], rbp","movzx edi, byte ptr [rbp]","mov rsi, rbp","lea ecx, [rdi - 0x30]","cmp cl, 9",jbe 0xf497,jmp 0xf4c0,nop dword ptr [rax],"mov rbp, rax","add rax, 1","movzx edi, byte ptr [rax]","lea edx, [rdi - 0x30]","cmp dl, 9",jbe 0xf490,"mov rcx, rax","lea rdx, [rbp + 2]","mov rbp, rax","sub rcx, rsi","mov rsi, qword ptr [rsp + 0x10]","cmp rsi, rcx","cmovae rcx, rsi","mov qword ptr [rsp + 0x10], rcx","mov qword ptr [r12 + 0x20], rbp","movzx ebx, byte ptr [rbp]",jmp 0xf065,"movzx eax, byte ptr [rbp + 1]","sub eax, 0x30","cmp al, 9",ja 0xf4ee,nop dword ptr [rax],"add rdx, 1","movzx eax, byte ptr [rdx]","sub eax, 0x30","cmp al, 9",jbe 0xf4e0,"mov rsi, qword ptr [rsp + 0x18]","mov rax, rdx","mov qword ptr [r12 + 0x38], rdx","sub rax, rbp","movzx ebx, byte ptr [rdx]","mov rbp, rdx","cmp rsi, rax","cmovae rax, rsi","mov qword ptr [rsp + 0x18], rax",jmp 0xf06e,"mov rsi, rax","add rsi, 1","movzx edi, byte ptr [rsi]","lea r11d, [rdi - 0x30]","cmp r11b, 9",jbe 0xf518,"cmp dil, 0x24",jne 0xf23a,"xor esi, esi","movsx eax, cl","movabs rdi, 0x1999999999999999","mov rcx, r8","sub eax, 0x30","cmp rsi, rdi",cdqe ,ja 0xf556,"lea rcx, [rsi + rsi*4]","add rcx, rcx","mov rbp, rdx","xor r11d, r11d","add rax, rcx","movzx ecx, byte ptr [rdx + 1]",setb r11b,"add rdx, 1","mov rsi, rax","test r11, r11","lea edi, [rcx - 0x30]",jne 0xfa7e,"cmp dil, 9",jbe 0xf535,"lea rbx, [rax - 1]","cmp rbx, -3",ja 0xf6eb,"mov qword ptr [r12 + 0x28], rbx","add rbp, 2",jmp 0xf25f,"cmp eax, 0xf","mov r11d, 0x16",jg 0xf0f8,"test al, 4",jne 0xf0f8,"cmp eax, 7","mov r11d, 0x15",jg 0xf0f8,"test al, 2","mov r11d, 0x12",jne 0xf0f8,"xor r11d, r11d","test al, 1",sete r11b,"add r11d, 0x13",jmp 0xf0f8,nop word ptr [rax + rax],"xor r11d, r11d","cmp eax, 7",setg r11b,"add r11d, 0xd",jmp 0xf0f8,"cmp eax, 0xf","mov r11d, 9",jg 0xf0f8,"test al, 4",jne 0xf0f8,"cmp eax, 7","mov r11d, 7",jg 0xf0f8,"test al, 2","mov r11d, 1",jne 0xf0f8,"and eax, 1","cmp eax, 1","sbb r11d, r11d","and r11d, 2","add r11d, 3",jmp 0xf0f8,nop dword ptr [rax],"xor r11d, r11d","cmp eax, 7",setg r11b,"add r11d, 0xf",jmp 0xf0f8,"cmp eax, 0xf","mov r11d, 0xc",jg 0xf0f8,"xor r11d, r11d","test al, 4",setne r11b,"add r11d, 0xb",jmp 0xf0f8,"mov r11d, 0xe","mov ebx, 0x63",jmp 0xf0f8,"cmp eax, 0xf","mov r11d, 0xa",jg 0xf0f8,"test al, 4",jne 0xf0f8,"cmp eax, 7","mov r11d, 8",jg 0xf0f8,"test al, 2","mov r11d, 2",jne 0xf0f8,"and eax, 1","cmp eax, 1","sbb r11d, r11d","and r11d, 2","add r11d, 4",jmp 0xf0f8,nop word ptr cs:[rax + rax],"mov r11d, 0x11",jmp 0xf0f8,"mov rcx, qword ptr [r15 + 8]","cmp qword ptr [rsp + 8], rcx",je 0xf6fe,"mov rdi, rcx",call 0x2a10,"mov rdi, qword ptr [r14 + 8]","cmp qword ptr [rsp + 0x28], rdi",je 0xf70e,call 0x2a10,call 0x2a50,"mov dword ptr [rax], 0x16","mov eax, 0xffffffff",jmp 0xef42,"cmp edx, r11d",je 0xf15b,jmp 0xf6ef,nop ,"add r9, r9","lea rax, [r13 + 1]","cmp r9, r13","cmovbe r9, rax","movabs rax, 0x7ffffffffffffff","cmp r9, rax",ja 0xfb2b,"mov rsi, r9","mov qword ptr [rsp + 0x48], r9","mov qword ptr [rsp + 0x40], r10","shl rsi, 5","cmp qword ptr [rsp + 8], rcx","mov qword ptr [rsp + 0x38], r8","mov dword ptr [rsp + 0x30], r11d",je 0xf811,"mov rdi, rcx",call 0x2d50,"test rax, rax","mov rcx, rax","mov r11d, dword ptr [rsp + 0x30]","mov r8, qword ptr [rsp + 0x38]","mov r10, qword ptr [rsp + 0x40]","mov r9, qword ptr [rsp + 0x48]",je 0xfb27,"mov rax, qword ptr [rsp + 8]","cmp rax, qword ptr [r15 + 8]",je 0xf839,"mov qword ptr [r15 + 8], rcx",jmp 0xf114,"mov rsi, qword ptr [rsp + 0x20]","cmp rsi, -1","lea rax, [rsi + 1]","mov qword ptr [r12 + 0x50], rsi",je 0xf6eb,"mov r13, qword ptr [rsp + 0x20]","mov qword ptr [rsp + 0x20], rax",jmp 0xf107,"cmp dil, 9",ja 0xf6eb,"movsx eax, bl","mov rsi, r8","mov rcx, rbp","sub eax, 0x30",cdqe ,jmp 0xf431,"cmp edx, 5",jne 0xf6ef,"movzx ebx, byte ptr [rbp]","lea rdx, [rbp + 1]",jmp 0xf065,"mov rdi, rsi",call 0x2cf0,"test rax, rax","mov rcx, rax","mov r11d, dword ptr [rsp + 0x30]","mov r8, qword ptr [rsp + 0x38]","mov r10, qword ptr [rsp + 0x40]","mov r9, qword ptr [rsp + 0x48]",je 0xf99c,"mov rdx, qword ptr [r15]","mov rsi, qword ptr [rsp + 8]","mov rdi, rcx","mov qword ptr [rsp + 0x48], r9","mov qword ptr [rsp + 0x40], r10","mov qword ptr [rsp + 0x38], r8","mov dword ptr [rsp + 0x30], r11d","shl rdx, 5",call 0x2c90,"mov r9, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x40]","mov rcx, rax","mov r8, qword ptr [rsp + 0x38]","mov r11d, dword ptr [rsp + 0x30]",jmp 0xf7ae,"mov rdi, rsi",call 0x2cf0,"test rax, rax","mov rcx, rax","mov r8, qword ptr [rsp + 0x30]","mov r10, qword ptr [rsp + 0x38]","mov r9, qword ptr [rsp + 0x40]",je 0xf989,"lea rax, [rbx + rbx*4]","mov rsi, qword ptr [rsp + 0x28]","mov rdi, rcx","mov qword ptr [rsp + 0x40], r9","mov qword ptr [rsp + 0x38], r10","lea rdx, [rbx + rax*2]","mov qword ptr [rsp + 0x30], r8","shl rdx, 3",call 0x2c90,"mov rbx, qword ptr [r14]","mov rcx, rax","mov r9, qword ptr [rsp + 0x40]","mov r10, qword ptr [rsp + 0x38]","mov r8, qword ptr [rsp + 0x30]",jmp 0xf1f7,"mov rax, qword ptr [r15]",jmp 0xf2e7,"cmp edx, 5",jne 0xf6ef,"movzx ebx, byte ptr [r11]","mov rbp, r11",jmp 0xf06e,"add r9, r9","lea rax, [rbx + 1]","cmp r9, rbx","cmovbe r9, rax","movabs rax, 0x7ffffffffffffff","cmp r9, rax",ja 0xfb2b,"mov rsi, r9","mov qword ptr [rsp + 0x48], r9","mov qword ptr [rsp + 0x40], r10","shl rsi, 5","cmp qword ptr [rsp + 8], rcx","mov qword ptr [rsp + 0x38], r8","mov qword ptr [rsp + 0x30], r11",je 0xfafe,"mov rdi, rcx",call 0x2d50,"mov rdx, qword ptr [r15 + 8]","mov r11, qword ptr [rsp + 0x30]","mov rcx, rax","mov r8, qword ptr [rsp + 0x38]","mov r10, qword ptr [rsp + 0x40]","mov r9, qword ptr [rsp + 0x48]","test rcx, rcx",je 0xfb87,"cmp qword ptr [rsp + 8], rdx","mov rax, qword ptr [r15]",je 0xfb40,"mov qword ptr [r15 + 8], rcx",jmp 0xf39d,"mov rcx, qword ptr [r15 + 8]","cmp qword ptr [rsp + 8], rcx",je 0xf9ac,"mov rdi, rcx",call 0x2a10,"mov rdi, qword ptr [r14 + 8]","cmp qword ptr [rsp + 0x28], rdi",je 0xf9ac,call 0x2a10,call 0x2a50,"mov dword ptr [rax], 0xc","mov eax, 0xffffffff",jmp 0xef42,"mov rdi, rsi",call 0x2cf0,"mov rdx, qword ptr [rsp + 8]","mov rcx, rax","mov r9, qword ptr [rsp + 0x40]","mov r10, qword ptr [rsp + 0x38]","mov r8, qword ptr [rsp + 0x30]",jmp 0xf2cc,"mov rsi, qword ptr [rsp + 0x20]","cmp rsi, -1","lea rax, [rsi + 1]","mov qword ptr [r12 + 0x40], rsi",je 0xf6eb,"mov rbx, qword ptr [rsp + 0x20]","mov qword ptr [rsp + 0x20], rax",jmp 0xf38d,"mov rdx, r11","add rdx, 1","movzx ecx, byte ptr [rdx]","lea esi, [rcx - 0x30]","cmp sil, 9",jbe 0xfa0f,"cmp cl, 0x24",jne 0xf37e,"xor ecx, ecx","movabs rsi, 0x1999999999999999","sub eax, 0x30","mov rdx, r8","cmp rcx, rsi",cdqe ,ja 0xfa48,"lea rdx, [rcx + rcx*4]","add rdx, rdx","mov rsi, r11","xor ebx, ebx","add rdx, rax","movsx eax, byte ptr [r11 + 1]",setb bl,"add r11, 1","mov rcx, rdx","test rbx, rbx","lea edi, [rax - 0x30]",je 0xfad8,"cmp dil, 9",ja 0xf6eb,"sub eax, 0x30","mov rdx, r8","mov rsi, r11",cdqe ,jmp 0xfa4b,"cmp dil, 9",ja 0xf6eb,"movsx eax, cl","mov rbp, rdx","mov rcx, r8","sub eax, 0x30",cdqe ,jmp 0xf559,"mov rsi, qword ptr [rsp + 8]","shl rax, 5","mov rdi, rcx","mov rdx, rax","mov qword ptr [rsp + 0x40], r9","mov qword ptr [rsp + 0x38], r10","mov qword ptr [rsp + 0x30], r8",call 0x2c90,"mov r9, qword ptr [rsp + 0x40]","mov rcx, rax","mov r10, qword ptr [rsp + 0x38]","mov rax, qword ptr [r15]","mov r8, qword ptr [rsp + 0x30]",jmp 0xf2e3,"cmp dil, 9",jbe 0xfa2a,"lea rbx, [rdx - 1]","cmp rbx, -3",ja 0xf6eb,"mov qword ptr [r12 + 0x40], rbx","lea r11, [rsi + 2]",jmp 0xf38d,"mov rdi, rsi",call 0x2cf0,"mov rdx, qword ptr [rsp + 8]","mov rcx, rax","mov r9, qword ptr [rsp + 0x48]","mov r10, qword ptr [rsp + 0x40]","mov r8, qword ptr [rsp + 0x38]","mov r11, qword ptr [rsp + 0x30]",jmp 0xf969,"mov rcx, qword ptr [r15 + 8]","cmp qword ptr [rsp + 8], rcx",jne 0xf994,jmp 0xf99c,nop dword ptr [rax + rax],"mov rsi, qword ptr [rsp + 8]","shl rax, 5","mov rdi, rcx","mov rdx, rax","mov qword ptr [rsp + 0x48], r9","mov qword ptr [rsp + 0x40], r10","mov qword ptr [rsp + 0x38], r8","mov qword ptr [rsp + 0x30], r11",call 0x2c90,"mov r9, qword ptr [rsp + 0x48]","mov rcx, rax","mov r10, qword ptr [rsp + 0x40]","mov rax, qword ptr [r15]","mov r8, qword ptr [rsp + 0x38]","mov r11, qword ptr [rsp + 0x30]",jmp 0xf980,"mov rcx, rdx",jmp 0xfb2b,nop dword ptr [rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20450e]",push rbp,"lea rbp, [rip + 0x20450e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x29a8,"test rbp, rbp",je 0xfbe6,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbp, rbx",jne 0xfbd0,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax],"lea rax, [rip + 0x2053f1]","test rax, rax",je 0xfc30,"mov rdx, qword ptr [rax]","xor esi, esi",jmp 0x2e00,nop word ptr cs:[rax + rax],"xor edx, edx","xor esi, esi",jmp 0x2e00
3,infileELF/test_int_32bit,"xor ebp, ebp",pop rsi,"mov ecx, esp","and esp, 0xfffffff0",push rax,push rsp,push rdx,call 0x472,"add ebx, 0x1b84","lea eax, [rbx - 0x1954]",push rax,"lea eax, [rbx - 0x19b4]",push rax,push rcx,push rsi,push qword ptr [rbx + 0x24],call 0x420,hlt ,"mov ebx, dword ptr [rsp]",ret ,nop ,nop ,nop ,nop ,nop ,"mov ebx, dword ptr [rsp]",ret ,nop ,nop ,nop ,nop ,nop ,nop ,call 0x579,"add edx, 0x1b3f","lea ecx, [rdx + 0x34]","lea eax, [rdx + 0x34]","cmp eax, ecx",je 0x4c8,"mov eax, dword ptr [rdx + 0x18]","test eax, eax",je 0x4c8,push rbp,"mov ebp, esp","sub esp, 0x14",push rcx,call rax,"add esp, 0x10",leave ,ret ,nop ,"lea esi, [rsi]",ret ,"lea esi, [rsi]",call 0x579,"add edx, 0x1aff",push rbp,"lea ecx, [rdx + 0x34]","lea eax, [rdx + 0x34]","sub eax, ecx","mov ebp, esp",push rbx,"sar eax, 2","mov ebx, eax","sub esp, 4","shr ebx, 0x1f","add eax, ebx","sar eax, 1",je 0x512,"mov edx, dword ptr [rdx + 0x28]","test edx, edx",je 0x512,"sub esp, 8",push rax,push rcx,call rdx,"add esp, 0x10","mov ebx, dword ptr [rbp - 4]",leave ,ret ,"mov esi, esi","lea edi, [rdi]",push rbp,"mov ebp, esp",push rbx,call 0x480,"add ebx, 0x1aab","sub esp, 4","cmp byte ptr [rbx + 0x34], 0",jne 0x562,"mov eax, dword ptr [rbx + 0x1c]","test eax, eax",je 0x556,"sub esp, 0xc",push qword ptr [rbx + 0x30],call 0x430,"add esp, 0x10",call 0x490,"mov byte ptr [rbx + 0x34], 1","mov ebx, dword ptr [rbp - 4]",leave ,ret ,"mov esi, esi","lea edi, [rdi]",push rbp,"mov ebp, esp",pop rbp,jmp 0x4d0,"mov edx, dword ptr [rsp]",ret ,"lea ecx, [rsp + 4]","and esp, 0xfffffff0",push qword ptr [rcx - 4],push rbp,"mov ebp, esp",push rdi,push rsi,push rbx,push rcx,"sub esp, 0xb8",call 0x480,"add ebx, 0x1a3b","movabs eax, dword ptr gs:[0x31e4458900000014]","ror byte ptr [rbp - 0xbb7b], 0xff","lea edx, [rbx - 0x18d4]","mov ecx, 0x28","mov edi, eax","mov esi, edx","rep movsd dword ptr [rdi], dword ptr [rsi]","mov dword ptr [rbp - 0xc0], 0",jmp 0x5f4,"mov eax, dword ptr [rbp - 0xc0]","mov eax, dword ptr [rbp + rax*4 - 0xbc]","sub esp, 8",push rax,"lea eax, [rbx - 0x18f4]",push rax,call 0x400,"add esp, 0x10","add dword ptr [rbp - 0xc0], 1","cmp dword ptr [rbp - 0xc0], 0x27",jle 0x5cd,"mov eax, 0","mov edx, dword ptr [rbp - 0x1c]","xor edx, dword ptr gs:[rip + 0x14]",je 0x613,call 0x690,"lea esp, [rbp - 0x10]",pop rcx,pop rbx,pop rsi,pop rdi,pop rbp,"lea esp, [rcx - 4]",ret ,nop ,push rbp,push rdi,push rsi,push rbx,call 0x480,"add ebx, 0x19ab","sub esp, 0xc","mov ebp, dword ptr [rsp + 0x28]","lea esi, [rbx - 0xfc]",call 0x3c0,"lea eax, [rbx - 0x100]","sub esi, eax","sar esi, 2","test esi, esi",je 0x675,"xor edi, edi","lea esi, [rsi]","sub esp, 4",push rbp,push qword ptr [rsp + 0x2c],push qword ptr [rsp + 0x2c],call qword ptr [rbx + rdi*4 - 0x100],"add edi, 1","add esp, 0x10","cmp esi, edi",jne 0x658,"add esp, 0xc",pop rbx,pop rsi,pop rdi,pop rbp,ret ,"lea esi, [rsi]",ret ,nop ,nop ,nop ,nop ,nop ,nop ,nop ,push rbx,call 0x480,"add ebx, 0x193e","sub esp, 8",call 0x
4,infileELF/ptrace,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x400e60","mov rcx, 0x400df0","mov rdi, 0x400c6c",call 0x400660,hlt ,nop word ptr [rax + rax],"mov eax, 0x602087",push rbp,"sub rax, 0x602080","cmp rax, 0xe","mov rbp, rsp",jbe 0x400740,"mov eax, 0","test rax, rax",je 0x400740,pop rbp,"mov edi, 0x602080",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x602080",push rbp,"sub rsi, 0x602080","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400788,"mov eax, 0","test rax, rax",je 0x400788,pop rbp,"mov edi, 0x602080",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x2018e9], 0",jne 0x4007aa,push rbp,"mov rbp, rsp",call 0x400710,pop rbp,"mov byte ptr [rip + 0x2018d6], 1",ret ,nop dword ptr [rax],"mov edi, 0x601e20","cmp qword ptr [rdi], 0",jne 0x4007c0,jmp 0x400750,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x4007bb,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400750,push rbp,"mov rbp, rsp","sub rsp, 0xf0","mov dword ptr [rbp - 0xe4], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0xe0]","mov edx, 0xd8","mov esi, 0","mov rdi, rax",call 0x400650,"lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xc","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0x70]","mov rsi, rax","mov edi, 0x400e98","mov eax, 0",call 0x400640,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400860,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 0x10","mov eax, 0",call 0x400690,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x14]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x4008c5,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","mov qword ptr [rbp - 0x18], rdi","mov qword ptr [rbp - 8], 0","mov rax, qword ptr [rbp - 0x18]","shl rax, 0x38","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff00","shl rax, 0x28","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff0000","shl rax, 0x18","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff000000","shl rax, 8","add qword ptr [rbp - 8], rax","movabs rax, 0xff00000000","and rax, qword ptr [rbp - 0x18]","sar rax, 8","add qword ptr [rbp - 8], rax","movabs rax, 0xff0000000000","and rax, qword ptr [rbp - 0x18]","sar rax, 0x18","add qword ptr [rbp - 8], rax","movabs rax, 0xff000000000000","and rax, qword ptr [rbp - 0x18]","sar rax, 0x28","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","shr rax, 0x38","mov rdx, rax","mov rax, qword ptr [rbp - 8]","add rax, rdx","mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]",pop rbp,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10","movabs rax, 0x1122334455667788","mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]","mov rdi, rax",call 0x4008c7,"mov rsi, rax","mov edi, 0x400ea5","mov eax, 0",call 0x400640,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov qword ptr [rbp - 0x20], rsi","mov rdx, qword ptr [rbp - 0x20]","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov esi, eax","mov edi, 1","mov eax, 0",call 0x400690,"mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]","mov rdi, rax",call 0x4008c7,"mov rsi, rax","mov edi, 0x400eac","mov eax, 0",call 0x400640,"mov rax, qword ptr [rbp - 8]","mov al, 0","or al, 0xcc","mov rcx, rax","mov rdx, qword ptr [rbp - 0x20]","mov eax, dword ptr [rbp - 0x14]","mov esi, eax","mov edi, 4","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0x20]","mov rsi, rax","mov edi, 0x400ec4","mov eax, 0",call 0x400640,"mov rax, qword ptr [rbp - 8]",leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x100","mov dword ptr [rbp - 0xe4], edi","mov qword ptr [rbp - 0xf0], rsi","mov qword ptr [rbp - 0xf8], rdx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov esi, 0x10","mov edi, 0x400ed7","mov eax, 0",call 0x400640,"lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xc","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0xf0]","mov qword ptr [rbp - 0x60], rax","lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xd","mov eax, 0",call 0x400690,"mov rcx, qword ptr [rbp - 0xf8]","mov rdx, qword ptr [rbp - 0xf0]","mov eax, dword ptr [rbp - 0xe4]","mov esi, eax","mov edi, 4","mov eax, 0",call 0x400690,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400b0b,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x30","mov dword ptr [rbp - 0x24], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x24]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 7","mov eax, 0",call 0x400690,"mov edi, 0x400ee1",call 0x400620,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x24]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,"mov eax, dword ptr [rbp - 0xc]","mov dword ptr [rbp - 0x20], eax","mov eax, dword ptr [rbp - 0x20]","and eax, 0x7f","test eax, eax",jne 0x400b9d,"mov edi, 0x400eed",call 0x400620,"mov eax, dword ptr [rbp - 0xc]","mov esi, eax","mov edi, 0x400f06","mov eax, 0",call 0x400640,"mov edi, 0",call 0x4006c0,"mov eax, dword ptr [rbp - 0xc]","mov dword ptr [rbp - 0x10], eax","mov eax, dword ptr [rbp - 0x10]","movzx eax, al","cmp eax, 0x7f",jne 0x400bca,"mov edi, 0x400f11",call 0x400620,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400bd9,jmp 0x400bd4,"mov edi, 1",call 0x4006c0,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 9","mov eax, 0",call 0x400690,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x14]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400c3e,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10","mov dword ptr [rbp - 4], edi","mov eax, dword ptr [rbp - 4]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 0x11","mov eax, 0",call 0x400690,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0xd0","mov dword ptr [rbp - 0xc4], edi","mov qword ptr [rbp - 0xd0], rsi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","cmp dword ptr [rbp - 0xc4], 1",jg 0x400cba,"mov edi, 0x400f1d",call 0x400620,"mov edi, 0x400f38",call 0x400620,"mov edi, 1",call 0x4006c0,"mov rax, qword ptr [rbp - 0xd0]","add rax, 8","mov rax, qword ptr [rax]","mov rdi, rax",call 0x4006b0,"mov dword ptr [rbp - 0xb4], eax","mov rax, qword ptr [rbp - 0xd0]","add rax, 0x10","mov rax, qword ptr [rax]","mov edx, 0","mov esi, 0","mov rdi, rax",call 0x400670,"mov qword ptr [rbp - 0xa8], rax","mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400862,"mov rdx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rdx","mov edi, eax",call 0x4009ab,"mov qword ptr [rbp - 0xb0], rax","mov edi, 0x400f60",call 0x400620,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400b0d,"mov rdx, qword ptr [rbp - 0xb0]","mov rcx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rcx","mov edi, eax",call 0x400a38,"lea rax, [rbp - 0xa0]","mov rsi, rax","mov edi, 0x400f70",call 0x400e70,"test eax, eax",je 0x400db2,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x4007d6,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400bdb,"mov rdx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rdx","mov edi, eax",call 0x4009ab,"mov qword ptr [rbp - 0xb0], rax",jmp 0x400d28,nop ,"mov edi, 0x400f77",call 0x400620,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400c40,"mov eax, 0","mov rcx, qword ptr [rbp - 8]","xor rcx, qword ptr fs:[0x28]",je 0x400de3,call 0x400630,leave ,ret ,nop word ptr cs:[rax + rax],nop ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20100e]",push rbp,"lea rbp, [rip + 0x20100e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x4005e8,"test rbp, rbp",je 0x400e46,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400e30,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax],"mov rdx, rsi","mov rsi, rdi","mov edi, 1",jmp 0x
