,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492
0,infileELF/test_int,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4006a0","mov rcx, 0x400630","mov rdi, 0x400596",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","sub rsp, 0xc0","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0xb0]","mov esi, 0x400700","mov edx, 0x14","mov rdi, rax","mov rcx, rdx","rep movsq qword ptr [rdi], qword ptr [rsi]","mov dword ptr [rbp - 0xb4], 0",jmp 0x4005fd,"mov eax, dword ptr [rbp - 0xb4]",cdqe ,"mov eax, dword ptr [rbp + rax*4 - 0xb0]","mov esi, eax","mov edi, 0x4006e0","mov eax, 0",call 0x400470,"add dword ptr [rbp - 0xb4], 1","cmp dword ptr [rbp - 0xb4], 0x27",jle 0x4005d6,"mov eax, 0","mov rdx, qword ptr [rbp - 8]","xor rdx, qword ptr fs:[0x28]",je 0x40061f,call 0x400460,leave ,ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax + rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2007ce]",push rbp,"lea rbp, [rip + 0x2007ce]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x400686,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400670,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1,infileELF/quick,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4008b0","mov rcx, 0x400840","mov rdi, 0x400799",call 0x4004c0,hlt ,nop word ptr [rax + rax],"mov eax, 0x60104f",push rbp,"sub rax, 0x601048","cmp rax, 0xe","mov rbp, rsp",jbe 0x400540,"mov eax, 0","test rax, rax",je 0x400540,pop rbp,"mov edi, 0x601048",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601048",push rbp,"sub rsi, 0x601048","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400588,"mov eax, 0","test rax, rax",je 0x400588,pop rbp,"mov edi, 0x601048",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ab1], 0",jne 0x4005aa,push rbp,"mov rbp, rsp",call 0x400510,pop rbp,"mov byte ptr [rip + 0x200a9e], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x4005c0,jmp 0x400550,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x4005bb,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400550,push rbp,"mov rbp, rsp","mov qword ptr [rbp - 0x18], rdi","mov qword ptr [rbp - 0x20], rsi","mov rax, qword ptr [rbp - 0x18]","mov eax, dword ptr [rax]","mov dword ptr [rbp - 4], eax","mov rax, qword ptr [rbp - 0x20]","mov edx, dword ptr [rax]","mov rax, qword ptr [rbp - 0x18]","mov dword ptr [rax], edx","mov rax, qword ptr [rbp - 0x20]","mov edx, dword ptr [rbp - 4]","mov dword ptr [rax], edx",nop ,pop rbp,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov qword ptr [rbp - 0x18], rdi","mov dword ptr [rbp - 0x1c], esi","mov dword ptr [rbp - 0x20], edx","mov eax, dword ptr [rbp - 0x20]",cdqe ,"lea rdx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rax, rdx","mov eax, dword ptr [rax]","mov dword ptr [rbp - 4], eax","mov eax, dword ptr [rbp - 0x1c]","sub eax, 1","mov dword ptr [rbp - 0xc], eax","mov eax, dword ptr [rbp - 0x1c]","mov dword ptr [rbp - 8], eax",jmp 0x400695,"mov eax, dword ptr [rbp - 8]",cdqe ,"lea rdx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rax, rdx","mov eax, dword ptr [rax]","cmp eax, dword ptr [rbp - 4]",jg 0x400691,"add dword ptr [rbp - 0xc], 1","mov eax, dword ptr [rbp - 8]",cdqe ,"lea rdx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rdx, rax","mov eax, dword ptr [rbp - 0xc]",cdqe ,"lea rcx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rax, rcx","mov rsi, rdx","mov rdi, rax",call 0x4005d6,"add dword ptr [rbp - 8], 1","mov eax, dword ptr [rbp - 0x20]","sub eax, 1","cmp eax, dword ptr [rbp - 8]",jge 0x40063f,"mov eax, dword ptr [rbp - 0x20]",cdqe ,"lea rdx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rdx, rax","mov eax, dword ptr [rbp - 0xc]",cdqe ,"add rax, 1","lea rcx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rax, rcx","mov rsi, rdx","mov rdi, rax",call 0x4005d6,"mov eax, dword ptr [rbp - 0xc]","add eax, 1",leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov qword ptr [rbp - 0x18], rdi","mov dword ptr [rbp - 0x1c], esi","mov dword ptr [rbp - 0x20], edx","mov eax, dword ptr [rbp - 0x1c]","cmp eax, dword ptr [rbp - 0x20]",jge 0x40073e,"mov edx, dword ptr [rbp - 0x20]","mov ecx, dword ptr [rbp - 0x1c]","mov rax, qword ptr [rbp - 0x18]","mov esi, ecx","mov rdi, rax",call 0x400603,"mov dword ptr [rbp - 4], eax","mov eax, dword ptr [rbp - 4]","lea edx, [rax - 1]","mov ecx, dword ptr [rbp - 0x1c]","mov rax, qword ptr [rbp - 0x18]","mov esi, ecx","mov rdi, rax",call 0x4006df,"mov eax, dword ptr [rbp - 4]","lea ecx, [rax + 1]","mov edx, dword ptr [rbp - 0x20]","mov rax, qword ptr [rbp - 0x18]","mov esi, ecx","mov rdi, rax",call 0x4006df,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov qword ptr [rbp - 0x18], rdi","mov dword ptr [rbp - 0x1c], esi","mov dword ptr [rbp - 4], 0",jmp 0x400784,"mov eax, dword ptr [rbp - 4]",cdqe ,"lea rdx, [rax*4]","mov rax, qword ptr [rbp - 0x18]","add rax, rdx","mov eax, dword ptr [rax]","mov esi, eax","mov edi, 0x4008c4","mov eax, 0",call 0x4004b0,"add dword ptr [rbp - 4], 1","mov eax, dword ptr [rbp - 4]","cmp eax, dword ptr [rbp - 0x1c]",jl 0x400759,"mov edi, 0x6e",call 0x400490,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x30","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov dword ptr [rbp - 0x20], 0xa","mov dword ptr [rbp - 0x1c], 7","mov dword ptr [rbp - 0x18], 8","mov dword ptr [rbp - 0x14], 9","mov dword ptr [rbp - 0x10], 1","mov dword ptr [rbp - 0xc], 5","mov dword ptr [rbp - 0x24], 6","mov eax, dword ptr [rbp - 0x24]","lea edx, [rax - 1]","lea rax, [rbp - 0x20]","mov esi, 0","mov rdi, rax",call 0x4006df,"mov edi, 0x4008c8","mov eax, 0",call 0x4004b0,"mov edx, dword ptr [rbp - 0x24]","lea rax, [rbp - 0x20]","mov esi, edx","mov rdi, rax",call 0x400741,"mov eax, 0","mov rcx, qword ptr [rbp - 8]","xor rcx, qword ptr fs:[0x28]",je 0x400831,call 0x4004a0,leave ,ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2005be]",push rbp,"lea rbp, [rip + 0x2005be]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400460,"test rbp, rbp",je 0x400896,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400880,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
2,infileELF/va_array,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4009d0","mov rcx, 0x400960","mov rdi, 0x400596",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","mov ecx, 0x1e","mov edx, 0x14","mov esi, 0xa","mov edi, 3","mov eax, 0",call 0x40063d,"mov esi, eax","mov edi, 0x4009e4","mov eax, 0",call 0x400470,"mov r8d, 0x1e","mov ecx, 0x19","mov edx, 0x14","mov esi, 4","mov edi, 4","mov eax, 0",call 0x40063d,"mov esi, eax","mov edi, 0x4009ff","mov eax, 0",call 0x400470,"sub rsp, 8",push 9,push 8,push 7,"mov r9d, 6","mov r8d, 5","mov ecx, 4","mov edx, 3","mov esi, 2","mov edi, 8","mov eax, 0",call 0x400766,"add rsp, 0x20","mov eax, 0",leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0xf0","mov dword ptr [rbp - 0xe4], edi","mov qword ptr [rbp - 0xa8], rsi","mov qword ptr [rbp - 0xa0], rdx","mov qword ptr [rbp - 0x98], rcx","mov qword ptr [rbp - 0x90], r8","mov qword ptr [rbp - 0x88], r9","test al, al",je 0x400695,"movaps xmmword ptr [rbp - 0x80], xmm0","movaps xmmword ptr [rbp - 0x70], xmm1","movaps xmmword ptr [rbp - 0x60], xmm2","movaps xmmword ptr [rbp - 0x50], xmm3","movaps xmmword ptr [rbp - 0x40], xmm4","movaps xmmword ptr [rbp - 0x30], xmm5","movaps xmmword ptr [rbp - 0x20], xmm6","movaps xmmword ptr [rbp - 0x10], xmm7","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 0xb8], rax","xor eax, eax","mov dword ptr [rbp - 0xd8], 0","mov dword ptr [rbp - 0xd0], 8","mov dword ptr [rbp - 0xcc], 0x30","lea rax, [rbp + 0x10]","mov qword ptr [rbp - 0xc8], rax","lea rax, [rbp - 0xb0]","mov qword ptr [rbp - 0xc0], rax","mov dword ptr [rbp - 0xd4], 0",jmp 0x400739,"mov eax, dword ptr [rbp - 0xd0]","cmp eax, 0x30",jae 0x400718,"mov rax, qword ptr [rbp - 0xc0]","mov edx, dword ptr [rbp - 0xd0]","mov edx, edx","add rax, rdx","mov edx, dword ptr [rbp - 0xd0]","add edx, 8","mov dword ptr [rbp - 0xd0], edx",jmp 0x40072a,"mov rax, qword ptr [rbp - 0xc8]","lea rdx, [rax + 8]","mov qword ptr [rbp - 0xc8], rdx","mov eax, dword ptr [rax]","add dword ptr [rbp - 0xd8], eax","add dword ptr [rbp - 0xd4], 1","mov eax, dword ptr [rbp - 0xd4]","cmp eax, dword ptr [rbp - 0xe4]",jl 0x4006ea,"mov eax, dword ptr [rbp - 0xd8]","mov rcx, qword ptr [rbp - 0xb8]","xor rcx, qword ptr fs:[0x28]",je 0x400764,call 0x400460,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0xf0","mov dword ptr [rbp - 0xe4], edi","mov qword ptr [rbp - 0xa8], rsi","mov qword ptr [rbp - 0xa0], rdx","mov qword ptr [rbp - 0x98], rcx","mov qword ptr [rbp - 0x90], r8","mov qword ptr [rbp - 0x88], r9","test al, al",je 0x4007be,"movaps xmmword ptr [rbp - 0x80], xmm0","movaps xmmword ptr [rbp - 0x70], xmm1","movaps xmmword ptr [rbp - 0x60], xmm2","movaps xmmword ptr [rbp - 0x50], xmm3","movaps xmmword ptr [rbp - 0x40], xmm4","movaps xmmword ptr [rbp - 0x30], xmm5","movaps xmmword ptr [rbp - 0x20], xmm6","movaps xmmword ptr [rbp - 0x10], xmm7","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 0xb8], rax","xor eax, eax","mov dword ptr [rbp - 0xd4], 0","mov dword ptr [rbp - 0xd0], 8","mov dword ptr [rbp - 0xcc], 0x30","lea rax, [rbp + 0x10]","mov qword ptr [rbp - 0xc8], rax","lea rax, [rbp - 0xb0]","mov qword ptr [rbp - 0xc0], rax","mov eax, dword ptr [rbp - 0xe4]","mov esi, eax","mov edi, 0x400a1d","mov eax, 0",call 0x400470,"mov eax, dword ptr [rbp - 0xd0]","cmp eax, 0x30",jae 0x40084c,"mov rax, qword ptr [rbp - 0xc0]","mov edx, dword ptr [rbp - 0xd0]","mov edx, edx","add rax, rdx","mov edx, dword ptr [rbp - 0xd0]","add edx, 8","mov dword ptr [rbp - 0xd0], edx",jmp 0x40085e,"mov rax, qword ptr [rbp - 0xc8]","lea rdx, [rax + 8]","mov qword ptr [rbp - 0xc8], rdx","mov eax, dword ptr [rax]","mov dword ptr [rbp - 0xd4], eax","mov eax, dword ptr [rbp - 0xd4]","mov esi, eax","mov edi, 0x400a38","mov eax, 0",call 0x400470,"mov eax, dword ptr [rbp - 0xd0]","cmp eax, 0x30",jae 0x4008ab,"mov rax, qword ptr [rbp - 0xc0]","mov edx, dword ptr [rbp - 0xd0]","mov edx, edx","add rax, rdx","mov edx, dword ptr [rbp - 0xd0]","add edx, 8","mov dword ptr [rbp - 0xd0], edx",jmp 0x4008bd,"mov rax, qword ptr [rbp - 0xc8]","lea rdx, [rax + 8]","mov qword ptr [rbp - 0xc8], rdx","mov eax, dword ptr [rax]","mov dword ptr [rbp - 0xd4], eax","mov eax, dword ptr [rbp - 0xd4]","mov esi, eax","mov edi, 0x400a38","mov eax, 0",call 0x400470,"mov eax, dword ptr [rbp - 0xd0]","cmp eax, 0x30",jae 0x40090a,"mov rax, qword ptr [rbp - 0xc0]","mov edx, dword ptr [rbp - 0xd0]","mov edx, edx","add rax, rdx","mov edx, dword ptr [rbp - 0xd0]","add edx, 8","mov dword ptr [rbp - 0xd0], edx",jmp 0x40091c,"mov rax, qword ptr [rbp - 0xc8]","lea rdx, [rax + 8]","mov qword ptr [rbp - 0xc8], rdx","mov eax, dword ptr [rax]","mov dword ptr [rbp - 0xd4], eax","mov eax, dword ptr [rbp - 0xd4]","mov esi, eax","mov edi, 0x400a38","mov eax, 0",call 0x400470,"mov eax, 0","mov rcx, qword ptr [rbp - 0xb8]","xor rcx, qword ptr fs:[0x28]",je 0x400957,call 0x400460,leave ,ret ,nop dword ptr [rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20049e]",push rbp,"lea rbp, [rip + 0x20049e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x4009b6,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x4009a0,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
3,infileELF/randgen,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4006a0","mov rcx, 0x400630","mov rdi, 0x4005f6",call 0x4004b0,hlt ,nop word ptr [rax + rax],"mov eax, 0x601057",push rbp,"sub rax, 0x601050","cmp rax, 0xe","mov rbp, rsp",jbe 0x400560,"mov eax, 0","test rax, rax",je 0x400560,pop rbp,"mov edi, 0x601050",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601050",push rbp,"sub rsi, 0x601050","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x4005a8,"mov eax, 0","test rax, rax",je 0x4005a8,pop rbp,"mov edi, 0x601050",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200a99], 0",jne 0x4005ca,push rbp,"mov rbp, rsp",call 0x400530,pop rbp,"mov byte ptr [rip + 0x200a86], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x4005e0,jmp 0x400570,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x4005db,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400570,push rbp,"mov rbp, rsp","mov edi, 0",call 0x4004d0,"mov edi, eax",call 0x4004c0,call 0x4004e0,"mov esi, eax","mov edi, 0x4006b4","mov eax, 0",call 0x4004a0,jmp 0x40060b,nop word ptr cs:[rax + rax],nop dword ptr [rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2007ce]",push rbp,"lea rbp, [rip + 0x2007ce]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400468,"test rbp, rbp",je 0x400686,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400670,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
4,infileELF/matrix_sample,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x400b80","mov rcx, 0x400b10","mov rdi, 0x400975",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov qword ptr [rbp - 0x18], rdi","mov dword ptr [rbp - 8], 0",jmp 0x400608,"mov dword ptr [rbp - 4], 0",jmp 0x4005fe,"mov rax, qword ptr [rbp - 0x18]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 8]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 4]",cdqe ,"add rax, rdx","shl rax, 3","add rax, rcx","mov rcx, qword ptr [rax]","mov edx, dword ptr [rbp - 4]","mov eax, dword ptr [rbp - 8]","mov qword ptr [rbp - 0x20], rcx","movsd xmm0, qword ptr [rbp - 0x20]","mov esi, eax","mov edi, 0x400b98","mov eax, 1",call 0x400470,"add dword ptr [rbp - 4], 1","cmp dword ptr [rbp - 4], 2",jle 0x4005b4,"add dword ptr [rbp - 8], 1","cmp dword ptr [rbp - 8], 2",jle 0x4005ab,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x90","mov qword ptr [rbp - 0x88], rdi","mov qword ptr [rbp - 0x90], rsi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov dword ptr [rbp - 0x74], 0",jmp 0x400662,"mov dword ptr [rbp - 0x70], 0",jmp 0x400658,"pxor xmm0, xmm0","movsd qword ptr [rbp + 0x10], xmm0","add dword ptr [rbp - 0x70], 1","cmp dword ptr [rbp - 0x70], 2",jle 0x40064b,"add dword ptr [rbp - 0x74], 1","cmp dword ptr [rbp - 0x74], 2",jle 0x400642,"mov dword ptr [rbp - 0x60], 3","mov dword ptr [rbp - 0x5c], 3","mov dword ptr [rbp - 0x6c], 0",jmp 0x400752,"mov dword ptr [rbp - 0x68], 0",jmp 0x400744,"mov dword ptr [rbp - 0x64], 0",jmp 0x400736,"mov eax, dword ptr [rbp - 0x68]","movsxd rcx, eax","mov eax, dword ptr [rbp - 0x6c]","movsxd rdx, eax","mov rax, rdx","add rax, rax","add rax, rdx","add rax, rcx","movsd xmm1, qword ptr [rbp + rax*8 - 0x50]","mov rax, qword ptr [rbp - 0x88]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 0x6c]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 0x64]",cdqe ,"add rax, rdx","shl rax, 3","add rax, rcx","movsd xmm2, qword ptr [rax]","mov rax, qword ptr [rbp - 0x90]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 0x64]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 0x68]",cdqe ,"add rax, rdx","shl rax, 3","add rax, rcx","movsd xmm0, qword ptr [rax]","mulsd xmm0, xmm2","addsd xmm0, xmm1","mov eax, dword ptr [rbp - 0x68]","movsxd rcx, eax","mov eax, dword ptr [rbp - 0x6c]","movsxd rdx, eax","mov rax, rdx","add rax, rax","add rax, rdx","add rax, rcx","movsd qword ptr [rbp + rax*8 - 0x50], xmm0","add dword ptr [rbp - 0x64], 1","cmp dword ptr [rbp - 0x64], 2",jle 0x40069a,"add dword ptr [rbp - 0x68], 1","cmp dword ptr [rbp - 0x68], 2",jle 0x40068e,"add dword ptr [rbp - 0x6c], 1","cmp dword ptr [rbp - 0x6c], 2",jle 0x400682,"lea rax, [rbp - 0x50]","mov qword ptr [rbp - 0x58], rax","mov rax, qword ptr [rbp - 0x88]","lea rdx, [rbp - 0x50]","mov qword ptr [rax + 8], rdx","mov rax, qword ptr [rbp - 0x88]","mov rdi, rax",call 0x400596,"mov rax, qword ptr [rbp - 0x88]","mov rsi, qword ptr [rbp - 8]","xor rsi, qword ptr fs:[0x28]",je 0x40079d,call 0x400460,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x90","mov qword ptr [rbp - 0x88], rdi","mov qword ptr [rbp - 0x90], rsi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov dword ptr [rbp - 0x7c], 0",jmp 0x4007f0,"mov dword ptr [rbp - 0x78], 0",jmp 0x4007e6,"pxor xmm0, xmm0","movsd qword ptr [rbp + 0x10], xmm0","add dword ptr [rbp - 0x78], 1","cmp dword ptr [rbp - 0x78], 2",jle 0x4007d9,"add dword ptr [rbp - 0x7c], 1","cmp dword ptr [rbp - 0x7c], 2",jle 0x4007d0,"mov dword ptr [rbp - 0x60], 3","mov dword ptr [rbp - 0x5c], 3","mov dword ptr [rbp - 0x74], 0",jmp 0x4008e0,"mov dword ptr [rbp - 0x70], 0",jmp 0x4008d2,"mov dword ptr [rbp - 0x6c], 0",jmp 0x4008c4,"mov eax, dword ptr [rbp - 0x70]","movsxd rcx, eax","mov eax, dword ptr [rbp - 0x74]","movsxd rdx, eax","mov rax, rdx","add rax, rax","add rax, rdx","add rax, rcx","movsd xmm1, qword ptr [rbp + rax*8 - 0x50]","mov rax, qword ptr [rbp - 0x88]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 0x74]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 0x6c]",cdqe ,"add rax, rdx","shl rax, 3","add rax, rcx","movsd xmm2, qword ptr [rax]","mov rax, qword ptr [rbp - 0x90]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 0x6c]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 0x70]",cdqe ,"add rax, rdx","shl rax, 3","add rax, rcx","movsd xmm0, qword ptr [rax]","mulsd xmm0, xmm2","addsd xmm0, xmm1","mov eax, dword ptr [rbp - 0x70]","movsxd rcx, eax","mov eax, dword ptr [rbp - 0x74]","movsxd rdx, eax","mov rax, rdx","add rax, rax","add rax, rdx","add rax, rcx","movsd qword ptr [rbp + rax*8 - 0x50], xmm0","add dword ptr [rbp - 0x6c], 1","cmp dword ptr [rbp - 0x6c], 2",jle 0x400828,"add dword ptr [rbp - 0x70], 1","cmp dword ptr [rbp - 0x70], 2",jle 0x40081c,"add dword ptr [rbp - 0x74], 1","cmp dword ptr [rbp - 0x74], 2",jle 0x400810,"mov dword ptr [rbp - 0x68], 0",jmp 0x400952,"mov dword ptr [rbp - 0x64], 0",jmp 0x400948,"mov rax, qword ptr [rbp - 0x88]","mov rcx, qword ptr [rax + 8]","mov edx, dword ptr [rbp - 0x68]","mov eax, edx","add eax, eax","add eax, edx","movsxd rdx, eax","mov eax, dword ptr [rbp - 0x64]",cdqe ,"add rax, rdx","shl rax, 3","add rcx, rax","mov eax, dword ptr [rbp - 0x64]","movsxd rsi, eax","mov eax, dword ptr [rbp - 0x68]","movsxd rdx, eax","mov rax, rdx","add rax, rax","add rax, rdx","add rax, rsi","movsd xmm0, qword ptr [rbp + rax*8 - 0x50]","movsd qword ptr [rcx], xmm0","add dword ptr [rbp - 0x64], 1","cmp dword ptr [rbp - 0x64], 2",jle 0x4008fc,"add dword ptr [rbp - 0x68], 1","cmp dword ptr [rbp - 0x68], 2",jle 0x4008f3,"mov rax, qword ptr [rbp - 0x88]","mov rdi, qword ptr [rbp - 8]","xor rdi, qword ptr fs:[0x28]",je 0x400973,call 0x400460,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0xd0","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","movsd xmm0, qword ptr [rip + 0x219]","movsd qword ptr [rbp - 0xa0], xmm0","movsd xmm0, qword ptr [rip + 0x211]","movsd qword ptr [rbp - 0x98], xmm0","movsd xmm0, qword ptr [rip + 0x209]","movsd qword ptr [rbp - 0x90], xmm0","movsd xmm0, qword ptr [rip + 0x201]","movsd qword ptr [rbp - 0x88], xmm0","movsd xmm0, qword ptr [rip + 0x1f9]","movsd qword ptr [rbp - 0x80], xmm0","movsd xmm0, qword ptr [rip + 0x1f4]","movsd qword ptr [rbp - 0x78], xmm0","movsd xmm0, qword ptr [rip + 0x1ef]","movsd qword ptr [rbp - 0x70], xmm0","movsd xmm0, qword ptr [rip + 0x1ea]","movsd qword ptr [rbp - 0x68], xmm0","movsd xmm0, qword ptr [rip + 0x1e5]","movsd qword ptr [rbp - 0x60], xmm0","movsd xmm0, qword ptr [rip + 0x198]","movsd qword ptr [rbp - 0x50], xmm0","movsd xmm0, qword ptr [rip + 0x193]","movsd qword ptr [rbp - 0x48], xmm0","movsd xmm0, qword ptr [rip + 0x18e]","movsd qword ptr [rbp - 0x40], xmm0","movsd xmm0, qword ptr [rip + 0x189]","movsd qword ptr [rbp - 0x38], xmm0","movsd xmm0, qword ptr [rip + 0x184]","movsd qword ptr [rbp - 0x30], xmm0","movsd xmm0, qword ptr [rip + 0x17f]","movsd qword ptr [rbp - 0x28], xmm0","movsd xmm0, qword ptr [rip + 0x17a]","movsd qword ptr [rbp - 0x20], xmm0","movsd xmm0, qword ptr [rip + 0x175]","movsd qword ptr [rbp - 0x18], xmm0","movsd xmm0, qword ptr [rip + 0x170]","movsd qword ptr [rbp - 0x10], xmm0","mov dword ptr [rbp - 0xc0], 3","mov dword ptr [rbp - 0xbc], 3","lea rax, [rbp - 0xa0]","mov qword ptr [rbp - 0xb8], rax","mov dword ptr [rbp - 0xb0], 3","mov dword ptr [rbp - 0xac], 3","lea rax, [rbp - 0x50]","mov qword ptr [rbp - 0xa8], rax","lea rdx, [rbp - 0xb0]","lea rax, [rbp - 0xc0]","mov rsi, rdx","mov rdi, rax",call 0x40079f,"mov qword ptr [rbp - 0xc8], rax","mov rax, qword ptr [rbp - 0xc8]","mov rdi, rax",call 0x400596,"mov eax, 0","mov rcx, qword ptr [rbp - 8]","xor rcx, qword ptr fs:[0x28]",je 0x400b0e,call 0x400460,leave ,ret ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2002ee]",push rbp,"lea rbp, [rip + 0x2002ee]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x400b66,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400b50,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
5,infileELF/convention_64,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x400650","mov rcx, 0x4005e0","mov rdi, 0x40058e",call 0x400410,hlt ,nop word ptr [rax + rax],"mov eax, 0x60103f",push rbp,"sub rax, 0x601038","cmp rax, 0xe","mov rbp, rsp",jbe 0x400490,"mov eax, 0","test rax, rax",je 0x400490,pop rbp,"mov edi, 0x601038",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601038",push rbp,"sub rsi, 0x601038","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x4004d8,"mov eax, 0","test rax, rax",je 0x4004d8,pop rbp,"mov edi, 0x601038",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200b51], 0",jne 0x4004fa,push rbp,"mov rbp, rsp",call 0x400460,pop rbp,"mov byte ptr [rip + 0x200b3e], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400510,jmp 0x4004a0,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40050b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x4004a0,push rbp,"mov rbp, rsp","sub rsp, 0x30","mov dword ptr [rbp - 0x14], edi","mov dword ptr [rbp - 0x18], esi","mov dword ptr [rbp - 0x1c], edx","mov dword ptr [rbp - 0x20], ecx","mov dword ptr [rbp - 0x24], r8d","mov dword ptr [rbp - 0x28], r9d","mov edx, dword ptr [rbp - 0x14]","mov eax, dword ptr [rbp - 0x18]","add edx, eax","mov eax, dword ptr [rbp - 0x1c]","add edx, eax","mov eax, dword ptr [rbp - 0x20]","add edx, eax","mov eax, dword ptr [rbp - 0x24]","add edx, eax","mov eax, dword ptr [rbp - 0x28]","add edx, eax","mov eax, dword ptr [rbp + 0x10]","add edx, eax","mov eax, dword ptr [rbp + 0x18]","add edx, eax","mov eax, dword ptr [rbp + 0x20]","add edx, eax","mov eax, dword ptr [rbp + 0x28]","add eax, edx","mov dword ptr [rbp - 4], eax","mov eax, dword ptr [rbp - 4]","mov esi, eax","mov edi, 0x400664","mov eax, 0",call 0x400400,"mov eax, dword ptr [rbp - 4]",leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10",push 0xa,push 9,push 8,push 7,"mov r9d, 6","mov r8d, 5","mov ecx, 4","mov edx, 3","mov esi, 2","mov edi, 1",call 0x400526,"add rsp, 0x20","mov dword ptr [rbp - 4], eax","mov eax, 0",leave ,ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax + rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20081e]",push rbp,"lea rbp, [rip + 0x20081e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x4003c8,"test rbp, rbp",je 0x400636,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400620,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
6,infileELF/syslog_sample,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x400660","mov rcx, 0x4005f0","mov rdi, 0x4005b6",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x60104f",push rbp,"sub rax, 0x601048","cmp rax, 0xe","mov rbp, rsp",jbe 0x400520,"mov eax, 0","test rax, rax",je 0x400520,pop rbp,"mov edi, 0x601048",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601048",push rbp,"sub rsi, 0x601048","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400568,"mov eax, 0","test rax, rax",je 0x400568,pop rbp,"mov edi, 0x601048",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ad1], 0",jne 0x40058a,push rbp,"mov rbp, rsp",call 0x4004f0,pop rbp,"mov byte ptr [rip + 0x200abe], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x4005a0,jmp 0x400530,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40059b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400530,push rbp,"mov rbp, rsp","mov edx, 8","mov esi, 3","mov edi, 0x400678",call 0x4004a0,"mov esi, 0x400680","mov edi, 6","mov eax, 0",call 0x400490,call 0x400470,"mov eax, 0",pop rbp,ret ,nop ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20080e]",push rbp,"lea rbp, [rip + 0x20080e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400440,"test rbp, rbp",je 0x400646,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400630,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
7,infileELF/setValue,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4008b0","mov rcx, 0x400840","mov rdi, 0x400802",call 0x400530,hlt ,nop word ptr [rax + rax],"mov eax, 0x60105f",push rbp,"sub rax, 0x601058","cmp rax, 0xe","mov rbp, rsp",jbe 0x4005d0,"mov eax, 0","test rax, rax",je 0x4005d0,pop rbp,"mov edi, 0x601058",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601058",push rbp,"sub rsi, 0x601058","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400618,"mov eax, 0","test rax, rax",je 0x400618,pop rbp,"mov edi, 0x601058",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200a31], 0",jne 0x40063a,push rbp,"mov rbp, rsp",call 0x4005a0,pop rbp,"mov byte ptr [rip + 0x200a1e], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400650,jmp 0x4005e0,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40064b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x4005e0,push rbp,"mov rbp, rsp","sub rsp, 0x30","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov edi, 0x4008c4","mov eax, 0",call 0x400520,call 0x400540,"mov byte ptr [rbp - 0x28], al",call 0x400540,"mov byte ptr [rbp - 0x27], al","mov byte ptr [rbp - 0x26], 0x20","mov byte ptr [rbp - 0x25], 3","mov byte ptr [rbp - 0x24], 1","mov byte ptr [rbp - 0x23], 2","movzx eax, byte ptr [rbp - 0x26]","xor eax, 0x59","mov byte ptr [rbp - 0x22], al","movzx eax, byte ptr [rbp - 0x28]","cmp al, byte ptr [rbp - 0x22]",jne 0x40075a,"movzx eax, byte ptr [rbp - 0x26]","xor eax, 0x41","mov byte ptr [rbp - 0x21], al","movzx eax, byte ptr [rbp - 0x27]","cmp al, byte ptr [rbp - 0x21]",jne 0x40074e,"mov byte ptr [rbp - 0x20], 0xff","mov byte ptr [rbp - 0x1f], 0xff","mov byte ptr [rbp - 0x1e], 0xff","mov byte ptr [rbp - 0x1d], 0xff","mov byte ptr [rbp - 0x1c], 0xff","mov byte ptr [rbp - 0x1b], 0xff","mov byte ptr [rbp - 0x1a], 0xff","mov byte ptr [rbp - 0x19], 0xff","mov byte ptr [rbp - 0x18], 0","movzx eax, byte ptr [rbp - 0x25]","add eax, 0x76","mov byte ptr [rbp - 0x20], al","movzx eax, byte ptr [rbp - 0x24]","add eax, 0x60","mov byte ptr [rbp - 0x1f], al","movzx eax, byte ptr [rbp - 0x23]","add eax, 0x69","mov byte ptr [rbp - 0x1e], al","mov byte ptr [rbp - 0x1d], 0x31","mov byte ptr [rbp - 0x1c], 0x6e","mov byte ptr [rbp - 0x1b], 0x31","mov byte ptr [rbp - 0x1a], 0x6b","mov byte ptr [rbp - 0x19], 0x75","mov edi, 0x4008c9",call 0x400500,"lea rax, [rbp - 0x20]","mov rsi, rax","mov edi, 0x4008d5","mov eax, 0",call 0x400520,jmp 0x400764,"mov edi, 0x4008df",call 0x400500,jmp 0x400764,"mov edi, 0x4008df",call 0x400500,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400779,call 0x400510,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10","mov dword ptr [rbp - 4], 0","mov ecx, 0","mov edx, 1","mov esi, 0","mov edi, 0","mov eax, 0",call 0x400550,"test rax, rax",jne 0x4007b4,"mov dword ptr [rbp - 4], 2","mov ecx, 0","mov edx, 1","mov esi, 0","mov edi, 0","mov eax, 0",call 0x400550,"cmp rax, -1",jne 0x4007e4,"mov edx, dword ptr [rbp - 4]","mov eax, edx","add eax, eax","add eax, edx","mov dword ptr [rbp - 4], eax","cmp dword ptr [rbp - 4], 6",je 0x4007fb,"mov edi, 0x4008ea",call 0x400500,"mov eax, 0",jmp 0x400800,"mov eax, 1",leave ,ret ,push rbp,"mov rbp, rsp","mov eax, 0",call 0x40077b,"test eax, eax",je 0x400820,"mov eax, 0",call 0x400666,jmp 0x40082a,"mov edi, 0x4008fc",call 0x400500,"mov eax, 0",pop rbp,ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax + rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2005be]",push rbp,"lea rbp, [rip + 0x2005be]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x4004d0,"test rbp, rbp",je 0x400896,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400880,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
8,infileELF/heap,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4007b0","mov rcx, 0x400740","mov rdi, 0x4005f6",call 0x4004d0,hlt ,nop word ptr [rax + rax],"mov eax, 0x601057",push rbp,"sub rax, 0x601050","cmp rax, 0xe","mov rbp, rsp",jbe 0x400560,"mov eax, 0","test rax, rax",je 0x400560,pop rbp,"mov edi, 0x601050",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601050",push rbp,"sub rsi, 0x601050","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x4005a8,"mov eax, 0","test rax, rax",je 0x4005a8,pop rbp,"mov edi, 0x601050",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200a99], 0",jne 0x4005ca,push rbp,"mov rbp, rsp",call 0x400530,pop rbp,"mov byte ptr [rip + 0x200a86], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x4005e0,jmp 0x400570,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x4005db,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400570,push rbp,"mov rbp, rsp","sub rsp, 0x60","mov qword ptr [rbp - 0x58], 0x4007c4","mov edi, 1",call 0x4004e0,"mov qword ptr [rbp - 0x50], rax","mov edi, 1",call 0x4004e0,"mov qword ptr [rbp - 0x48], rax","mov edi, 6",call 0x4004e0,"mov qword ptr [rbp - 0x40], rax","mov edi, 6",call 0x4004e0,"mov qword ptr [rbp - 0x38], rax","mov edi, 0x10",call 0x4004e0,"mov qword ptr [rbp - 0x30], rax","mov edi, 0x11",call 0x4004e0,"mov qword ptr [rbp - 0x28], rax","mov edi, 0x12",call 0x4004e0,"mov qword ptr [rbp - 0x20], rax","mov edi, 0x20",call 0x4004e0,"mov qword ptr [rbp - 0x18], rax","mov edi, 0x3f",call 0x4004e0,"mov qword ptr [rbp - 0x10], rax","mov edi, 0x4007d9",call 0x4004c0,"mov edi, 0x1000000",call 0x4004e0,"mov qword ptr [rbp - 8], rax","mov dword ptr [rbp - 0x5c], 0xff","mov rcx, qword ptr [rbp - 0x58]","mov rax, qword ptr [rbp - 0x18]","mov edx, 0x20","mov rsi, rcx","mov rdi, rax",call 0x4004b0,"mov rax, qword ptr [rbp - 0x30]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x50]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x48]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x40]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x38]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x28]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x20]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x18]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 0x10]","mov rdi, rax",call 0x4004a0,"mov rax, qword ptr [rbp - 8]","mov rdi, rax",call 0x4004a0,"mov eax, 0",leave ,ret ,nop word ptr [rax + rax],push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2006be]",push rbp,"lea rbp, [rip + 0x2006be]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400470,"test rbp, rbp",je 0x400796,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400780,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
9,infileELF/test_int_32bit,"xor ebp, ebp",pop esi,"mov ecx, esp","and esp, 0xfffffff0",push eax,push esp,push edx,call 0x472,"add ebx, 0x1b84","lea eax, [ebx - 0x1954]",push eax,"lea eax, [ebx - 0x19b4]",push eax,push ecx,push esi,push dword ptr [ebx + 0x24],call 0x420,hlt ,"mov ebx, dword ptr [esp]",ret ,nop ,nop ,nop ,nop ,nop ,"mov ebx, dword ptr [esp]",ret ,nop ,nop ,nop ,nop ,nop ,nop ,call 0x579,"add edx, 0x1b3f","lea ecx, [edx + 0x34]","lea eax, [edx + 0x34]","cmp eax, ecx",je 0x4c8,"mov eax, dword ptr [edx + 0x18]","test eax, eax",je 0x4c8,push ebp,"mov ebp, esp","sub esp, 0x14",push ecx,call eax,"add esp, 0x10",leave ,ret ,nop ,"lea esi, [esi]",ret ,"lea esi, [esi]",call 0x579,"add edx, 0x1aff",push ebp,"lea ecx, [edx + 0x34]","lea eax, [edx + 0x34]","sub eax, ecx","mov ebp, esp",push ebx,"sar eax, 2","mov ebx, eax","sub esp, 4","shr ebx, 0x1f","add eax, ebx","sar eax, 1",je 0x512,"mov edx, dword ptr [edx + 0x28]","test edx, edx",je 0x512,"sub esp, 8",push eax,push ecx,call edx,"add esp, 0x10","mov ebx, dword ptr [ebp - 4]",leave ,ret ,"mov esi, esi","lea edi, [edi]",push ebp,"mov ebp, esp",push ebx,call 0x480,"add ebx, 0x1aab","sub esp, 4","cmp byte ptr [ebx + 0x34], 0",jne 0x562,"mov eax, dword ptr [ebx + 0x1c]","test eax, eax",je 0x556,"sub esp, 0xc",push dword ptr [ebx + 0x30],call 0x430,"add esp, 0x10",call 0x490,"mov byte ptr [ebx + 0x34], 1","mov ebx, dword ptr [ebp - 4]",leave ,ret ,"mov esi, esi","lea edi, [edi]",push ebp,"mov ebp, esp",pop ebp,jmp 0x4d0,"mov edx, dword ptr [esp]",ret ,"lea ecx, [esp + 4]","and esp, 0xfffffff0",push dword ptr [ecx - 4],push ebp,"mov ebp, esp",push edi,push esi,push ebx,push ecx,"sub esp, 0xb8",call 0x480,"add ebx, 0x1a3b","mov eax, dword ptr gs:[0x14]","mov dword ptr [ebp - 0x1c], eax","xor eax, eax","lea eax, [ebp - 0xbc]","lea edx, [ebx - 0x18d4]","mov ecx, 0x28","mov edi, eax","mov esi, edx","rep movsd dword ptr es:[edi], dword ptr [esi]","mov dword ptr [ebp - 0xc0], 0",jmp 0x5f4,"mov eax, dword ptr [ebp - 0xc0]","mov eax, dword ptr [ebp + eax*4 - 0xbc]","sub esp, 8",push eax,"lea eax, [ebx - 0x18f4]",push eax,call 0x400,"add esp, 0x10","add dword ptr [ebp - 0xc0], 1","cmp dword ptr [ebp - 0xc0], 0x27",jle 0x5cd,"mov eax, 0","mov edx, dword ptr [ebp - 0x1c]","xor edx, dword ptr gs:[0x14]",je 0x613,call 0x690,"lea esp, [ebp - 0x10]",pop ecx,pop ebx,pop esi,pop edi,pop ebp,"lea esp, [ecx - 4]",ret ,nop ,push ebp,push edi,push esi,push ebx,call 0x480,"add ebx, 0x19ab","sub esp, 0xc","mov ebp, dword ptr [esp + 0x28]","lea esi, [ebx - 0xfc]",call 0x3c0,"lea eax, [ebx - 0x100]","sub esi, eax","sar esi, 2","test esi, esi",je 0x675,"xor edi, edi","lea esi, [esi]","sub esp, 4",push ebp,push dword ptr [esp + 0x2c],push dword ptr [esp + 0x2c],call dword ptr [ebx + edi*4 - 0x100],"add edi, 1","add esp, 0x10","cmp esi, edi",jne 0x658,"add esp, 0xc",pop ebx,pop esi,pop edi,pop ebp,ret ,"lea esi, [esi]",ret ,nop ,nop ,nop ,nop ,nop ,nop ,nop ,push ebx,call 0x480,"add ebx, 0x193e","sub esp, 8",call 0x410,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
10,infileELF/convention_86,"xor ebp, ebp",pop esi,"mov ecx, esp","and esp, 0xfffffff0",push eax,push esp,push edx,push 0x8048500,push 0x80484a0,push ecx,push esi,push 0x804845c,call 0x80482f0,hlt ,nop ,nop ,nop ,nop ,nop ,nop ,nop ,"mov ebx, dword ptr [esp]",ret ,nop ,nop ,nop ,nop ,nop ,nop ,"mov eax, 0x804a01f","sub eax, 0x804a01c","cmp eax, 6",jbe 0x8048379,"mov eax, 0","test eax, eax",je 0x8048379,push ebp,"mov ebp, esp","sub esp, 0x14",push 0x804a01c,call eax,"add esp, 0x10",leave ,ret ,nop ,"lea esi, [esi]","mov eax, 0x804a01c","sub eax, 0x804a01c","sar eax, 2","mov edx, eax","shr edx, 0x1f","add eax, edx","sar eax, 1",je 0x80483b3,"mov edx, 0","test edx, edx",je 0x80483b3,push ebp,"mov ebp, esp","sub esp, 0x10",push eax,push 0x804a01c,call edx,"add esp, 0x10",leave ,ret ,"lea esi, [esi]","lea edi, [edi]","cmp byte ptr [0x804a01c], 0",jne 0x80483dc,push ebp,"mov ebp, esp","sub esp, 8",call 0x8048350,"mov byte ptr [0x804a01c], 1",leave ,ret ,nop ,"mov eax, 0x8049f10","mov edx, dword ptr [eax]","test edx, edx",jne 0x80483f0,jmp 0x8048380,"lea esi, [esi]","mov edx, 0","test edx, edx",je 0x80483eb,push ebp,"mov ebp, esp","sub esp, 0x14",push eax,call edx,"add esp, 0x10",leave ,jmp 0x8048380,push ebp,"mov ebp, esp","sub esp, 0x18","mov edx, dword ptr [ebp + 8]","mov eax, dword ptr [ebp + 0xc]","add edx, eax","mov eax, dword ptr [ebp + 0x10]","add edx, eax","mov eax, dword ptr [ebp + 0x14]","add edx, eax","mov eax, dword ptr [ebp + 0x18]","add edx, eax","mov eax, dword ptr [ebp + 0x1c]","add edx, eax","mov eax, dword ptr [ebp + 0x20]","add edx, eax","mov eax, dword ptr [ebp + 0x24]","add edx, eax","mov eax, dword ptr [ebp + 0x28]","add edx, eax","mov eax, dword ptr [ebp + 0x2c]","add eax, edx","mov dword ptr [ebp - 0xc], eax","sub esp, 8",push dword ptr [ebp - 0xc],push 0x8048520,call 0x80482e0,"add esp, 0x10","mov eax, dword ptr [ebp - 0xc]",leave ,ret ,"lea ecx, [esp + 4]","and esp, 0xfffffff0",push dword ptr [ecx - 4],push ebp,"mov ebp, esp",push ecx,"sub esp, 0x14","sub esp, 8",push 0xa,push 9,push 8,push 7,push 6,push 5,push 4,push 3,push 2,push 1,call 0x804840b,"add esp, 0x30","mov dword ptr [ebp - 0xc], eax","mov eax, 0","mov ecx, dword ptr [ebp - 4]",leave ,"lea esp, [ecx - 4]",ret ,nop ,nop ,push ebp,push edi,push esi,push ebx,call 0x8048340,"add ebx, 0x1b57","sub esp, 0xc","mov ebp, dword ptr [esp + 0x20]","lea esi, [ebx - 0xf4]",call 0x80482ac,"lea eax, [ebx - 0xf8]","sub esi, eax","sar esi, 2","test esi, esi",je 0x80484f5,"xor edi, edi","lea esi, [esi]","sub esp, 4",push dword ptr [esp + 0x2c],push dword ptr [esp + 0x2c],push ebp,call dword ptr [ebx + edi*4 - 0xf8],"add edi, 1","add esp, 0x10","cmp edi, esi",jne 0x80484d8,"add esp, 0xc",pop ebx,pop esi,pop edi,pop ebp,ret ,"lea esi, [esi]",ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
11,infileELF/array_double,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x4006a0","mov rcx, 0x400630","mov rdi, 0x400596",call 0x400480,hlt ,nop word ptr [rax + rax],"mov eax, 0x601047",push rbp,"sub rax, 0x601040","cmp rax, 0xe","mov rbp, rsp",jbe 0x400500,"mov eax, 0","test rax, rax",je 0x400500,pop rbp,"mov edi, 0x601040",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x601040",push rbp,"sub rsi, 0x601040","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400548,"mov eax, 0","test rax, rax",je 0x400548,pop rbp,"mov edi, 0x601040",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x200ae9], 0",jne 0x40056a,push rbp,"mov rbp, rsp",call 0x4004d0,pop rbp,"mov byte ptr [rip + 0x200ad6], 1",ret ,nop dword ptr [rax],"mov edi, 0x600e20","cmp qword ptr [rdi], 0",jne 0x400580,jmp 0x400510,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x40057b,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400510,push rbp,"mov rbp, rsp","sub rsp, 0x170","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0x150]","mov esi, 0x400700","mov edx, 0x28","mov rdi, rax","mov rcx, rdx","rep movsq qword ptr [rdi], qword ptr [rsi]","mov dword ptr [rbp - 0x154], 0",jmp 0x40060b,"mov eax, dword ptr [rbp - 0x154]",cdqe ,"mov rax, qword ptr [rbp + rax*8 - 0x150]","mov qword ptr [rbp - 0x168], rax","movsd xmm0, qword ptr [rbp - 0x168]","mov edi, 0x4006e0","mov eax, 1",call 0x400470,"add dword ptr [rbp - 0x154], 1","cmp dword ptr [rbp - 0x154], 0x27",jle 0x4005d6,"mov eax, 0","mov rdx, qword ptr [rbp - 8]","xor rdx, qword ptr fs:[0x28]",je 0x40062d,call 0x400460,leave ,ret ,nop ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x2007ce]",push rbp,"lea rbp, [rip + 0x2007ce]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x400428,"test rbp, rbp",je 0x400686,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400670,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
12,infileELF/ptrace,"xor ebp, ebp","mov r9, rdx",pop rsi,"mov rdx, rsp","and rsp, 0xfffffffffffffff0",push rax,push rsp,"mov r8, 0x400e60","mov rcx, 0x400df0","mov rdi, 0x400c6c",call 0x400660,hlt ,nop word ptr [rax + rax],"mov eax, 0x602087",push rbp,"sub rax, 0x602080","cmp rax, 0xe","mov rbp, rsp",jbe 0x400740,"mov eax, 0","test rax, rax",je 0x400740,pop rbp,"mov edi, 0x602080",jmp rax,nop word ptr [rax + rax],pop rbp,ret ,nop dword ptr [rax],nop word ptr cs:[rax + rax],"mov esi, 0x602080",push rbp,"sub rsi, 0x602080","sar rsi, 3","mov rbp, rsp","mov rax, rsi","shr rax, 0x3f","add rsi, rax","sar rsi, 1",je 0x400788,"mov eax, 0","test rax, rax",je 0x400788,pop rbp,"mov edi, 0x602080",jmp rax,nop dword ptr [rax],pop rbp,ret ,nop word ptr [rax + rax],"cmp byte ptr [rip + 0x2018e9], 0",jne 0x4007aa,push rbp,"mov rbp, rsp",call 0x400710,pop rbp,"mov byte ptr [rip + 0x2018d6], 1",ret ,nop dword ptr [rax],"mov edi, 0x601e20","cmp qword ptr [rdi], 0",jne 0x4007c0,jmp 0x400750,nop dword ptr [rax],"mov eax, 0","test rax, rax",je 0x4007bb,push rbp,"mov rbp, rsp",call rax,pop rbp,jmp 0x400750,push rbp,"mov rbp, rsp","sub rsp, 0xf0","mov dword ptr [rbp - 0xe4], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","lea rax, [rbp - 0xe0]","mov edx, 0xd8","mov esi, 0","mov rdi, rax",call 0x400650,"lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xc","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0x70]","mov rsi, rax","mov edi, 0x400e98","mov eax, 0",call 0x400640,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400860,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 0x10","mov eax, 0",call 0x400690,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x14]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x4008c5,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","mov qword ptr [rbp - 0x18], rdi","mov qword ptr [rbp - 8], 0","mov rax, qword ptr [rbp - 0x18]","shl rax, 0x38","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff00","shl rax, 0x28","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff0000","shl rax, 0x18","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","and eax, 0xff000000","shl rax, 8","add qword ptr [rbp - 8], rax","movabs rax, 0xff00000000","and rax, qword ptr [rbp - 0x18]","sar rax, 8","add qword ptr [rbp - 8], rax","movabs rax, 0xff0000000000","and rax, qword ptr [rbp - 0x18]","sar rax, 0x18","add qword ptr [rbp - 8], rax","movabs rax, 0xff000000000000","and rax, qword ptr [rbp - 0x18]","sar rax, 0x28","add qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 0x18]","shr rax, 0x38","mov rdx, rax","mov rax, qword ptr [rbp - 8]","add rax, rdx","mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]",pop rbp,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10","movabs rax, 0x1122334455667788","mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]","mov rdi, rax",call 0x4008c7,"mov rsi, rax","mov edi, 0x400ea5","mov eax, 0",call 0x400640,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov qword ptr [rbp - 0x20], rsi","mov rdx, qword ptr [rbp - 0x20]","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov esi, eax","mov edi, 1","mov eax, 0",call 0x400690,"mov qword ptr [rbp - 8], rax","mov rax, qword ptr [rbp - 8]","mov rdi, rax",call 0x4008c7,"mov rsi, rax","mov edi, 0x400eac","mov eax, 0",call 0x400640,"mov rax, qword ptr [rbp - 8]","mov al, 0","or al, 0xcc","mov rcx, rax","mov rdx, qword ptr [rbp - 0x20]","mov eax, dword ptr [rbp - 0x14]","mov esi, eax","mov edi, 4","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0x20]","mov rsi, rax","mov edi, 0x400ec4","mov eax, 0",call 0x400640,"mov rax, qword ptr [rbp - 8]",leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x100","mov dword ptr [rbp - 0xe4], edi","mov qword ptr [rbp - 0xf0], rsi","mov qword ptr [rbp - 0xf8], rdx","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov esi, 0x10","mov edi, 0x400ed7","mov eax, 0",call 0x400640,"lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xc","mov eax, 0",call 0x400690,"mov rax, qword ptr [rbp - 0xf0]","mov qword ptr [rbp - 0x60], rax","lea rdx, [rbp - 0xe0]","mov eax, dword ptr [rbp - 0xe4]","mov rcx, rdx","mov edx, 0","mov esi, eax","mov edi, 0xd","mov eax, 0",call 0x400690,"mov rcx, qword ptr [rbp - 0xf8]","mov rdx, qword ptr [rbp - 0xf0]","mov eax, dword ptr [rbp - 0xe4]","mov esi, eax","mov edi, 4","mov eax, 0",call 0x400690,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400b0b,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x30","mov dword ptr [rbp - 0x24], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x24]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 7","mov eax, 0",call 0x400690,"mov edi, 0x400ee1",call 0x400620,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x24]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,"mov eax, dword ptr [rbp - 0xc]","mov dword ptr [rbp - 0x20], eax","mov eax, dword ptr [rbp - 0x20]","and eax, 0x7f","test eax, eax",jne 0x400b9d,"mov edi, 0x400eed",call 0x400620,"mov eax, dword ptr [rbp - 0xc]","mov esi, eax","mov edi, 0x400f06","mov eax, 0",call 0x400640,"mov edi, 0",call 0x4006c0,"mov eax, dword ptr [rbp - 0xc]","mov dword ptr [rbp - 0x10], eax","mov eax, dword ptr [rbp - 0x10]","movzx eax, al","cmp eax, 0x7f",jne 0x400bca,"mov edi, 0x400f11",call 0x400620,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400bd9,jmp 0x400bd4,"mov edi, 1",call 0x4006c0,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x20","mov dword ptr [rbp - 0x14], edi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","mov eax, dword ptr [rbp - 0x14]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 9","mov eax, 0",call 0x400690,"lea rcx, [rbp - 0xc]","mov eax, dword ptr [rbp - 0x14]","mov edx, 0","mov rsi, rcx","mov edi, eax",call 0x4006a0,nop ,"mov rax, qword ptr [rbp - 8]","xor rax, qword ptr fs:[0x28]",je 0x400c3e,call 0x400630,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0x10","mov dword ptr [rbp - 4], edi","mov eax, dword ptr [rbp - 4]","mov ecx, 0","mov edx, 0","mov esi, eax","mov edi, 0x11","mov eax, 0",call 0x400690,nop ,leave ,ret ,push rbp,"mov rbp, rsp","sub rsp, 0xd0","mov dword ptr [rbp - 0xc4], edi","mov qword ptr [rbp - 0xd0], rsi","mov rax, qword ptr fs:[0x28]","mov qword ptr [rbp - 8], rax","xor eax, eax","cmp dword ptr [rbp - 0xc4], 1",jg 0x400cba,"mov edi, 0x400f1d",call 0x400620,"mov edi, 0x400f38",call 0x400620,"mov edi, 1",call 0x4006c0,"mov rax, qword ptr [rbp - 0xd0]","add rax, 8","mov rax, qword ptr [rax]","mov rdi, rax",call 0x4006b0,"mov dword ptr [rbp - 0xb4], eax","mov rax, qword ptr [rbp - 0xd0]","add rax, 0x10","mov rax, qword ptr [rax]","mov edx, 0","mov esi, 0","mov rdi, rax",call 0x400670,"mov qword ptr [rbp - 0xa8], rax","mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400862,"mov rdx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rdx","mov edi, eax",call 0x4009ab,"mov qword ptr [rbp - 0xb0], rax","mov edi, 0x400f60",call 0x400620,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400b0d,"mov rdx, qword ptr [rbp - 0xb0]","mov rcx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rcx","mov edi, eax",call 0x400a38,"lea rax, [rbp - 0xa0]","mov rsi, rax","mov edi, 0x400f70",call 0x400e70,"test eax, eax",je 0x400db2,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x4007d6,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400bdb,"mov rdx, qword ptr [rbp - 0xa8]","mov eax, dword ptr [rbp - 0xb4]","mov rsi, rdx","mov edi, eax",call 0x4009ab,"mov qword ptr [rbp - 0xb0], rax",jmp 0x400d28,nop ,"mov edi, 0x400f77",call 0x400620,"mov eax, dword ptr [rbp - 0xb4]","mov edi, eax",call 0x400c40,"mov eax, 0","mov rcx, qword ptr [rbp - 8]","xor rcx, qword ptr fs:[0x28]",je 0x400de3,call 0x400630,leave ,ret ,nop word ptr cs:[rax + rax],nop ,push r15,push r14,"mov r15d, edi",push r13,push r12,"lea r12, [rip + 0x20100e]",push rbp,"lea rbp, [rip + 0x20100e]",push rbx,"mov r14, rsi","mov r13, rdx","sub rbp, r12","sub rsp, 8","sar rbp, 3",call 0x4005e8,"test rbp, rbp",je 0x400e46,"xor ebx, ebx",nop dword ptr [rax + rax],"mov rdx, r13","mov rsi, r14","mov edi, r15d",call qword ptr [r12 + rbx*8],"add rbx, 1","cmp rbx, rbp",jne 0x400e30,"add rsp, 8",pop rbx,pop rbp,pop r12,pop r13,pop r14,pop r15,ret ,nop ,nop word ptr cs:[rax + rax],ret ,nop word ptr cs:[rax + rax],nop dword ptr [rax],"mov rdx, rsi","mov rsi, rdi","mov edi, 1",jmp 0x400680
